
Atmega32_test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006b4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000728  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000013  00800060  00800060  00000728  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000728  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000758  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00000794  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016a6  00000000  00000000  000008c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a0e  00000000  00000000  00001f6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b87  00000000  00000000  00002978  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003bc  00000000  00000000  00003500  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a71  00000000  00000000  000038bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000753  00000000  00000000  0000432d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00004a80  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__vector_13>
  38:	0c 94 09 03 	jmp	0x612	; 0x612 <__vector_14>
  3c:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__vector_15>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 eb       	ldi	r30, 0xB4	; 180
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a3 37       	cpi	r26, 0x73	; 115
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 2d 03 	call	0x65a	; 0x65a <main>
  8a:	0c 94 58 03 	jmp	0x6b0	; 0x6b0 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <init>:
//_____________________________ MACRO Definition _______________________________
#define Master			0
//==============================================================================

void init(void)
{
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	00 d0       	rcall	.+0      	; 0x98 <init+0x6>
  98:	1f 92       	push	r1
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
// Confige The I2C
	i2c_confige.En_intrrupt = I2C_interrupt_Dis;
  9e:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end+0x4>
	i2c_confige.Prescaler = PR_1;
  a2:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__data_end+0x5>
	i2c_confige.SCL_Freq = 0x48;
  a6:	88 e4       	ldi	r24, 0x48	; 72
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	a0 e0       	ldi	r26, 0x00	; 0
  ac:	b0 e0       	ldi	r27, 0x00	; 0
  ae:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_end>
  b2:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_end+0x1>
  b6:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__data_end+0x2>
  ba:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__data_end+0x3>
	i2c_confige.Slave_Add = 0xD0;
  be:	80 ed       	ldi	r24, 0xD0	; 208
  c0:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__data_end+0x6>
	TWAR = i2c_confige.Slave_Add;
  c4:	82 e2       	ldi	r24, 0x22	; 34
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <__data_end+0x6>
  cc:	fc 01       	movw	r30, r24
  ce:	20 83       	st	Z, r18
	I2C_Init(&i2c_confige);
  d0:	80 e6       	ldi	r24, 0x60	; 96
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	0e 94 b2 01 	call	0x364	; 0x364 <I2C_Init>

// Confige 7 segment
	GPIO_config gpio_config = {0};
  d8:	19 82       	std	Y+1, r1	; 0x01
  da:	1a 82       	std	Y+2, r1	; 0x02
  dc:	1b 82       	std	Y+3, r1	; 0x03
	gpio_config.mode = OUTPUT;
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	8a 83       	std	Y+2, r24	; 0x02
	gpio_config.pin = ALL_PINS; 
  e2:	8f ef       	ldi	r24, 0xFF	; 255
  e4:	89 83       	std	Y+1, r24	; 0x01
	Init_GPIO(PORT_A, &gpio_config);
  e6:	ce 01       	movw	r24, r28
  e8:	01 96       	adiw	r24, 0x01	; 1
  ea:	bc 01       	movw	r22, r24
  ec:	89 e3       	ldi	r24, 0x39	; 57
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 98 00 	call	0x130	; 0x130 <Init_GPIO>


}
  f4:	00 00       	nop
  f6:	0f 90       	pop	r0
  f8:	0f 90       	pop	r0
  fa:	0f 90       	pop	r0
  fc:	df 91       	pop	r29
  fe:	cf 91       	pop	r28
 100:	08 95       	ret

00000102 <program>:

uint8_t ch = 0;

void program(void)
{ 	
 102:	cf 93       	push	r28
 104:	df 93       	push	r29
 106:	cd b7       	in	r28, 0x3d	; 61
 108:	de b7       	in	r29, 0x3e	; 62
		while((TWSR & 0xF8) != SR_MW_ADD_ACK);
		I2C_Write(ch++);
		while((TWSR & 0xF8) != SR_MW_DATA_ACK);
		I2C_Send_Stop();
	#else	
		ch = I2C_Read();
 10a:	0e 94 27 02 	call	0x44e	; 0x44e <I2C_Read>
 10e:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <ch>
		I2C_Write(ch);
 112:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <ch>
 116:	0e 94 0b 02 	call	0x416	; 0x416 <I2C_Write>
		Write_Port_Register(PORT_A, ch);
 11a:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <ch>
 11e:	68 2f       	mov	r22, r24
 120:	89 e3       	ldi	r24, 0x39	; 57
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	0e 94 8c 01 	call	0x318	; 0x318 <Write_Port_Register>
	#endif
}
 128:	00 00       	nop
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	08 95       	ret

00000130 <Init_GPIO>:
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	cd b7       	in	r28, 0x3d	; 61
 136:	de b7       	in	r29, 0x3e	; 62
 138:	28 97       	sbiw	r28, 0x08	; 8
 13a:	0f b6       	in	r0, 0x3f	; 63
 13c:	f8 94       	cli
 13e:	de bf       	out	0x3e, r29	; 62
 140:	0f be       	out	0x3f, r0	; 63
 142:	cd bf       	out	0x3d, r28	; 61
 144:	9e 83       	std	Y+6, r25	; 0x06
 146:	8d 83       	std	Y+5, r24	; 0x05
 148:	78 87       	std	Y+8, r23	; 0x08
 14a:	6f 83       	std	Y+7, r22	; 0x07
 14c:	8d 81       	ldd	r24, Y+5	; 0x05
 14e:	9e 81       	ldd	r25, Y+6	; 0x06
 150:	c9 97       	sbiw	r24, 0x39	; 57
 152:	71 f0       	breq	.+28     	; 0x170 <Init_GPIO+0x40>
 154:	8d 81       	ldd	r24, Y+5	; 0x05
 156:	9e 81       	ldd	r25, Y+6	; 0x06
 158:	c6 97       	sbiw	r24, 0x36	; 54
 15a:	51 f0       	breq	.+20     	; 0x170 <Init_GPIO+0x40>
 15c:	8d 81       	ldd	r24, Y+5	; 0x05
 15e:	9e 81       	ldd	r25, Y+6	; 0x06
 160:	c3 97       	sbiw	r24, 0x33	; 51
 162:	31 f0       	breq	.+12     	; 0x170 <Init_GPIO+0x40>
 164:	8d 81       	ldd	r24, Y+5	; 0x05
 166:	9e 81       	ldd	r25, Y+6	; 0x06
 168:	c0 97       	sbiw	r24, 0x30	; 48
 16a:	11 f0       	breq	.+4      	; 0x170 <Init_GPIO+0x40>
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	cb c0       	rjmp	.+406    	; 0x306 <Init_GPIO+0x1d6>
 170:	1a 82       	std	Y+2, r1	; 0x02
 172:	1b 82       	std	Y+3, r1	; 0x03
 174:	1c 82       	std	Y+4, r1	; 0x04
 176:	19 82       	std	Y+1, r1	; 0x01
 178:	c1 c0       	rjmp	.+386    	; 0x2fc <Init_GPIO+0x1cc>
 17a:	89 81       	ldd	r24, Y+1	; 0x01
 17c:	28 2f       	mov	r18, r24
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <Init_GPIO+0x5a>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	2a 95       	dec	r18
 18c:	e2 f7       	brpl	.-8      	; 0x186 <Init_GPIO+0x56>
 18e:	8a 83       	std	Y+2, r24	; 0x02
 190:	8f 81       	ldd	r24, Y+7	; 0x07
 192:	98 85       	ldd	r25, Y+8	; 0x08
 194:	fc 01       	movw	r30, r24
 196:	90 81       	ld	r25, Z
 198:	8a 81       	ldd	r24, Y+2	; 0x02
 19a:	89 23       	and	r24, r25
 19c:	8b 83       	std	Y+3, r24	; 0x03
 19e:	9a 81       	ldd	r25, Y+2	; 0x02
 1a0:	8b 81       	ldd	r24, Y+3	; 0x03
 1a2:	98 17       	cp	r25, r24
 1a4:	09 f0       	breq	.+2      	; 0x1a8 <Init_GPIO+0x78>
 1a6:	a7 c0       	rjmp	.+334    	; 0x2f6 <Init_GPIO+0x1c6>
 1a8:	8f 81       	ldd	r24, Y+7	; 0x07
 1aa:	98 85       	ldd	r25, Y+8	; 0x08
 1ac:	fc 01       	movw	r30, r24
 1ae:	81 81       	ldd	r24, Z+1	; 0x01
 1b0:	81 30       	cpi	r24, 0x01	; 1
 1b2:	79 f5       	brne	.+94     	; 0x212 <Init_GPIO+0xe2>
 1b4:	8d 81       	ldd	r24, Y+5	; 0x05
 1b6:	9e 81       	ldd	r25, Y+6	; 0x06
 1b8:	fc 01       	movw	r30, r24
 1ba:	81 81       	ldd	r24, Z+1	; 0x01
 1bc:	8c 83       	std	Y+4, r24	; 0x04
 1be:	8f 81       	ldd	r24, Y+7	; 0x07
 1c0:	98 85       	ldd	r25, Y+8	; 0x08
 1c2:	fc 01       	movw	r30, r24
 1c4:	81 81       	ldd	r24, Z+1	; 0x01
 1c6:	88 2f       	mov	r24, r24
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	29 81       	ldd	r18, Y+1	; 0x01
 1cc:	22 2f       	mov	r18, r18
 1ce:	30 e0       	ldi	r19, 0x00	; 0
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <Init_GPIO+0xa6>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	2a 95       	dec	r18
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <Init_GPIO+0xa2>
 1da:	98 2f       	mov	r25, r24
 1dc:	90 95       	com	r25
 1de:	8c 81       	ldd	r24, Y+4	; 0x04
 1e0:	89 23       	and	r24, r25
 1e2:	8c 83       	std	Y+4, r24	; 0x04
 1e4:	8f 81       	ldd	r24, Y+7	; 0x07
 1e6:	98 85       	ldd	r25, Y+8	; 0x08
 1e8:	fc 01       	movw	r30, r24
 1ea:	81 81       	ldd	r24, Z+1	; 0x01
 1ec:	88 2f       	mov	r24, r24
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	29 81       	ldd	r18, Y+1	; 0x01
 1f2:	22 2f       	mov	r18, r18
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <Init_GPIO+0xcc>
 1f8:	88 0f       	add	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	2a 95       	dec	r18
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <Init_GPIO+0xc8>
 200:	98 2f       	mov	r25, r24
 202:	8c 81       	ldd	r24, Y+4	; 0x04
 204:	89 2b       	or	r24, r25
 206:	8c 83       	std	Y+4, r24	; 0x04
 208:	8d 81       	ldd	r24, Y+5	; 0x05
 20a:	9e 81       	ldd	r25, Y+6	; 0x06
 20c:	2c 81       	ldd	r18, Y+4	; 0x04
 20e:	fc 01       	movw	r30, r24
 210:	21 83       	std	Z+1, r18	; 0x01
 212:	8f 81       	ldd	r24, Y+7	; 0x07
 214:	98 85       	ldd	r25, Y+8	; 0x08
 216:	fc 01       	movw	r30, r24
 218:	81 81       	ldd	r24, Z+1	; 0x01
 21a:	88 23       	and	r24, r24
 21c:	0c f0       	brlt	.+2      	; 0x220 <Init_GPIO+0xf0>
 21e:	6b c0       	rjmp	.+214    	; 0x2f6 <Init_GPIO+0x1c6>
 220:	8b 81       	ldd	r24, Y+3	; 0x03
 222:	81 30       	cpi	r24, 0x01	; 1
 224:	19 f0       	breq	.+6      	; 0x22c <Init_GPIO+0xfc>
 226:	8b 81       	ldd	r24, Y+3	; 0x03
 228:	82 30       	cpi	r24, 0x02	; 2
 22a:	b9 f5       	brne	.+110    	; 0x29a <Init_GPIO+0x16a>
 22c:	85 e5       	ldi	r24, 0x55	; 85
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	fc 01       	movw	r30, r24
 232:	80 81       	ld	r24, Z
 234:	8c 83       	std	Y+4, r24	; 0x04
 236:	8f 81       	ldd	r24, Y+7	; 0x07
 238:	98 85       	ldd	r25, Y+8	; 0x08
 23a:	fc 01       	movw	r30, r24
 23c:	81 81       	ldd	r24, Z+1	; 0x01
 23e:	88 2f       	mov	r24, r24
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	80 78       	andi	r24, 0x80	; 128
 244:	99 27       	eor	r25, r25
 246:	29 81       	ldd	r18, Y+1	; 0x01
 248:	22 2f       	mov	r18, r18
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	22 0f       	add	r18, r18
 24e:	33 1f       	adc	r19, r19
 250:	02 c0       	rjmp	.+4      	; 0x256 <Init_GPIO+0x126>
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	2a 95       	dec	r18
 258:	e2 f7       	brpl	.-8      	; 0x252 <Init_GPIO+0x122>
 25a:	98 2f       	mov	r25, r24
 25c:	90 95       	com	r25
 25e:	8c 81       	ldd	r24, Y+4	; 0x04
 260:	89 23       	and	r24, r25
 262:	8c 83       	std	Y+4, r24	; 0x04
 264:	8f 81       	ldd	r24, Y+7	; 0x07
 266:	98 85       	ldd	r25, Y+8	; 0x08
 268:	fc 01       	movw	r30, r24
 26a:	81 81       	ldd	r24, Z+1	; 0x01
 26c:	88 2f       	mov	r24, r24
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	80 78       	andi	r24, 0x80	; 128
 272:	99 27       	eor	r25, r25
 274:	29 81       	ldd	r18, Y+1	; 0x01
 276:	22 2f       	mov	r18, r18
 278:	30 e0       	ldi	r19, 0x00	; 0
 27a:	22 0f       	add	r18, r18
 27c:	33 1f       	adc	r19, r19
 27e:	02 c0       	rjmp	.+4      	; 0x284 <Init_GPIO+0x154>
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	2a 95       	dec	r18
 286:	e2 f7       	brpl	.-8      	; 0x280 <Init_GPIO+0x150>
 288:	98 2f       	mov	r25, r24
 28a:	8c 81       	ldd	r24, Y+4	; 0x04
 28c:	89 2b       	or	r24, r25
 28e:	8c 83       	std	Y+4, r24	; 0x04
 290:	85 e5       	ldi	r24, 0x55	; 85
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	2c 81       	ldd	r18, Y+4	; 0x04
 296:	fc 01       	movw	r30, r24
 298:	20 83       	st	Z, r18
 29a:	8b 81       	ldd	r24, Y+3	; 0x03
 29c:	84 30       	cpi	r24, 0x04	; 4
 29e:	59 f5       	brne	.+86     	; 0x2f6 <Init_GPIO+0x1c6>
 2a0:	84 e5       	ldi	r24, 0x54	; 84
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	fc 01       	movw	r30, r24
 2a6:	80 81       	ld	r24, Z
 2a8:	8c 83       	std	Y+4, r24	; 0x04
 2aa:	8f 81       	ldd	r24, Y+7	; 0x07
 2ac:	98 85       	ldd	r25, Y+8	; 0x08
 2ae:	fc 01       	movw	r30, r24
 2b0:	81 81       	ldd	r24, Z+1	; 0x01
 2b2:	82 78       	andi	r24, 0x82	; 130
 2b4:	82 95       	swap	r24
 2b6:	88 0f       	add	r24, r24
 2b8:	80 7e       	andi	r24, 0xE0	; 224
 2ba:	80 95       	com	r24
 2bc:	98 2f       	mov	r25, r24
 2be:	8c 81       	ldd	r24, Y+4	; 0x04
 2c0:	89 23       	and	r24, r25
 2c2:	8c 83       	std	Y+4, r24	; 0x04
 2c4:	8f 81       	ldd	r24, Y+7	; 0x07
 2c6:	98 85       	ldd	r25, Y+8	; 0x08
 2c8:	fc 01       	movw	r30, r24
 2ca:	81 81       	ldd	r24, Z+1	; 0x01
 2cc:	88 2f       	mov	r24, r24
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	82 78       	andi	r24, 0x82	; 130
 2d2:	99 27       	eor	r25, r25
 2d4:	88 0f       	add	r24, r24
 2d6:	99 1f       	adc	r25, r25
 2d8:	82 95       	swap	r24
 2da:	92 95       	swap	r25
 2dc:	90 7f       	andi	r25, 0xF0	; 240
 2de:	98 27       	eor	r25, r24
 2e0:	80 7f       	andi	r24, 0xF0	; 240
 2e2:	98 27       	eor	r25, r24
 2e4:	98 2f       	mov	r25, r24
 2e6:	8c 81       	ldd	r24, Y+4	; 0x04
 2e8:	89 2b       	or	r24, r25
 2ea:	8c 83       	std	Y+4, r24	; 0x04
 2ec:	84 e5       	ldi	r24, 0x54	; 84
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	2c 81       	ldd	r18, Y+4	; 0x04
 2f2:	fc 01       	movw	r30, r24
 2f4:	20 83       	st	Z, r18
 2f6:	89 81       	ldd	r24, Y+1	; 0x01
 2f8:	8f 5f       	subi	r24, 0xFF	; 255
 2fa:	89 83       	std	Y+1, r24	; 0x01
 2fc:	89 81       	ldd	r24, Y+1	; 0x01
 2fe:	88 30       	cpi	r24, 0x08	; 8
 300:	08 f4       	brcc	.+2      	; 0x304 <Init_GPIO+0x1d4>
 302:	3b cf       	rjmp	.-394    	; 0x17a <Init_GPIO+0x4a>
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	28 96       	adiw	r28, 0x08	; 8
 308:	0f b6       	in	r0, 0x3f	; 63
 30a:	f8 94       	cli
 30c:	de bf       	out	0x3e, r29	; 62
 30e:	0f be       	out	0x3f, r0	; 63
 310:	cd bf       	out	0x3d, r28	; 61
 312:	df 91       	pop	r29
 314:	cf 91       	pop	r28
 316:	08 95       	ret

00000318 <Write_Port_Register>:
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	00 d0       	rcall	.+0      	; 0x31e <Write_Port_Register+0x6>
 31e:	1f 92       	push	r1
 320:	cd b7       	in	r28, 0x3d	; 61
 322:	de b7       	in	r29, 0x3e	; 62
 324:	9a 83       	std	Y+2, r25	; 0x02
 326:	89 83       	std	Y+1, r24	; 0x01
 328:	6b 83       	std	Y+3, r22	; 0x03
 32a:	89 81       	ldd	r24, Y+1	; 0x01
 32c:	9a 81       	ldd	r25, Y+2	; 0x02
 32e:	c9 97       	sbiw	r24, 0x39	; 57
 330:	61 f0       	breq	.+24     	; 0x34a <Write_Port_Register+0x32>
 332:	89 81       	ldd	r24, Y+1	; 0x01
 334:	9a 81       	ldd	r25, Y+2	; 0x02
 336:	c6 97       	sbiw	r24, 0x36	; 54
 338:	41 f0       	breq	.+16     	; 0x34a <Write_Port_Register+0x32>
 33a:	89 81       	ldd	r24, Y+1	; 0x01
 33c:	9a 81       	ldd	r25, Y+2	; 0x02
 33e:	c3 97       	sbiw	r24, 0x33	; 51
 340:	21 f0       	breq	.+8      	; 0x34a <Write_Port_Register+0x32>
 342:	89 81       	ldd	r24, Y+1	; 0x01
 344:	9a 81       	ldd	r25, Y+2	; 0x02
 346:	c0 97       	sbiw	r24, 0x30	; 48
 348:	31 f4       	brne	.+12     	; 0x356 <Write_Port_Register+0x3e>
 34a:	89 81       	ldd	r24, Y+1	; 0x01
 34c:	9a 81       	ldd	r25, Y+2	; 0x02
 34e:	2b 81       	ldd	r18, Y+3	; 0x03
 350:	fc 01       	movw	r30, r24
 352:	22 83       	std	Z+2, r18	; 0x02
 354:	01 c0       	rjmp	.+2      	; 0x358 <Write_Port_Register+0x40>
 356:	00 00       	nop
 358:	0f 90       	pop	r0
 35a:	0f 90       	pop	r0
 35c:	0f 90       	pop	r0
 35e:	df 91       	pop	r29
 360:	cf 91       	pop	r28
 362:	08 95       	ret

00000364 <I2C_Init>:
  *                  1 : Success
 */
uint8_t I2C_Send_Stop(void)
{
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
}
 364:	0f 93       	push	r16
 366:	1f 93       	push	r17
 368:	cf 93       	push	r28
 36a:	df 93       	push	r29
 36c:	00 d0       	rcall	.+0      	; 0x36e <I2C_Init+0xa>
 36e:	cd b7       	in	r28, 0x3d	; 61
 370:	de b7       	in	r29, 0x3e	; 62
 372:	9a 83       	std	Y+2, r25	; 0x02
 374:	89 83       	std	Y+1, r24	; 0x01
 376:	00 e2       	ldi	r16, 0x20	; 32
 378:	10 e0       	ldi	r17, 0x00	; 0
 37a:	89 81       	ldd	r24, Y+1	; 0x01
 37c:	9a 81       	ldd	r25, Y+2	; 0x02
 37e:	fc 01       	movw	r30, r24
 380:	20 81       	ld	r18, Z
 382:	31 81       	ldd	r19, Z+1	; 0x01
 384:	42 81       	ldd	r20, Z+2	; 0x02
 386:	53 81       	ldd	r21, Z+3	; 0x03
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	94 e2       	ldi	r25, 0x24	; 36
 38c:	a4 ef       	ldi	r26, 0xF4	; 244
 38e:	b0 e0       	ldi	r27, 0x00	; 0
 390:	bc 01       	movw	r22, r24
 392:	cd 01       	movw	r24, r26
 394:	0e 94 36 03 	call	0x66c	; 0x66c <__udivmodsi4>
 398:	da 01       	movw	r26, r20
 39a:	c9 01       	movw	r24, r18
 39c:	40 97       	sbiw	r24, 0x10	; 16
 39e:	a1 09       	sbc	r26, r1
 3a0:	b1 09       	sbc	r27, r1
 3a2:	29 81       	ldd	r18, Y+1	; 0x01
 3a4:	3a 81       	ldd	r19, Y+2	; 0x02
 3a6:	f9 01       	movw	r30, r18
 3a8:	25 81       	ldd	r18, Z+5	; 0x05
 3aa:	22 2f       	mov	r18, r18
 3ac:	30 e0       	ldi	r19, 0x00	; 0
 3ae:	22 0f       	add	r18, r18
 3b0:	33 1f       	adc	r19, r19
 3b2:	03 2e       	mov	r0, r19
 3b4:	00 0c       	add	r0, r0
 3b6:	44 0b       	sbc	r20, r20
 3b8:	55 0b       	sbc	r21, r21
 3ba:	bc 01       	movw	r22, r24
 3bc:	cd 01       	movw	r24, r26
 3be:	0e 94 36 03 	call	0x66c	; 0x66c <__udivmodsi4>
 3c2:	da 01       	movw	r26, r20
 3c4:	c9 01       	movw	r24, r18
 3c6:	f8 01       	movw	r30, r16
 3c8:	80 83       	st	Z, r24
 3ca:	81 e2       	ldi	r24, 0x21	; 33
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	29 81       	ldd	r18, Y+1	; 0x01
 3d0:	3a 81       	ldd	r19, Y+2	; 0x02
 3d2:	f9 01       	movw	r30, r18
 3d4:	25 81       	ldd	r18, Z+5	; 0x05
 3d6:	fc 01       	movw	r30, r24
 3d8:	20 83       	st	Z, r18
 3da:	86 e5       	ldi	r24, 0x56	; 86
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	29 81       	ldd	r18, Y+1	; 0x01
 3e0:	3a 81       	ldd	r19, Y+2	; 0x02
 3e2:	f9 01       	movw	r30, r18
 3e4:	24 81       	ldd	r18, Z+4	; 0x04
 3e6:	fc 01       	movw	r30, r24
 3e8:	20 83       	st	Z, r18
 3ea:	89 81       	ldd	r24, Y+1	; 0x01
 3ec:	9a 81       	ldd	r25, Y+2	; 0x02
 3ee:	fc 01       	movw	r30, r24
 3f0:	86 81       	ldd	r24, Z+6	; 0x06
 3f2:	88 23       	and	r24, r24
 3f4:	41 f0       	breq	.+16     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3f6:	82 e2       	ldi	r24, 0x22	; 34
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	29 81       	ldd	r18, Y+1	; 0x01
 3fc:	3a 81       	ldd	r19, Y+2	; 0x02
 3fe:	f9 01       	movw	r30, r18
 400:	26 81       	ldd	r18, Z+6	; 0x06
 402:	fc 01       	movw	r30, r24
 404:	20 83       	st	Z, r18
 406:	81 e0       	ldi	r24, 0x01	; 1
 408:	0f 90       	pop	r0
 40a:	0f 90       	pop	r0
 40c:	df 91       	pop	r29
 40e:	cf 91       	pop	r28
 410:	1f 91       	pop	r17
 412:	0f 91       	pop	r16
 414:	08 95       	ret

00000416 <I2C_Write>:
 * @param data send value data To slave
 * @return uint8_t  0 : Fail
 *                  1 : Success
 */
uint8_t I2C_Write(uint8_t data)
{
 416:	cf 93       	push	r28
 418:	df 93       	push	r29
 41a:	1f 92       	push	r1
 41c:	cd b7       	in	r28, 0x3d	; 61
 41e:	de b7       	in	r29, 0x3e	; 62
 420:	89 83       	std	Y+1, r24	; 0x01
    TWDR = data;
 422:	83 e2       	ldi	r24, 0x23	; 35
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	29 81       	ldd	r18, Y+1	; 0x01
 428:	fc 01       	movw	r30, r24
 42a:	20 83       	st	Z, r18
    TWCR = (1 << TWINT) | (1 << TWEN);
 42c:	86 e5       	ldi	r24, 0x56	; 86
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	24 e8       	ldi	r18, 0x84	; 132
 432:	fc 01       	movw	r30, r24
 434:	20 83       	st	Z, r18
    while (!(TWCR & (1 << TWINT)));
 436:	00 00       	nop
 438:	86 e5       	ldi	r24, 0x56	; 86
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	fc 01       	movw	r30, r24
 43e:	80 81       	ld	r24, Z
 440:	88 23       	and	r24, r24
 442:	d4 f7       	brge	.-12     	; 0x438 <I2C_Write+0x22>
}
 444:	00 00       	nop
 446:	0f 90       	pop	r0
 448:	df 91       	pop	r29
 44a:	cf 91       	pop	r28
 44c:	08 95       	ret

0000044e <I2C_Read>:
/**
 * @brief This function is used to Read Data & Address become form master
 * @return uint8_t return the received data form master
 */
uint8_t I2C_Read()
{
 44e:	cf 93       	push	r28
 450:	df 93       	push	r29
 452:	cd b7       	in	r28, 0x3d	; 61
 454:	de b7       	in	r29, 0x3e	; 62
    // For Read Add data become form Master
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
 456:	86 e5       	ldi	r24, 0x56	; 86
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	24 ec       	ldi	r18, 0xC4	; 196
 45c:	fc 01       	movw	r30, r24
 45e:	20 83       	st	Z, r18
    while (!(TWCR & (1 << TWINT)));
 460:	00 00       	nop
 462:	86 e5       	ldi	r24, 0x56	; 86
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	fc 01       	movw	r30, r24
 468:	80 81       	ld	r24, Z
 46a:	88 23       	and	r24, r24
 46c:	d4 f7       	brge	.-12     	; 0x462 <I2C_Read+0x14>

    return TWDR;
 46e:	83 e2       	ldi	r24, 0x23	; 35
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	fc 01       	movw	r30, r24
 474:	80 81       	ld	r24, Z
 476:	df 91       	pop	r29
 478:	cf 91       	pop	r28
 47a:	08 95       	ret

0000047c <Uart_Receive>:
 47c:	cf 93       	push	r28
 47e:	df 93       	push	r29
 480:	00 d0       	rcall	.+0      	; 0x482 <Uart_Receive+0x6>
 482:	00 d0       	rcall	.+0      	; 0x484 <Uart_Receive+0x8>
 484:	00 d0       	rcall	.+0      	; 0x486 <Uart_Receive+0xa>
 486:	cd b7       	in	r28, 0x3d	; 61
 488:	de b7       	in	r29, 0x3e	; 62
 48a:	9e 83       	std	Y+6, r25	; 0x06
 48c:	8d 83       	std	Y+5, r24	; 0x05
 48e:	19 82       	std	Y+1, r1	; 0x01
 490:	66 c0       	rjmp	.+204    	; 0x55e <Uart_Receive+0xe2>
 492:	00 00       	nop
 494:	8b e2       	ldi	r24, 0x2B	; 43
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	fc 01       	movw	r30, r24
 49a:	80 81       	ld	r24, Z
 49c:	88 23       	and	r24, r24
 49e:	d4 f7       	brge	.-12     	; 0x494 <Uart_Receive+0x18>
 4a0:	8b e2       	ldi	r24, 0x2B	; 43
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	fc 01       	movw	r30, r24
 4a6:	80 81       	ld	r24, Z
 4a8:	8a 83       	std	Y+2, r24	; 0x02
 4aa:	8a e2       	ldi	r24, 0x2A	; 42
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	fc 01       	movw	r30, r24
 4b0:	80 81       	ld	r24, Z
 4b2:	8b 83       	std	Y+3, r24	; 0x03
 4b4:	8c e2       	ldi	r24, 0x2C	; 44
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	fc 01       	movw	r30, r24
 4ba:	80 81       	ld	r24, Z
 4bc:	8c 83       	std	Y+4, r24	; 0x04
 4be:	8a 81       	ldd	r24, Y+2	; 0x02
 4c0:	88 2f       	mov	r24, r24
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	8c 71       	andi	r24, 0x1C	; 28
 4c6:	99 27       	eor	r25, r25
 4c8:	89 2b       	or	r24, r25
 4ca:	19 f0       	breq	.+6      	; 0x4d2 <Uart_Receive+0x56>
 4cc:	8f ef       	ldi	r24, 0xFF	; 255
 4ce:	9f ef       	ldi	r25, 0xFF	; 255
 4d0:	55 c0       	rjmp	.+170    	; 0x57c <Uart_Receive+0x100>
 4d2:	8b 81       	ldd	r24, Y+3	; 0x03
 4d4:	86 95       	lsr	r24
 4d6:	81 70       	andi	r24, 0x01	; 1
 4d8:	8b 83       	std	Y+3, r24	; 0x03
 4da:	89 81       	ldd	r24, Y+1	; 0x01
 4dc:	8f 30       	cpi	r24, 0x0F	; 15
 4de:	71 f0       	breq	.+28     	; 0x4fc <Uart_Receive+0x80>
 4e0:	8d 81       	ldd	r24, Y+5	; 0x05
 4e2:	9e 81       	ldd	r25, Y+6	; 0x06
 4e4:	fc 01       	movw	r30, r24
 4e6:	21 85       	ldd	r18, Z+9	; 0x09
 4e8:	32 85       	ldd	r19, Z+10	; 0x0a
 4ea:	89 81       	ldd	r24, Y+1	; 0x01
 4ec:	88 2f       	mov	r24, r24
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	82 0f       	add	r24, r18
 4f2:	93 1f       	adc	r25, r19
 4f4:	fc 01       	movw	r30, r24
 4f6:	80 81       	ld	r24, Z
 4f8:	83 32       	cpi	r24, 0x23	; 35
 4fa:	09 f4       	brne	.+2      	; 0x4fe <Uart_Receive+0x82>
 4fc:	19 82       	std	Y+1, r1	; 0x01
 4fe:	8d 81       	ldd	r24, Y+5	; 0x05
 500:	9e 81       	ldd	r25, Y+6	; 0x06
 502:	fc 01       	movw	r30, r24
 504:	21 85       	ldd	r18, Z+9	; 0x09
 506:	32 85       	ldd	r19, Z+10	; 0x0a
 508:	89 81       	ldd	r24, Y+1	; 0x01
 50a:	88 2f       	mov	r24, r24
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	82 0f       	add	r24, r18
 510:	93 1f       	adc	r25, r19
 512:	2b 81       	ldd	r18, Y+3	; 0x03
 514:	22 2f       	mov	r18, r18
 516:	30 e0       	ldi	r19, 0x00	; 0
 518:	32 2f       	mov	r19, r18
 51a:	22 27       	eor	r18, r18
 51c:	32 2f       	mov	r19, r18
 51e:	2c 81       	ldd	r18, Y+4	; 0x04
 520:	23 2b       	or	r18, r19
 522:	fc 01       	movw	r30, r24
 524:	20 83       	st	Z, r18
 526:	8d 81       	ldd	r24, Y+5	; 0x05
 528:	9e 81       	ldd	r25, Y+6	; 0x06
 52a:	fc 01       	movw	r30, r24
 52c:	21 85       	ldd	r18, Z+9	; 0x09
 52e:	32 85       	ldd	r19, Z+10	; 0x0a
 530:	89 81       	ldd	r24, Y+1	; 0x01
 532:	88 2f       	mov	r24, r24
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	82 0f       	add	r24, r18
 538:	93 1f       	adc	r25, r19
 53a:	fc 01       	movw	r30, r24
 53c:	80 81       	ld	r24, Z
 53e:	83 32       	cpi	r24, 0x23	; 35
 540:	59 f4       	brne	.+22     	; 0x558 <Uart_Receive+0xdc>
 542:	8d 81       	ldd	r24, Y+5	; 0x05
 544:	9e 81       	ldd	r25, Y+6	; 0x06
 546:	fc 01       	movw	r30, r24
 548:	21 85       	ldd	r18, Z+9	; 0x09
 54a:	32 85       	ldd	r19, Z+10	; 0x0a
 54c:	89 81       	ldd	r24, Y+1	; 0x01
 54e:	88 2f       	mov	r24, r24
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	82 0f       	add	r24, r18
 554:	93 1f       	adc	r25, r19
 556:	12 c0       	rjmp	.+36     	; 0x57c <Uart_Receive+0x100>
 558:	89 81       	ldd	r24, Y+1	; 0x01
 55a:	8f 5f       	subi	r24, 0xFF	; 255
 55c:	89 83       	std	Y+1, r24	; 0x01
 55e:	8d 81       	ldd	r24, Y+5	; 0x05
 560:	9e 81       	ldd	r25, Y+6	; 0x06
 562:	fc 01       	movw	r30, r24
 564:	21 85       	ldd	r18, Z+9	; 0x09
 566:	32 85       	ldd	r19, Z+10	; 0x0a
 568:	89 81       	ldd	r24, Y+1	; 0x01
 56a:	88 2f       	mov	r24, r24
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	82 0f       	add	r24, r18
 570:	93 1f       	adc	r25, r19
 572:	fc 01       	movw	r30, r24
 574:	80 81       	ld	r24, Z
 576:	83 32       	cpi	r24, 0x23	; 35
 578:	09 f0       	breq	.+2      	; 0x57c <Uart_Receive+0x100>
 57a:	8b cf       	rjmp	.-234    	; 0x492 <Uart_Receive+0x16>
 57c:	26 96       	adiw	r28, 0x06	; 6
 57e:	0f b6       	in	r0, 0x3f	; 63
 580:	f8 94       	cli
 582:	de bf       	out	0x3e, r29	; 62
 584:	0f be       	out	0x3f, r0	; 63
 586:	cd bf       	out	0x3d, r28	; 61
 588:	df 91       	pop	r29
 58a:	cf 91       	pop	r28
 58c:	08 95       	ret

0000058e <__vector_13>:
 58e:	1f 92       	push	r1
 590:	0f 92       	push	r0
 592:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 596:	0f 92       	push	r0
 598:	11 24       	eor	r1, r1
 59a:	2f 93       	push	r18
 59c:	3f 93       	push	r19
 59e:	4f 93       	push	r20
 5a0:	5f 93       	push	r21
 5a2:	6f 93       	push	r22
 5a4:	7f 93       	push	r23
 5a6:	8f 93       	push	r24
 5a8:	9f 93       	push	r25
 5aa:	af 93       	push	r26
 5ac:	bf 93       	push	r27
 5ae:	ef 93       	push	r30
 5b0:	ff 93       	push	r31
 5b2:	cf 93       	push	r28
 5b4:	df 93       	push	r29
 5b6:	cd b7       	in	r28, 0x3d	; 61
 5b8:	de b7       	in	r29, 0x3e	; 62
 5ba:	88 e6       	ldi	r24, 0x68	; 104
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	0e 94 3e 02 	call	0x47c	; 0x47c <Uart_Receive>
 5c2:	00 00       	nop
 5c4:	df 91       	pop	r29
 5c6:	cf 91       	pop	r28
 5c8:	ff 91       	pop	r31
 5ca:	ef 91       	pop	r30
 5cc:	bf 91       	pop	r27
 5ce:	af 91       	pop	r26
 5d0:	9f 91       	pop	r25
 5d2:	8f 91       	pop	r24
 5d4:	7f 91       	pop	r23
 5d6:	6f 91       	pop	r22
 5d8:	5f 91       	pop	r21
 5da:	4f 91       	pop	r20
 5dc:	3f 91       	pop	r19
 5de:	2f 91       	pop	r18
 5e0:	0f 90       	pop	r0
 5e2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 5e6:	0f 90       	pop	r0
 5e8:	1f 90       	pop	r1
 5ea:	18 95       	reti

000005ec <__vector_15>:
 5ec:	1f 92       	push	r1
 5ee:	0f 92       	push	r0
 5f0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 5f4:	0f 92       	push	r0
 5f6:	11 24       	eor	r1, r1
 5f8:	cf 93       	push	r28
 5fa:	df 93       	push	r29
 5fc:	cd b7       	in	r28, 0x3d	; 61
 5fe:	de b7       	in	r29, 0x3e	; 62
 600:	00 00       	nop
 602:	df 91       	pop	r29
 604:	cf 91       	pop	r28
 606:	0f 90       	pop	r0
 608:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 60c:	0f 90       	pop	r0
 60e:	1f 90       	pop	r1
 610:	18 95       	reti

00000612 <__vector_14>:
 612:	1f 92       	push	r1
 614:	0f 92       	push	r0
 616:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 61a:	0f 92       	push	r0
 61c:	11 24       	eor	r1, r1
 61e:	2f 93       	push	r18
 620:	8f 93       	push	r24
 622:	9f 93       	push	r25
 624:	ef 93       	push	r30
 626:	ff 93       	push	r31
 628:	cf 93       	push	r28
 62a:	df 93       	push	r29
 62c:	cd b7       	in	r28, 0x3d	; 61
 62e:	de b7       	in	r29, 0x3e	; 62
 630:	8a e2       	ldi	r24, 0x2A	; 42
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	fc 01       	movw	r30, r24
 636:	20 81       	ld	r18, Z
 638:	2f 7d       	andi	r18, 0xDF	; 223
 63a:	fc 01       	movw	r30, r24
 63c:	20 83       	st	Z, r18
 63e:	00 00       	nop
 640:	df 91       	pop	r29
 642:	cf 91       	pop	r28
 644:	ff 91       	pop	r31
 646:	ef 91       	pop	r30
 648:	9f 91       	pop	r25
 64a:	8f 91       	pop	r24
 64c:	2f 91       	pop	r18
 64e:	0f 90       	pop	r0
 650:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 654:	0f 90       	pop	r0
 656:	1f 90       	pop	r1
 658:	18 95       	reti

0000065a <main>:
 65a:	cf 93       	push	r28
 65c:	df 93       	push	r29
 65e:	cd b7       	in	r28, 0x3d	; 61
 660:	de b7       	in	r29, 0x3e	; 62
 662:	0e 94 49 00 	call	0x92	; 0x92 <init>
 666:	0e 94 81 00 	call	0x102	; 0x102 <program>
 66a:	fd cf       	rjmp	.-6      	; 0x666 <main+0xc>

0000066c <__udivmodsi4>:
 66c:	a1 e2       	ldi	r26, 0x21	; 33
 66e:	1a 2e       	mov	r1, r26
 670:	aa 1b       	sub	r26, r26
 672:	bb 1b       	sub	r27, r27
 674:	fd 01       	movw	r30, r26
 676:	0d c0       	rjmp	.+26     	; 0x692 <__udivmodsi4_ep>

00000678 <__udivmodsi4_loop>:
 678:	aa 1f       	adc	r26, r26
 67a:	bb 1f       	adc	r27, r27
 67c:	ee 1f       	adc	r30, r30
 67e:	ff 1f       	adc	r31, r31
 680:	a2 17       	cp	r26, r18
 682:	b3 07       	cpc	r27, r19
 684:	e4 07       	cpc	r30, r20
 686:	f5 07       	cpc	r31, r21
 688:	20 f0       	brcs	.+8      	; 0x692 <__udivmodsi4_ep>
 68a:	a2 1b       	sub	r26, r18
 68c:	b3 0b       	sbc	r27, r19
 68e:	e4 0b       	sbc	r30, r20
 690:	f5 0b       	sbc	r31, r21

00000692 <__udivmodsi4_ep>:
 692:	66 1f       	adc	r22, r22
 694:	77 1f       	adc	r23, r23
 696:	88 1f       	adc	r24, r24
 698:	99 1f       	adc	r25, r25
 69a:	1a 94       	dec	r1
 69c:	69 f7       	brne	.-38     	; 0x678 <__udivmodsi4_loop>
 69e:	60 95       	com	r22
 6a0:	70 95       	com	r23
 6a2:	80 95       	com	r24
 6a4:	90 95       	com	r25
 6a6:	9b 01       	movw	r18, r22
 6a8:	ac 01       	movw	r20, r24
 6aa:	bd 01       	movw	r22, r26
 6ac:	cf 01       	movw	r24, r30
 6ae:	08 95       	ret

000006b0 <_exit>:
 6b0:	f8 94       	cli

000006b2 <__stop_program>:
 6b2:	ff cf       	rjmp	.-2      	; 0x6b2 <__stop_program>
