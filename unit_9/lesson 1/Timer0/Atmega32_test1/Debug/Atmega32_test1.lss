
Atmega32_test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000652  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000006c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  00800060  00800060  000006c6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006c6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00000734  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b2e  00000000  00000000  0000088c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a43  00000000  00000000  000023ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bf1  00000000  00000000  00002dfd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000049c  00000000  00000000  000039f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c5a  00000000  00000000  00003e8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000097d  00000000  00000000  00004ae6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00005463  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__vector_10>
  2c:	0c 94 1c 02 	jmp	0x438	; 0x438 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 b8 02 	jmp	0x570	; 0x570 <__vector_13>
  38:	0c 94 fa 02 	jmp	0x5f4	; 0x5f4 <__vector_14>
  3c:	0c 94 e7 02 	jmp	0x5ce	; 0x5ce <__vector_15>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e5       	ldi	r30, 0x52	; 82
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 36       	cpi	r26, 0x6C	; 108
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 1e 03 	call	0x63c	; 0x63c <main>
  8a:	0c 94 27 03 	jmp	0x64e	; 0x64e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <init>:
//_____________________________ MACRO Definition _______________________________
#define Master			1
//==============================================================================

void init(void)
{
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
  9a:	28 97       	sbiw	r28, 0x08	; 8
  9c:	0f b6       	in	r0, 0x3f	; 63
  9e:	f8 94       	cli
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	0f be       	out	0x3f, r0	; 63
  a4:	cd bf       	out	0x3d, r28	; 61
// Config Pins
	GPIO_config gpio_config = {0};
  a6:	19 82       	std	Y+1, r1	; 0x01
  a8:	1a 82       	std	Y+2, r1	; 0x02
  aa:	1b 82       	std	Y+3, r1	; 0x03
	gpio_config.mode = OUTPUT;
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	8a 83       	std	Y+2, r24	; 0x02
	gpio_config.pin = ALL_PINS;
  b0:	8f ef       	ldi	r24, 0xFF	; 255
  b2:	89 83       	std	Y+1, r24	; 0x01
	Init_GPIO(PORT_A,&gpio_config);
  b4:	ce 01       	movw	r24, r28
  b6:	01 96       	adiw	r24, 0x01	; 1
  b8:	bc 01       	movw	r22, r24
  ba:	89 e3       	ldi	r24, 0x39	; 57
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 89 00 	call	0x112	; 0x112 <Init_GPIO>
// Config Timer0
	St_Timer0_API timer0_config = {0};
  c2:	25 e0       	ldi	r18, 0x05	; 5
  c4:	ce 01       	movw	r24, r28
  c6:	04 96       	adiw	r24, 0x04	; 4
  c8:	fc 01       	movw	r30, r24
  ca:	32 2f       	mov	r19, r18
  cc:	11 92       	st	Z+, r1
  ce:	3a 95       	dec	r19
  d0:	e9 f7       	brne	.-6      	; 0xcc <init+0x3a>
	timer0_config.CLK_Mode = CLK_Div_8;
  d2:	82 e0       	ldi	r24, 0x02	; 2
  d4:	8d 83       	std	Y+5, r24	; 0x05
	timer0_config.Com_Mode = Normal_Com_Mode;
  d6:	1f 82       	std	Y+7, r1	; 0x07
	timer0_config.Interrupt = Enable_Over_INT;
  d8:	82 e0       	ldi	r24, 0x02	; 2
  da:	8e 83       	std	Y+6, r24	; 0x06
	timer0_config.Mode = CTC;
  dc:	80 e4       	ldi	r24, 0x40	; 64
  de:	8c 83       	std	Y+4, r24	; 0x04
	timer0_config.Compare_Time = 0xF0;
  e0:	80 ef       	ldi	r24, 0xF0	; 240
  e2:	88 87       	std	Y+8, r24	; 0x08
	Timer0_Init(&timer0_config);
  e4:	ce 01       	movw	r24, r28
  e6:	04 96       	adiw	r24, 0x04	; 4
  e8:	0e 94 a3 01 	call	0x346	; 0x346 <Timer0_Init>
	sei();
  ec:	78 94       	sei


}
  ee:	00 00       	nop
  f0:	28 96       	adiw	r28, 0x08	; 8
  f2:	0f b6       	in	r0, 0x3f	; 63
  f4:	f8 94       	cli
  f6:	de bf       	out	0x3e, r29	; 62
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df 91       	pop	r29
  fe:	cf 91       	pop	r28
 100:	08 95       	ret

00000102 <program>:

void program(void)
{ 	
 102:	cf 93       	push	r28
 104:	df 93       	push	r29
 106:	cd b7       	in	r28, 0x3d	; 61
 108:	de b7       	in	r29, 0x3e	; 62

}
 10a:	00 00       	nop
 10c:	df 91       	pop	r29
 10e:	cf 91       	pop	r28
 110:	08 95       	ret

00000112 <Init_GPIO>:
 112:	cf 93       	push	r28
 114:	df 93       	push	r29
 116:	cd b7       	in	r28, 0x3d	; 61
 118:	de b7       	in	r29, 0x3e	; 62
 11a:	28 97       	sbiw	r28, 0x08	; 8
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	f8 94       	cli
 120:	de bf       	out	0x3e, r29	; 62
 122:	0f be       	out	0x3f, r0	; 63
 124:	cd bf       	out	0x3d, r28	; 61
 126:	9e 83       	std	Y+6, r25	; 0x06
 128:	8d 83       	std	Y+5, r24	; 0x05
 12a:	78 87       	std	Y+8, r23	; 0x08
 12c:	6f 83       	std	Y+7, r22	; 0x07
 12e:	8d 81       	ldd	r24, Y+5	; 0x05
 130:	9e 81       	ldd	r25, Y+6	; 0x06
 132:	c9 97       	sbiw	r24, 0x39	; 57
 134:	71 f0       	breq	.+28     	; 0x152 <Init_GPIO+0x40>
 136:	8d 81       	ldd	r24, Y+5	; 0x05
 138:	9e 81       	ldd	r25, Y+6	; 0x06
 13a:	c6 97       	sbiw	r24, 0x36	; 54
 13c:	51 f0       	breq	.+20     	; 0x152 <Init_GPIO+0x40>
 13e:	8d 81       	ldd	r24, Y+5	; 0x05
 140:	9e 81       	ldd	r25, Y+6	; 0x06
 142:	c3 97       	sbiw	r24, 0x33	; 51
 144:	31 f0       	breq	.+12     	; 0x152 <Init_GPIO+0x40>
 146:	8d 81       	ldd	r24, Y+5	; 0x05
 148:	9e 81       	ldd	r25, Y+6	; 0x06
 14a:	c0 97       	sbiw	r24, 0x30	; 48
 14c:	11 f0       	breq	.+4      	; 0x152 <Init_GPIO+0x40>
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	cb c0       	rjmp	.+406    	; 0x2e8 <Init_GPIO+0x1d6>
 152:	1a 82       	std	Y+2, r1	; 0x02
 154:	1b 82       	std	Y+3, r1	; 0x03
 156:	1c 82       	std	Y+4, r1	; 0x04
 158:	19 82       	std	Y+1, r1	; 0x01
 15a:	c1 c0       	rjmp	.+386    	; 0x2de <Init_GPIO+0x1cc>
 15c:	89 81       	ldd	r24, Y+1	; 0x01
 15e:	28 2f       	mov	r18, r24
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	02 c0       	rjmp	.+4      	; 0x16c <Init_GPIO+0x5a>
 168:	88 0f       	add	r24, r24
 16a:	99 1f       	adc	r25, r25
 16c:	2a 95       	dec	r18
 16e:	e2 f7       	brpl	.-8      	; 0x168 <Init_GPIO+0x56>
 170:	8a 83       	std	Y+2, r24	; 0x02
 172:	8f 81       	ldd	r24, Y+7	; 0x07
 174:	98 85       	ldd	r25, Y+8	; 0x08
 176:	fc 01       	movw	r30, r24
 178:	90 81       	ld	r25, Z
 17a:	8a 81       	ldd	r24, Y+2	; 0x02
 17c:	89 23       	and	r24, r25
 17e:	8b 83       	std	Y+3, r24	; 0x03
 180:	9a 81       	ldd	r25, Y+2	; 0x02
 182:	8b 81       	ldd	r24, Y+3	; 0x03
 184:	98 17       	cp	r25, r24
 186:	09 f0       	breq	.+2      	; 0x18a <Init_GPIO+0x78>
 188:	a7 c0       	rjmp	.+334    	; 0x2d8 <Init_GPIO+0x1c6>
 18a:	8f 81       	ldd	r24, Y+7	; 0x07
 18c:	98 85       	ldd	r25, Y+8	; 0x08
 18e:	fc 01       	movw	r30, r24
 190:	81 81       	ldd	r24, Z+1	; 0x01
 192:	81 30       	cpi	r24, 0x01	; 1
 194:	79 f5       	brne	.+94     	; 0x1f4 <Init_GPIO+0xe2>
 196:	8d 81       	ldd	r24, Y+5	; 0x05
 198:	9e 81       	ldd	r25, Y+6	; 0x06
 19a:	fc 01       	movw	r30, r24
 19c:	81 81       	ldd	r24, Z+1	; 0x01
 19e:	8c 83       	std	Y+4, r24	; 0x04
 1a0:	8f 81       	ldd	r24, Y+7	; 0x07
 1a2:	98 85       	ldd	r25, Y+8	; 0x08
 1a4:	fc 01       	movw	r30, r24
 1a6:	81 81       	ldd	r24, Z+1	; 0x01
 1a8:	88 2f       	mov	r24, r24
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	29 81       	ldd	r18, Y+1	; 0x01
 1ae:	22 2f       	mov	r18, r18
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <Init_GPIO+0xa6>
 1b4:	88 0f       	add	r24, r24
 1b6:	99 1f       	adc	r25, r25
 1b8:	2a 95       	dec	r18
 1ba:	e2 f7       	brpl	.-8      	; 0x1b4 <Init_GPIO+0xa2>
 1bc:	98 2f       	mov	r25, r24
 1be:	90 95       	com	r25
 1c0:	8c 81       	ldd	r24, Y+4	; 0x04
 1c2:	89 23       	and	r24, r25
 1c4:	8c 83       	std	Y+4, r24	; 0x04
 1c6:	8f 81       	ldd	r24, Y+7	; 0x07
 1c8:	98 85       	ldd	r25, Y+8	; 0x08
 1ca:	fc 01       	movw	r30, r24
 1cc:	81 81       	ldd	r24, Z+1	; 0x01
 1ce:	88 2f       	mov	r24, r24
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	29 81       	ldd	r18, Y+1	; 0x01
 1d4:	22 2f       	mov	r18, r18
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <Init_GPIO+0xcc>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	2a 95       	dec	r18
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <Init_GPIO+0xc8>
 1e2:	98 2f       	mov	r25, r24
 1e4:	8c 81       	ldd	r24, Y+4	; 0x04
 1e6:	89 2b       	or	r24, r25
 1e8:	8c 83       	std	Y+4, r24	; 0x04
 1ea:	8d 81       	ldd	r24, Y+5	; 0x05
 1ec:	9e 81       	ldd	r25, Y+6	; 0x06
 1ee:	2c 81       	ldd	r18, Y+4	; 0x04
 1f0:	fc 01       	movw	r30, r24
 1f2:	21 83       	std	Z+1, r18	; 0x01
 1f4:	8f 81       	ldd	r24, Y+7	; 0x07
 1f6:	98 85       	ldd	r25, Y+8	; 0x08
 1f8:	fc 01       	movw	r30, r24
 1fa:	81 81       	ldd	r24, Z+1	; 0x01
 1fc:	88 23       	and	r24, r24
 1fe:	0c f0       	brlt	.+2      	; 0x202 <Init_GPIO+0xf0>
 200:	6b c0       	rjmp	.+214    	; 0x2d8 <Init_GPIO+0x1c6>
 202:	8b 81       	ldd	r24, Y+3	; 0x03
 204:	81 30       	cpi	r24, 0x01	; 1
 206:	19 f0       	breq	.+6      	; 0x20e <Init_GPIO+0xfc>
 208:	8b 81       	ldd	r24, Y+3	; 0x03
 20a:	82 30       	cpi	r24, 0x02	; 2
 20c:	b9 f5       	brne	.+110    	; 0x27c <Init_GPIO+0x16a>
 20e:	85 e5       	ldi	r24, 0x55	; 85
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	fc 01       	movw	r30, r24
 214:	80 81       	ld	r24, Z
 216:	8c 83       	std	Y+4, r24	; 0x04
 218:	8f 81       	ldd	r24, Y+7	; 0x07
 21a:	98 85       	ldd	r25, Y+8	; 0x08
 21c:	fc 01       	movw	r30, r24
 21e:	81 81       	ldd	r24, Z+1	; 0x01
 220:	88 2f       	mov	r24, r24
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	80 78       	andi	r24, 0x80	; 128
 226:	99 27       	eor	r25, r25
 228:	29 81       	ldd	r18, Y+1	; 0x01
 22a:	22 2f       	mov	r18, r18
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	22 0f       	add	r18, r18
 230:	33 1f       	adc	r19, r19
 232:	02 c0       	rjmp	.+4      	; 0x238 <Init_GPIO+0x126>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	2a 95       	dec	r18
 23a:	e2 f7       	brpl	.-8      	; 0x234 <Init_GPIO+0x122>
 23c:	98 2f       	mov	r25, r24
 23e:	90 95       	com	r25
 240:	8c 81       	ldd	r24, Y+4	; 0x04
 242:	89 23       	and	r24, r25
 244:	8c 83       	std	Y+4, r24	; 0x04
 246:	8f 81       	ldd	r24, Y+7	; 0x07
 248:	98 85       	ldd	r25, Y+8	; 0x08
 24a:	fc 01       	movw	r30, r24
 24c:	81 81       	ldd	r24, Z+1	; 0x01
 24e:	88 2f       	mov	r24, r24
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	80 78       	andi	r24, 0x80	; 128
 254:	99 27       	eor	r25, r25
 256:	29 81       	ldd	r18, Y+1	; 0x01
 258:	22 2f       	mov	r18, r18
 25a:	30 e0       	ldi	r19, 0x00	; 0
 25c:	22 0f       	add	r18, r18
 25e:	33 1f       	adc	r19, r19
 260:	02 c0       	rjmp	.+4      	; 0x266 <Init_GPIO+0x154>
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	2a 95       	dec	r18
 268:	e2 f7       	brpl	.-8      	; 0x262 <Init_GPIO+0x150>
 26a:	98 2f       	mov	r25, r24
 26c:	8c 81       	ldd	r24, Y+4	; 0x04
 26e:	89 2b       	or	r24, r25
 270:	8c 83       	std	Y+4, r24	; 0x04
 272:	85 e5       	ldi	r24, 0x55	; 85
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	2c 81       	ldd	r18, Y+4	; 0x04
 278:	fc 01       	movw	r30, r24
 27a:	20 83       	st	Z, r18
 27c:	8b 81       	ldd	r24, Y+3	; 0x03
 27e:	84 30       	cpi	r24, 0x04	; 4
 280:	59 f5       	brne	.+86     	; 0x2d8 <Init_GPIO+0x1c6>
 282:	84 e5       	ldi	r24, 0x54	; 84
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	fc 01       	movw	r30, r24
 288:	80 81       	ld	r24, Z
 28a:	8c 83       	std	Y+4, r24	; 0x04
 28c:	8f 81       	ldd	r24, Y+7	; 0x07
 28e:	98 85       	ldd	r25, Y+8	; 0x08
 290:	fc 01       	movw	r30, r24
 292:	81 81       	ldd	r24, Z+1	; 0x01
 294:	82 78       	andi	r24, 0x82	; 130
 296:	82 95       	swap	r24
 298:	88 0f       	add	r24, r24
 29a:	80 7e       	andi	r24, 0xE0	; 224
 29c:	80 95       	com	r24
 29e:	98 2f       	mov	r25, r24
 2a0:	8c 81       	ldd	r24, Y+4	; 0x04
 2a2:	89 23       	and	r24, r25
 2a4:	8c 83       	std	Y+4, r24	; 0x04
 2a6:	8f 81       	ldd	r24, Y+7	; 0x07
 2a8:	98 85       	ldd	r25, Y+8	; 0x08
 2aa:	fc 01       	movw	r30, r24
 2ac:	81 81       	ldd	r24, Z+1	; 0x01
 2ae:	88 2f       	mov	r24, r24
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	82 78       	andi	r24, 0x82	; 130
 2b4:	99 27       	eor	r25, r25
 2b6:	88 0f       	add	r24, r24
 2b8:	99 1f       	adc	r25, r25
 2ba:	82 95       	swap	r24
 2bc:	92 95       	swap	r25
 2be:	90 7f       	andi	r25, 0xF0	; 240
 2c0:	98 27       	eor	r25, r24
 2c2:	80 7f       	andi	r24, 0xF0	; 240
 2c4:	98 27       	eor	r25, r24
 2c6:	98 2f       	mov	r25, r24
 2c8:	8c 81       	ldd	r24, Y+4	; 0x04
 2ca:	89 2b       	or	r24, r25
 2cc:	8c 83       	std	Y+4, r24	; 0x04
 2ce:	84 e5       	ldi	r24, 0x54	; 84
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	2c 81       	ldd	r18, Y+4	; 0x04
 2d4:	fc 01       	movw	r30, r24
 2d6:	20 83       	st	Z, r18
 2d8:	89 81       	ldd	r24, Y+1	; 0x01
 2da:	8f 5f       	subi	r24, 0xFF	; 255
 2dc:	89 83       	std	Y+1, r24	; 0x01
 2de:	89 81       	ldd	r24, Y+1	; 0x01
 2e0:	88 30       	cpi	r24, 0x08	; 8
 2e2:	08 f4       	brcc	.+2      	; 0x2e6 <Init_GPIO+0x1d4>
 2e4:	3b cf       	rjmp	.-394    	; 0x15c <Init_GPIO+0x4a>
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	28 96       	adiw	r28, 0x08	; 8
 2ea:	0f b6       	in	r0, 0x3f	; 63
 2ec:	f8 94       	cli
 2ee:	de bf       	out	0x3e, r29	; 62
 2f0:	0f be       	out	0x3f, r0	; 63
 2f2:	cd bf       	out	0x3d, r28	; 61
 2f4:	df 91       	pop	r29
 2f6:	cf 91       	pop	r28
 2f8:	08 95       	ret

000002fa <Write_Port_Register>:
 2fa:	cf 93       	push	r28
 2fc:	df 93       	push	r29
 2fe:	00 d0       	rcall	.+0      	; 0x300 <Write_Port_Register+0x6>
 300:	1f 92       	push	r1
 302:	cd b7       	in	r28, 0x3d	; 61
 304:	de b7       	in	r29, 0x3e	; 62
 306:	9a 83       	std	Y+2, r25	; 0x02
 308:	89 83       	std	Y+1, r24	; 0x01
 30a:	6b 83       	std	Y+3, r22	; 0x03
 30c:	89 81       	ldd	r24, Y+1	; 0x01
 30e:	9a 81       	ldd	r25, Y+2	; 0x02
 310:	c9 97       	sbiw	r24, 0x39	; 57
 312:	61 f0       	breq	.+24     	; 0x32c <Write_Port_Register+0x32>
 314:	89 81       	ldd	r24, Y+1	; 0x01
 316:	9a 81       	ldd	r25, Y+2	; 0x02
 318:	c6 97       	sbiw	r24, 0x36	; 54
 31a:	41 f0       	breq	.+16     	; 0x32c <Write_Port_Register+0x32>
 31c:	89 81       	ldd	r24, Y+1	; 0x01
 31e:	9a 81       	ldd	r25, Y+2	; 0x02
 320:	c3 97       	sbiw	r24, 0x33	; 51
 322:	21 f0       	breq	.+8      	; 0x32c <Write_Port_Register+0x32>
 324:	89 81       	ldd	r24, Y+1	; 0x01
 326:	9a 81       	ldd	r25, Y+2	; 0x02
 328:	c0 97       	sbiw	r24, 0x30	; 48
 32a:	31 f4       	brne	.+12     	; 0x338 <Write_Port_Register+0x3e>
 32c:	89 81       	ldd	r24, Y+1	; 0x01
 32e:	9a 81       	ldd	r25, Y+2	; 0x02
 330:	2b 81       	ldd	r18, Y+3	; 0x03
 332:	fc 01       	movw	r30, r24
 334:	22 83       	std	Z+2, r18	; 0x02
 336:	01 c0       	rjmp	.+2      	; 0x33a <Write_Port_Register+0x40>
 338:	00 00       	nop
 33a:	0f 90       	pop	r0
 33c:	0f 90       	pop	r0
 33e:	0f 90       	pop	r0
 340:	df 91       	pop	r29
 342:	cf 91       	pop	r28
 344:	08 95       	ret

00000346 <Timer0_Init>:
uint8_t Timer0_Get_Counter_Val(St_Timer0_API *Timerx, uint8_t *Count_val)
{
    *Count_val = TCNT0;

    return 1;
}
 346:	cf 93       	push	r28
 348:	df 93       	push	r29
 34a:	00 d0       	rcall	.+0      	; 0x34c <Timer0_Init+0x6>
 34c:	cd b7       	in	r28, 0x3d	; 61
 34e:	de b7       	in	r29, 0x3e	; 62
 350:	9a 83       	std	Y+2, r25	; 0x02
 352:	89 83       	std	Y+1, r24	; 0x01
 354:	8c e5       	ldi	r24, 0x5C	; 92
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	fc 01       	movw	r30, r24
 35a:	10 82       	st	Z, r1
 35c:	8c e5       	ldi	r24, 0x5C	; 92
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	2c e5       	ldi	r18, 0x5C	; 92
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	f9 01       	movw	r30, r18
 366:	40 81       	ld	r20, Z
 368:	29 81       	ldd	r18, Y+1	; 0x01
 36a:	3a 81       	ldd	r19, Y+2	; 0x02
 36c:	f9 01       	movw	r30, r18
 36e:	24 81       	ldd	r18, Z+4	; 0x04
 370:	24 2b       	or	r18, r20
 372:	fc 01       	movw	r30, r24
 374:	20 83       	st	Z, r18
 376:	89 e5       	ldi	r24, 0x59	; 89
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	29 e5       	ldi	r18, 0x59	; 89
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	f9 01       	movw	r30, r18
 380:	40 81       	ld	r20, Z
 382:	29 81       	ldd	r18, Y+1	; 0x01
 384:	3a 81       	ldd	r19, Y+2	; 0x02
 386:	f9 01       	movw	r30, r18
 388:	22 81       	ldd	r18, Z+2	; 0x02
 38a:	24 2b       	or	r18, r20
 38c:	fc 01       	movw	r30, r24
 38e:	20 83       	st	Z, r18
 390:	83 e5       	ldi	r24, 0x53	; 83
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	23 e5       	ldi	r18, 0x53	; 83
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	f9 01       	movw	r30, r18
 39a:	40 81       	ld	r20, Z
 39c:	29 81       	ldd	r18, Y+1	; 0x01
 39e:	3a 81       	ldd	r19, Y+2	; 0x02
 3a0:	f9 01       	movw	r30, r18
 3a2:	50 81       	ld	r21, Z
 3a4:	29 81       	ldd	r18, Y+1	; 0x01
 3a6:	3a 81       	ldd	r19, Y+2	; 0x02
 3a8:	f9 01       	movw	r30, r18
 3aa:	23 81       	ldd	r18, Z+3	; 0x03
 3ac:	52 2b       	or	r21, r18
 3ae:	29 81       	ldd	r18, Y+1	; 0x01
 3b0:	3a 81       	ldd	r19, Y+2	; 0x02
 3b2:	f9 01       	movw	r30, r18
 3b4:	21 81       	ldd	r18, Z+1	; 0x01
 3b6:	25 2b       	or	r18, r21
 3b8:	24 2b       	or	r18, r20
 3ba:	fc 01       	movw	r30, r24
 3bc:	20 83       	st	Z, r18
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	0f 90       	pop	r0
 3c2:	0f 90       	pop	r0
 3c4:	df 91       	pop	r29
 3c6:	cf 91       	pop	r28
 3c8:	08 95       	ret

000003ca <__vector_10>:

volatile uint8_t counter = 0;
ISR(TIMER0_COMP_vect)
{
 3ca:	1f 92       	push	r1
 3cc:	0f 92       	push	r0
 3ce:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 3d2:	0f 92       	push	r0
 3d4:	11 24       	eor	r1, r1
 3d6:	2f 93       	push	r18
 3d8:	3f 93       	push	r19
 3da:	4f 93       	push	r20
 3dc:	5f 93       	push	r21
 3de:	6f 93       	push	r22
 3e0:	7f 93       	push	r23
 3e2:	8f 93       	push	r24
 3e4:	9f 93       	push	r25
 3e6:	af 93       	push	r26
 3e8:	bf 93       	push	r27
 3ea:	ef 93       	push	r30
 3ec:	ff 93       	push	r31
 3ee:	cf 93       	push	r28
 3f0:	df 93       	push	r29
 3f2:	cd b7       	in	r28, 0x3d	; 61
 3f4:	de b7       	in	r29, 0x3e	; 62
    counter++;
 3f6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_end>
 3fa:	8f 5f       	subi	r24, 0xFF	; 255
 3fc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_end>
    Write_Port_Register(PORT_A,counter);
 400:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_end>
 404:	68 2f       	mov	r22, r24
 406:	89 e3       	ldi	r24, 0x39	; 57
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	0e 94 7d 01 	call	0x2fa	; 0x2fa <Write_Port_Register>
}
 40e:	00 00       	nop
 410:	df 91       	pop	r29
 412:	cf 91       	pop	r28
 414:	ff 91       	pop	r31
 416:	ef 91       	pop	r30
 418:	bf 91       	pop	r27
 41a:	af 91       	pop	r26
 41c:	9f 91       	pop	r25
 41e:	8f 91       	pop	r24
 420:	7f 91       	pop	r23
 422:	6f 91       	pop	r22
 424:	5f 91       	pop	r21
 426:	4f 91       	pop	r20
 428:	3f 91       	pop	r19
 42a:	2f 91       	pop	r18
 42c:	0f 90       	pop	r0
 42e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 432:	0f 90       	pop	r0
 434:	1f 90       	pop	r1
 436:	18 95       	reti

00000438 <__vector_11>:


ISR(TIMER0_OVF_vect)
{
 438:	1f 92       	push	r1
 43a:	0f 92       	push	r0
 43c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 440:	0f 92       	push	r0
 442:	11 24       	eor	r1, r1
 444:	cf 93       	push	r28
 446:	df 93       	push	r29
 448:	cd b7       	in	r28, 0x3d	; 61
 44a:	de b7       	in	r29, 0x3e	; 62
    
}
 44c:	00 00       	nop
 44e:	df 91       	pop	r29
 450:	cf 91       	pop	r28
 452:	0f 90       	pop	r0
 454:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 458:	0f 90       	pop	r0
 45a:	1f 90       	pop	r1
 45c:	18 95       	reti

0000045e <Uart_Receive>:
 45e:	cf 93       	push	r28
 460:	df 93       	push	r29
 462:	00 d0       	rcall	.+0      	; 0x464 <Uart_Receive+0x6>
 464:	00 d0       	rcall	.+0      	; 0x466 <Uart_Receive+0x8>
 466:	00 d0       	rcall	.+0      	; 0x468 <Uart_Receive+0xa>
 468:	cd b7       	in	r28, 0x3d	; 61
 46a:	de b7       	in	r29, 0x3e	; 62
 46c:	9e 83       	std	Y+6, r25	; 0x06
 46e:	8d 83       	std	Y+5, r24	; 0x05
 470:	19 82       	std	Y+1, r1	; 0x01
 472:	66 c0       	rjmp	.+204    	; 0x540 <Uart_Receive+0xe2>
 474:	00 00       	nop
 476:	8b e2       	ldi	r24, 0x2B	; 43
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	fc 01       	movw	r30, r24
 47c:	80 81       	ld	r24, Z
 47e:	88 23       	and	r24, r24
 480:	d4 f7       	brge	.-12     	; 0x476 <Uart_Receive+0x18>
 482:	8b e2       	ldi	r24, 0x2B	; 43
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	fc 01       	movw	r30, r24
 488:	80 81       	ld	r24, Z
 48a:	8a 83       	std	Y+2, r24	; 0x02
 48c:	8a e2       	ldi	r24, 0x2A	; 42
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	fc 01       	movw	r30, r24
 492:	80 81       	ld	r24, Z
 494:	8b 83       	std	Y+3, r24	; 0x03
 496:	8c e2       	ldi	r24, 0x2C	; 44
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	fc 01       	movw	r30, r24
 49c:	80 81       	ld	r24, Z
 49e:	8c 83       	std	Y+4, r24	; 0x04
 4a0:	8a 81       	ldd	r24, Y+2	; 0x02
 4a2:	88 2f       	mov	r24, r24
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	8c 71       	andi	r24, 0x1C	; 28
 4a8:	99 27       	eor	r25, r25
 4aa:	89 2b       	or	r24, r25
 4ac:	19 f0       	breq	.+6      	; 0x4b4 <Uart_Receive+0x56>
 4ae:	8f ef       	ldi	r24, 0xFF	; 255
 4b0:	9f ef       	ldi	r25, 0xFF	; 255
 4b2:	55 c0       	rjmp	.+170    	; 0x55e <Uart_Receive+0x100>
 4b4:	8b 81       	ldd	r24, Y+3	; 0x03
 4b6:	86 95       	lsr	r24
 4b8:	81 70       	andi	r24, 0x01	; 1
 4ba:	8b 83       	std	Y+3, r24	; 0x03
 4bc:	89 81       	ldd	r24, Y+1	; 0x01
 4be:	8f 30       	cpi	r24, 0x0F	; 15
 4c0:	71 f0       	breq	.+28     	; 0x4de <Uart_Receive+0x80>
 4c2:	8d 81       	ldd	r24, Y+5	; 0x05
 4c4:	9e 81       	ldd	r25, Y+6	; 0x06
 4c6:	fc 01       	movw	r30, r24
 4c8:	21 85       	ldd	r18, Z+9	; 0x09
 4ca:	32 85       	ldd	r19, Z+10	; 0x0a
 4cc:	89 81       	ldd	r24, Y+1	; 0x01
 4ce:	88 2f       	mov	r24, r24
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	82 0f       	add	r24, r18
 4d4:	93 1f       	adc	r25, r19
 4d6:	fc 01       	movw	r30, r24
 4d8:	80 81       	ld	r24, Z
 4da:	83 32       	cpi	r24, 0x23	; 35
 4dc:	09 f4       	brne	.+2      	; 0x4e0 <Uart_Receive+0x82>
 4de:	19 82       	std	Y+1, r1	; 0x01
 4e0:	8d 81       	ldd	r24, Y+5	; 0x05
 4e2:	9e 81       	ldd	r25, Y+6	; 0x06
 4e4:	fc 01       	movw	r30, r24
 4e6:	21 85       	ldd	r18, Z+9	; 0x09
 4e8:	32 85       	ldd	r19, Z+10	; 0x0a
 4ea:	89 81       	ldd	r24, Y+1	; 0x01
 4ec:	88 2f       	mov	r24, r24
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	82 0f       	add	r24, r18
 4f2:	93 1f       	adc	r25, r19
 4f4:	2b 81       	ldd	r18, Y+3	; 0x03
 4f6:	22 2f       	mov	r18, r18
 4f8:	30 e0       	ldi	r19, 0x00	; 0
 4fa:	32 2f       	mov	r19, r18
 4fc:	22 27       	eor	r18, r18
 4fe:	32 2f       	mov	r19, r18
 500:	2c 81       	ldd	r18, Y+4	; 0x04
 502:	23 2b       	or	r18, r19
 504:	fc 01       	movw	r30, r24
 506:	20 83       	st	Z, r18
 508:	8d 81       	ldd	r24, Y+5	; 0x05
 50a:	9e 81       	ldd	r25, Y+6	; 0x06
 50c:	fc 01       	movw	r30, r24
 50e:	21 85       	ldd	r18, Z+9	; 0x09
 510:	32 85       	ldd	r19, Z+10	; 0x0a
 512:	89 81       	ldd	r24, Y+1	; 0x01
 514:	88 2f       	mov	r24, r24
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	82 0f       	add	r24, r18
 51a:	93 1f       	adc	r25, r19
 51c:	fc 01       	movw	r30, r24
 51e:	80 81       	ld	r24, Z
 520:	83 32       	cpi	r24, 0x23	; 35
 522:	59 f4       	brne	.+22     	; 0x53a <Uart_Receive+0xdc>
 524:	8d 81       	ldd	r24, Y+5	; 0x05
 526:	9e 81       	ldd	r25, Y+6	; 0x06
 528:	fc 01       	movw	r30, r24
 52a:	21 85       	ldd	r18, Z+9	; 0x09
 52c:	32 85       	ldd	r19, Z+10	; 0x0a
 52e:	89 81       	ldd	r24, Y+1	; 0x01
 530:	88 2f       	mov	r24, r24
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	82 0f       	add	r24, r18
 536:	93 1f       	adc	r25, r19
 538:	12 c0       	rjmp	.+36     	; 0x55e <Uart_Receive+0x100>
 53a:	89 81       	ldd	r24, Y+1	; 0x01
 53c:	8f 5f       	subi	r24, 0xFF	; 255
 53e:	89 83       	std	Y+1, r24	; 0x01
 540:	8d 81       	ldd	r24, Y+5	; 0x05
 542:	9e 81       	ldd	r25, Y+6	; 0x06
 544:	fc 01       	movw	r30, r24
 546:	21 85       	ldd	r18, Z+9	; 0x09
 548:	32 85       	ldd	r19, Z+10	; 0x0a
 54a:	89 81       	ldd	r24, Y+1	; 0x01
 54c:	88 2f       	mov	r24, r24
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	82 0f       	add	r24, r18
 552:	93 1f       	adc	r25, r19
 554:	fc 01       	movw	r30, r24
 556:	80 81       	ld	r24, Z
 558:	83 32       	cpi	r24, 0x23	; 35
 55a:	09 f0       	breq	.+2      	; 0x55e <Uart_Receive+0x100>
 55c:	8b cf       	rjmp	.-234    	; 0x474 <Uart_Receive+0x16>
 55e:	26 96       	adiw	r28, 0x06	; 6
 560:	0f b6       	in	r0, 0x3f	; 63
 562:	f8 94       	cli
 564:	de bf       	out	0x3e, r29	; 62
 566:	0f be       	out	0x3f, r0	; 63
 568:	cd bf       	out	0x3d, r28	; 61
 56a:	df 91       	pop	r29
 56c:	cf 91       	pop	r28
 56e:	08 95       	ret

00000570 <__vector_13>:
 570:	1f 92       	push	r1
 572:	0f 92       	push	r0
 574:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 578:	0f 92       	push	r0
 57a:	11 24       	eor	r1, r1
 57c:	2f 93       	push	r18
 57e:	3f 93       	push	r19
 580:	4f 93       	push	r20
 582:	5f 93       	push	r21
 584:	6f 93       	push	r22
 586:	7f 93       	push	r23
 588:	8f 93       	push	r24
 58a:	9f 93       	push	r25
 58c:	af 93       	push	r26
 58e:	bf 93       	push	r27
 590:	ef 93       	push	r30
 592:	ff 93       	push	r31
 594:	cf 93       	push	r28
 596:	df 93       	push	r29
 598:	cd b7       	in	r28, 0x3d	; 61
 59a:	de b7       	in	r29, 0x3e	; 62
 59c:	81 e6       	ldi	r24, 0x61	; 97
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	0e 94 2f 02 	call	0x45e	; 0x45e <Uart_Receive>
 5a4:	00 00       	nop
 5a6:	df 91       	pop	r29
 5a8:	cf 91       	pop	r28
 5aa:	ff 91       	pop	r31
 5ac:	ef 91       	pop	r30
 5ae:	bf 91       	pop	r27
 5b0:	af 91       	pop	r26
 5b2:	9f 91       	pop	r25
 5b4:	8f 91       	pop	r24
 5b6:	7f 91       	pop	r23
 5b8:	6f 91       	pop	r22
 5ba:	5f 91       	pop	r21
 5bc:	4f 91       	pop	r20
 5be:	3f 91       	pop	r19
 5c0:	2f 91       	pop	r18
 5c2:	0f 90       	pop	r0
 5c4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 5c8:	0f 90       	pop	r0
 5ca:	1f 90       	pop	r1
 5cc:	18 95       	reti

000005ce <__vector_15>:
 5ce:	1f 92       	push	r1
 5d0:	0f 92       	push	r0
 5d2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 5d6:	0f 92       	push	r0
 5d8:	11 24       	eor	r1, r1
 5da:	cf 93       	push	r28
 5dc:	df 93       	push	r29
 5de:	cd b7       	in	r28, 0x3d	; 61
 5e0:	de b7       	in	r29, 0x3e	; 62
 5e2:	00 00       	nop
 5e4:	df 91       	pop	r29
 5e6:	cf 91       	pop	r28
 5e8:	0f 90       	pop	r0
 5ea:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 5ee:	0f 90       	pop	r0
 5f0:	1f 90       	pop	r1
 5f2:	18 95       	reti

000005f4 <__vector_14>:
 5f4:	1f 92       	push	r1
 5f6:	0f 92       	push	r0
 5f8:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 5fc:	0f 92       	push	r0
 5fe:	11 24       	eor	r1, r1
 600:	2f 93       	push	r18
 602:	8f 93       	push	r24
 604:	9f 93       	push	r25
 606:	ef 93       	push	r30
 608:	ff 93       	push	r31
 60a:	cf 93       	push	r28
 60c:	df 93       	push	r29
 60e:	cd b7       	in	r28, 0x3d	; 61
 610:	de b7       	in	r29, 0x3e	; 62
 612:	8a e2       	ldi	r24, 0x2A	; 42
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	fc 01       	movw	r30, r24
 618:	20 81       	ld	r18, Z
 61a:	2f 7d       	andi	r18, 0xDF	; 223
 61c:	fc 01       	movw	r30, r24
 61e:	20 83       	st	Z, r18
 620:	00 00       	nop
 622:	df 91       	pop	r29
 624:	cf 91       	pop	r28
 626:	ff 91       	pop	r31
 628:	ef 91       	pop	r30
 62a:	9f 91       	pop	r25
 62c:	8f 91       	pop	r24
 62e:	2f 91       	pop	r18
 630:	0f 90       	pop	r0
 632:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 636:	0f 90       	pop	r0
 638:	1f 90       	pop	r1
 63a:	18 95       	reti

0000063c <main>:
 63c:	cf 93       	push	r28
 63e:	df 93       	push	r29
 640:	cd b7       	in	r28, 0x3d	; 61
 642:	de b7       	in	r29, 0x3e	; 62
 644:	0e 94 49 00 	call	0x92	; 0x92 <init>
 648:	0e 94 81 00 	call	0x102	; 0x102 <program>
 64c:	fd cf       	rjmp	.-6      	; 0x648 <main+0xc>

0000064e <_exit>:
 64e:	f8 94       	cli

00000650 <__stop_program>:
 650:	ff cf       	rjmp	.-2      	; 0x650 <__stop_program>
