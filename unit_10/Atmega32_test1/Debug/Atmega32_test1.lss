
Atmega32_test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000017de  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  000017de  00001872  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000033  0080006e  0080006e  00001880  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001880  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000018dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000220  00000000  00000000  00001918  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000026e2  00000000  00000000  00001b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d69  00000000  00000000  0000421a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000145f  00000000  00000000  00004f83  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000724  00000000  00000000  000063e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000102a  00000000  00000000  00006b08  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ed1  00000000  00000000  00007b32  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  00008a03  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 7e 06 	jmp	0xcfc	; 0xcfc <__vector_10>
      2c:	0c 94 b5 06 	jmp	0xd6a	; 0xd6a <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 51 07 	jmp	0xea2	; 0xea2 <__vector_13>
      38:	0c 94 93 07 	jmp	0xf26	; 0xf26 <__vector_14>
      3c:	0c 94 80 07 	jmp	0xf00	; 0xf00 <__vector_15>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee ed       	ldi	r30, 0xDE	; 222
      68:	f7 e1       	ldi	r31, 0x17	; 23
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 36       	cpi	r26, 0x6E	; 110
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ae e6       	ldi	r26, 0x6E	; 110
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 3a       	cpi	r26, 0xA1	; 161
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 b7 07 	call	0xf6e	; 0xf6e <main>
      8a:	0c 94 ed 0b 	jmp	0x17da	; 0x17da <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ADC_Init>:
 * @param ADCx : ADC data structre containing the ADC parameters
  * @return uint8_t  0 : Fail
  *                  1 : Success
 */
uint8_t ADC_Init(St_ADC_API *ADCx)
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	00 d0       	rcall	.+0      	; 0x98 <ADC_Init+0x6>
      98:	cd b7       	in	r28, 0x3d	; 61
      9a:	de b7       	in	r29, 0x3e	; 62
      9c:	9a 83       	std	Y+2, r25	; 0x02
      9e:	89 83       	std	Y+1, r24	; 0x01
    // First Clear ADMUX Regiset and Set Vref 
    ADMUX = 0x00;
      a0:	87 e2       	ldi	r24, 0x27	; 39
      a2:	90 e0       	ldi	r25, 0x00	; 0
      a4:	fc 01       	movw	r30, r24
      a6:	10 82       	st	Z, r1
    ADMUX |= ADCx->Vref << 6;
      a8:	87 e2       	ldi	r24, 0x27	; 39
      aa:	90 e0       	ldi	r25, 0x00	; 0
      ac:	27 e2       	ldi	r18, 0x27	; 39
      ae:	30 e0       	ldi	r19, 0x00	; 0
      b0:	f9 01       	movw	r30, r18
      b2:	20 81       	ld	r18, Z
      b4:	42 2f       	mov	r20, r18
      b6:	29 81       	ldd	r18, Y+1	; 0x01
      b8:	3a 81       	ldd	r19, Y+2	; 0x02
      ba:	f9 01       	movw	r30, r18
      bc:	20 81       	ld	r18, Z
      be:	22 2f       	mov	r18, r18
      c0:	30 e0       	ldi	r19, 0x00	; 0
      c2:	00 24       	eor	r0, r0
      c4:	36 95       	lsr	r19
      c6:	27 95       	ror	r18
      c8:	07 94       	ror	r0
      ca:	36 95       	lsr	r19
      cc:	27 95       	ror	r18
      ce:	07 94       	ror	r0
      d0:	32 2f       	mov	r19, r18
      d2:	20 2d       	mov	r18, r0
      d4:	24 2b       	or	r18, r20
      d6:	fc 01       	movw	r30, r24
      d8:	20 83       	st	Z, r18

    // First Clear Scaler ADC and Set Scaler value
    ADCSRA &= ~(ADC_SCALER_128);
      da:	86 e2       	ldi	r24, 0x26	; 38
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	26 e2       	ldi	r18, 0x26	; 38
      e0:	30 e0       	ldi	r19, 0x00	; 0
      e2:	f9 01       	movw	r30, r18
      e4:	20 81       	ld	r18, Z
      e6:	28 7f       	andi	r18, 0xF8	; 248
      e8:	fc 01       	movw	r30, r24
      ea:	20 83       	st	Z, r18
    ADCSRA |= ADCx->Freq;
      ec:	86 e2       	ldi	r24, 0x26	; 38
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	26 e2       	ldi	r18, 0x26	; 38
      f2:	30 e0       	ldi	r19, 0x00	; 0
      f4:	f9 01       	movw	r30, r18
      f6:	40 81       	ld	r20, Z
      f8:	29 81       	ldd	r18, Y+1	; 0x01
      fa:	3a 81       	ldd	r19, Y+2	; 0x02
      fc:	f9 01       	movw	r30, r18
      fe:	21 81       	ldd	r18, Z+1	; 0x01
     100:	24 2b       	or	r18, r20
     102:	fc 01       	movw	r30, r24
     104:	20 83       	st	Z, r18

    // Set ADC
    SET_BIT(ADCSRA, 1 << ADEN);
     106:	86 e2       	ldi	r24, 0x26	; 38
     108:	90 e0       	ldi	r25, 0x00	; 0
     10a:	26 e2       	ldi	r18, 0x26	; 38
     10c:	30 e0       	ldi	r19, 0x00	; 0
     10e:	f9 01       	movw	r30, r18
     110:	20 81       	ld	r18, Z
     112:	20 68       	ori	r18, 0x80	; 128
     114:	fc 01       	movw	r30, r24
     116:	20 83       	st	Z, r18
    return 1;
     118:	81 e0       	ldi	r24, 0x01	; 1
}
     11a:	0f 90       	pop	r0
     11c:	0f 90       	pop	r0
     11e:	df 91       	pop	r29
     120:	cf 91       	pop	r28
     122:	08 95       	ret

00000124 <ADC_Read>:
 * @brief This function is used to read ADC channel input
 * @param ADCx : ADC data structre containing the ADC parameters
  * @return uint16_t : is return the adc channel value  
 */
uint16_t ADC_Read(St_ADC_API *ADCx)
{
     124:	cf 93       	push	r28
     126:	df 93       	push	r29
     128:	00 d0       	rcall	.+0      	; 0x12a <ADC_Read+0x6>
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	9a 83       	std	Y+2, r25	; 0x02
     130:	89 83       	std	Y+1, r24	; 0x01
    // Select The ADC channel to read analog value
    ADMUX &= 0xE0;
     132:	87 e2       	ldi	r24, 0x27	; 39
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	27 e2       	ldi	r18, 0x27	; 39
     138:	30 e0       	ldi	r19, 0x00	; 0
     13a:	f9 01       	movw	r30, r18
     13c:	20 81       	ld	r18, Z
     13e:	20 7e       	andi	r18, 0xE0	; 224
     140:	fc 01       	movw	r30, r24
     142:	20 83       	st	Z, r18
    ADMUX |= CH_7;
     144:	87 e2       	ldi	r24, 0x27	; 39
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	27 e2       	ldi	r18, 0x27	; 39
     14a:	30 e0       	ldi	r19, 0x00	; 0
     14c:	f9 01       	movw	r30, r18
     14e:	20 81       	ld	r18, Z
     150:	27 60       	ori	r18, 0x07	; 7
     152:	fc 01       	movw	r30, r24
     154:	20 83       	st	Z, r18

    // Start Conversion
    SET_BIT(ADCSRA, 1 << ADSC);
     156:	86 e2       	ldi	r24, 0x26	; 38
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	26 e2       	ldi	r18, 0x26	; 38
     15c:	30 e0       	ldi	r19, 0x00	; 0
     15e:	f9 01       	movw	r30, r18
     160:	20 81       	ld	r18, Z
     162:	20 64       	ori	r18, 0x40	; 64
     164:	fc 01       	movw	r30, r24
     166:	20 83       	st	Z, r18
    ADCSRA |= ADSC;
     168:	86 e2       	ldi	r24, 0x26	; 38
     16a:	90 e0       	ldi	r25, 0x00	; 0
     16c:	26 e2       	ldi	r18, 0x26	; 38
     16e:	30 e0       	ldi	r19, 0x00	; 0
     170:	f9 01       	movw	r30, r18
     172:	20 81       	ld	r18, Z
     174:	26 60       	ori	r18, 0x06	; 6
     176:	fc 01       	movw	r30, r24
     178:	20 83       	st	Z, r18
    while(READ_BIT(ADCSRA, 1 << ADSC));
     17a:	00 00       	nop
     17c:	86 e2       	ldi	r24, 0x26	; 38
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	fc 01       	movw	r30, r24
     182:	80 81       	ld	r24, Z
     184:	88 2f       	mov	r24, r24
     186:	90 e0       	ldi	r25, 0x00	; 0
     188:	80 74       	andi	r24, 0x40	; 64
     18a:	99 27       	eor	r25, r25
     18c:	89 2b       	or	r24, r25
     18e:	b1 f7       	brne	.-20     	; 0x17c <ADC_Read+0x58>

    return ADC;
     190:	84 e2       	ldi	r24, 0x24	; 36
     192:	90 e0       	ldi	r25, 0x00	; 0
     194:	fc 01       	movw	r30, r24
     196:	80 81       	ld	r24, Z
     198:	91 81       	ldd	r25, Z+1	; 0x01
}
     19a:	0f 90       	pop	r0
     19c:	0f 90       	pop	r0
     19e:	df 91       	pop	r29
     1a0:	cf 91       	pop	r28
     1a2:	08 95       	ret

000001a4 <ADC_Read_Volt>:


uint16_t ADC_Read_Volt(St_ADC_API *ADCx, uint16_t data)
{
     1a4:	cf 93       	push	r28
     1a6:	df 93       	push	r29
     1a8:	cd b7       	in	r28, 0x3d	; 61
     1aa:	de b7       	in	r29, 0x3e	; 62
     1ac:	28 97       	sbiw	r28, 0x08	; 8
     1ae:	0f b6       	in	r0, 0x3f	; 63
     1b0:	f8 94       	cli
     1b2:	de bf       	out	0x3e, r29	; 62
     1b4:	0f be       	out	0x3f, r0	; 63
     1b6:	cd bf       	out	0x3d, r28	; 61
     1b8:	9e 83       	std	Y+6, r25	; 0x06
     1ba:	8d 83       	std	Y+5, r24	; 0x05
     1bc:	78 87       	std	Y+8, r23	; 0x08
     1be:	6f 83       	std	Y+7, r22	; 0x07
    if(data == ADC_Res - 1){ return VoltRef;}
     1c0:	8f 81       	ldd	r24, Y+7	; 0x07
     1c2:	98 85       	ldd	r25, Y+8	; 0x08
     1c4:	8f 3f       	cpi	r24, 0xFF	; 255
     1c6:	93 40       	sbci	r25, 0x03	; 3
     1c8:	19 f4       	brne	.+6      	; 0x1d0 <ADC_Read_Volt+0x2c>
     1ca:	88 e8       	ldi	r24, 0x88	; 136
     1cc:	93 e1       	ldi	r25, 0x13	; 19
     1ce:	23 c0       	rjmp	.+70     	; 0x216 <ADC_Read_Volt+0x72>
    uint32_t volt = (uint32_t)data*VoltRef;
     1d0:	8f 81       	ldd	r24, Y+7	; 0x07
     1d2:	98 85       	ldd	r25, Y+8	; 0x08
     1d4:	9c 01       	movw	r18, r24
     1d6:	40 e0       	ldi	r20, 0x00	; 0
     1d8:	50 e0       	ldi	r21, 0x00	; 0
     1da:	88 e8       	ldi	r24, 0x88	; 136
     1dc:	93 e1       	ldi	r25, 0x13	; 19
     1de:	dc 01       	movw	r26, r24
     1e0:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <__muluhisi3>
     1e4:	dc 01       	movw	r26, r24
     1e6:	cb 01       	movw	r24, r22
     1e8:	89 83       	std	Y+1, r24	; 0x01
     1ea:	9a 83       	std	Y+2, r25	; 0x02
     1ec:	ab 83       	std	Y+3, r26	; 0x03
     1ee:	bc 83       	std	Y+4, r27	; 0x04
    volt /= ADC_Res;
     1f0:	89 81       	ldd	r24, Y+1	; 0x01
     1f2:	9a 81       	ldd	r25, Y+2	; 0x02
     1f4:	ab 81       	ldd	r26, Y+3	; 0x03
     1f6:	bc 81       	ldd	r27, Y+4	; 0x04
     1f8:	07 2e       	mov	r0, r23
     1fa:	7a e0       	ldi	r23, 0x0A	; 10
     1fc:	b6 95       	lsr	r27
     1fe:	a7 95       	ror	r26
     200:	97 95       	ror	r25
     202:	87 95       	ror	r24
     204:	7a 95       	dec	r23
     206:	d1 f7       	brne	.-12     	; 0x1fc <ADC_Read_Volt+0x58>
     208:	70 2d       	mov	r23, r0
     20a:	89 83       	std	Y+1, r24	; 0x01
     20c:	9a 83       	std	Y+2, r25	; 0x02
     20e:	ab 83       	std	Y+3, r26	; 0x03
     210:	bc 83       	std	Y+4, r27	; 0x04
    return volt;
     212:	89 81       	ldd	r24, Y+1	; 0x01
     214:	9a 81       	ldd	r25, Y+2	; 0x02
}
     216:	28 96       	adiw	r28, 0x08	; 8
     218:	0f b6       	in	r0, 0x3f	; 63
     21a:	f8 94       	cli
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	0f be       	out	0x3f, r0	; 63
     220:	cd bf       	out	0x3d, r28	; 61
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	08 95       	ret

00000228 <init>:
//_____________________________ MACRO Definition _______________________________
#define Master			1
//==============================================================================

void init(void)
{
     228:	cf 93       	push	r28
     22a:	df 93       	push	r29
     22c:	cd b7       	in	r28, 0x3d	; 61
     22e:	de b7       	in	r29, 0x3e	; 62
// Config LCD
	Lcd_config.Data_Port = PORT_B;
     230:	86 e3       	ldi	r24, 0x36	; 54
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <__data_end+0x1>
     238:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__data_end>
	Lcd_config.Enable_Port = PORT_D;
     23c:	80 e3       	ldi	r24, 0x30	; 48
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <__data_end+0x7>
     244:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__data_end+0x6>
	Lcd_config.RS_Port = PORT_D;
     248:	80 e3       	ldi	r24, 0x30	; 48
     24a:	90 e0       	ldi	r25, 0x00	; 0
     24c:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <__data_end+0x3>
     250:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end+0x2>
	Lcd_config.R_W_Port = PORT_D;
     254:	80 e3       	ldi	r24, 0x30	; 48
     256:	90 e0       	ldi	r25, 0x00	; 0
     258:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <__data_end+0x5>
     25c:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__data_end+0x4>
	Lcd_config.Enable_Pin = PIN_0;
     260:	81 e0       	ldi	r24, 0x01	; 1
     262:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <__data_end+0x9>
	Lcd_config.R_W_Pin = PIN_1;
     266:	82 e0       	ldi	r24, 0x02	; 2
     268:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__data_end+0x8>
	Lcd_config.RS_Pin = PIN_2;
     26c:	84 e0       	ldi	r24, 0x04	; 4
     26e:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__data_end+0xa>
	LCD_init(&Lcd_config);
     272:	8e e6       	ldi	r24, 0x6E	; 110
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	0e 94 f5 03 	call	0x7ea	; 0x7ea <LCD_init>


// Config ADC
	adc1_config.Channel = CH_7;
     27a:	87 e0       	ldi	r24, 0x07	; 7
     27c:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <adc1_config+0x2>
	adc1_config.Freq = ADC_SCALER_64;
     280:	86 e0       	ldi	r24, 0x06	; 6
     282:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <adc1_config+0x1>
	adc1_config.Vref = VREF_AVCC;	
     286:	81 e0       	ldi	r24, 0x01	; 1
     288:	80 93 79 00 	sts	0x0079, r24	; 0x800079 <adc1_config>
	ADC_Init(&adc1_config);
     28c:	89 e7       	ldi	r24, 0x79	; 121
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	0e 94 49 00 	call	0x92	; 0x92 <ADC_Init>

}
     294:	00 00       	nop
     296:	df 91       	pop	r29
     298:	cf 91       	pop	r28
     29a:	08 95       	ret

0000029c <program>:
uint8_t charge_value[16] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
uint16_t voltage;
uint8_t Pre ;
uint8_t charge ;
void program(void)
{ 	
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	00 d0       	rcall	.+0      	; 0x2a2 <program+0x6>
     2a2:	00 d0       	rcall	.+0      	; 0x2a4 <program+0x8>
     2a4:	cd b7       	in	r28, 0x3d	; 61
     2a6:	de b7       	in	r29, 0x3e	; 62
	// Read input voltage and calculate as voltage and Percentage 
	Adc_value = ADC_Read(&adc1_config);
     2a8:	89 e7       	ldi	r24, 0x79	; 121
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	0e 94 92 00 	call	0x124	; 0x124 <ADC_Read>
     2b0:	90 93 7d 00 	sts	0x007D, r25	; 0x80007d <Adc_value+0x1>
     2b4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <Adc_value>
	voltage = ADC_Read_Volt(&adc1_config, Adc_value);
     2b8:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <Adc_value>
     2bc:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <Adc_value+0x1>
     2c0:	bc 01       	movw	r22, r24
     2c2:	89 e7       	ldi	r24, 0x79	; 121
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <ADC_Read_Volt>
     2ca:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <voltage+0x1>
     2ce:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <voltage>
	Pre = voltage/50;
     2d2:	80 91 8c 00 	lds	r24, 0x008C	; 0x80008c <voltage>
     2d6:	90 91 8d 00 	lds	r25, 0x008D	; 0x80008d <voltage+0x1>
     2da:	96 95       	lsr	r25
     2dc:	87 95       	ror	r24
     2de:	9c 01       	movw	r18, r24
     2e0:	ab e7       	ldi	r26, 0x7B	; 123
     2e2:	b4 e1       	ldi	r27, 0x14	; 20
     2e4:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__umulhisi3>
     2e8:	96 95       	lsr	r25
     2ea:	87 95       	ror	r24
     2ec:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <Pre>

	
	snprintf(general, 17,"%d %dmV %d%%",Adc_value, voltage, Pre);
     2f0:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <Pre>
     2f4:	48 2f       	mov	r20, r24
     2f6:	50 e0       	ldi	r21, 0x00	; 0
     2f8:	20 91 8c 00 	lds	r18, 0x008C	; 0x80008c <voltage>
     2fc:	30 91 8d 00 	lds	r19, 0x008D	; 0x80008d <voltage+0x1>
     300:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <Adc_value>
     304:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <Adc_value+0x1>
     308:	65 2f       	mov	r22, r21
     30a:	6f 93       	push	r22
     30c:	4f 93       	push	r20
     30e:	43 2f       	mov	r20, r19
     310:	4f 93       	push	r20
     312:	2f 93       	push	r18
     314:	29 2f       	mov	r18, r25
     316:	2f 93       	push	r18
     318:	8f 93       	push	r24
     31a:	80 e6       	ldi	r24, 0x60	; 96
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	89 2f       	mov	r24, r25
     320:	8f 93       	push	r24
     322:	80 e6       	ldi	r24, 0x60	; 96
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	8f 93       	push	r24
     328:	1f 92       	push	r1
     32a:	81 e1       	ldi	r24, 0x11	; 17
     32c:	8f 93       	push	r24
     32e:	8e e8       	ldi	r24, 0x8E	; 142
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	89 2f       	mov	r24, r25
     334:	8f 93       	push	r24
     336:	8e e8       	ldi	r24, 0x8E	; 142
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	8f 93       	push	r24
     33c:	0e 94 f5 08 	call	0x11ea	; 0x11ea <snprintf>
     340:	8d b7       	in	r24, 0x3d	; 61
     342:	9e b7       	in	r25, 0x3e	; 62
     344:	0c 96       	adiw	r24, 0x0c	; 12
     346:	0f b6       	in	r0, 0x3f	; 63
     348:	f8 94       	cli
     34a:	de bf       	out	0x3e, r29	; 62
     34c:	0f be       	out	0x3f, r0	; 63
     34e:	cd bf       	out	0x3d, r28	; 61
	general[16] = '#';
     350:	83 e2       	ldi	r24, 0x23	; 35
     352:	80 93 9e 00 	sts	0x009E, r24	; 0x80009e <general+0x10>

	Jump_to_coordinator(&Lcd_config,0,First_R);
     356:	40 e0       	ldi	r20, 0x00	; 0
     358:	60 e0       	ldi	r22, 0x00	; 0
     35a:	8e e6       	ldi	r24, 0x6E	; 110
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	0e 94 ed 05 	call	0xbda	; 0xbda <Jump_to_coordinator>
	Write_String_Stop_with_Character(&Lcd_config, general, '#');
     362:	43 e2       	ldi	r20, 0x23	; 35
     364:	6e e8       	ldi	r22, 0x8E	; 142
     366:	70 e0       	ldi	r23, 0x00	; 0
     368:	8e e6       	ldi	r24, 0x6E	; 110
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	0e 94 53 06 	call	0xca6	; 0xca6 <Write_String_Stop_with_Character>

	for(int i = 0; i < 16; i++){general[i] = 0;}
     370:	1a 82       	std	Y+2, r1	; 0x02
     372:	19 82       	std	Y+1, r1	; 0x01
     374:	0b c0       	rjmp	.+22     	; 0x38c <program+0xf0>
     376:	89 81       	ldd	r24, Y+1	; 0x01
     378:	9a 81       	ldd	r25, Y+2	; 0x02
     37a:	82 57       	subi	r24, 0x72	; 114
     37c:	9f 4f       	sbci	r25, 0xFF	; 255
     37e:	fc 01       	movw	r30, r24
     380:	10 82       	st	Z, r1
     382:	89 81       	ldd	r24, Y+1	; 0x01
     384:	9a 81       	ldd	r25, Y+2	; 0x02
     386:	01 96       	adiw	r24, 0x01	; 1
     388:	9a 83       	std	Y+2, r25	; 0x02
     38a:	89 83       	std	Y+1, r24	; 0x01
     38c:	89 81       	ldd	r24, Y+1	; 0x01
     38e:	9a 81       	ldd	r25, Y+2	; 0x02
     390:	40 97       	sbiw	r24, 0x10	; 16
     392:	8c f3       	brlt	.-30     	; 0x376 <program+0xda>
	charge = Pre/6;
     394:	90 91 a0 00 	lds	r25, 0x00A0	; 0x8000a0 <Pre>
     398:	8b ea       	ldi	r24, 0xAB	; 171
     39a:	98 9f       	mul	r25, r24
     39c:	81 2d       	mov	r24, r1
     39e:	11 24       	eor	r1, r1
     3a0:	86 95       	lsr	r24
     3a2:	86 95       	lsr	r24
     3a4:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <charge>
	Jump_to_coordinator(&Lcd_config,0,Seconde_R);
     3a8:	41 e0       	ldi	r20, 0x01	; 1
     3aa:	60 e0       	ldi	r22, 0x00	; 0
     3ac:	8e e6       	ldi	r24, 0x6E	; 110
     3ae:	90 e0       	ldi	r25, 0x00	; 0
     3b0:	0e 94 ed 05 	call	0xbda	; 0xbda <Jump_to_coordinator>
	for(int i = 0 ; i < 16; i++)
     3b4:	1c 82       	std	Y+4, r1	; 0x04
     3b6:	1b 82       	std	Y+3, r1	; 0x03
     3b8:	19 c0       	rjmp	.+50     	; 0x3ec <program+0x150>
	{
		if(i < charge)
     3ba:	80 91 9f 00 	lds	r24, 0x009F	; 0x80009f <charge>
     3be:	28 2f       	mov	r18, r24
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	8b 81       	ldd	r24, Y+3	; 0x03
     3c4:	9c 81       	ldd	r25, Y+4	; 0x04
     3c6:	82 17       	cp	r24, r18
     3c8:	93 07       	cpc	r25, r19
     3ca:	34 f4       	brge	.+12     	; 0x3d8 <program+0x13c>
		{
			Write_Character(&Lcd_config, 0xFF);
     3cc:	6f ef       	ldi	r22, 0xFF	; 255
     3ce:	8e e6       	ldi	r24, 0x6E	; 110
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	0e 94 a6 05 	call	0xb4c	; 0xb4c <Write_Character>
     3d6:	05 c0       	rjmp	.+10     	; 0x3e2 <program+0x146>
		}else
		{
			Write_Character(&Lcd_config, 0);
     3d8:	60 e0       	ldi	r22, 0x00	; 0
     3da:	8e e6       	ldi	r24, 0x6E	; 110
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	0e 94 a6 05 	call	0xb4c	; 0xb4c <Write_Character>
	Write_String_Stop_with_Character(&Lcd_config, general, '#');

	for(int i = 0; i < 16; i++){general[i] = 0;}
	charge = Pre/6;
	Jump_to_coordinator(&Lcd_config,0,Seconde_R);
	for(int i = 0 ; i < 16; i++)
     3e2:	8b 81       	ldd	r24, Y+3	; 0x03
     3e4:	9c 81       	ldd	r25, Y+4	; 0x04
     3e6:	01 96       	adiw	r24, 0x01	; 1
     3e8:	9c 83       	std	Y+4, r25	; 0x04
     3ea:	8b 83       	std	Y+3, r24	; 0x03
     3ec:	8b 81       	ldd	r24, Y+3	; 0x03
     3ee:	9c 81       	ldd	r25, Y+4	; 0x04
     3f0:	40 97       	sbiw	r24, 0x10	; 16
     3f2:	1c f3       	brlt	.-58     	; 0x3ba <program+0x11e>
		}
	}

	//_delay_ms(100);

}
     3f4:	00 00       	nop
     3f6:	0f 90       	pop	r0
     3f8:	0f 90       	pop	r0
     3fa:	0f 90       	pop	r0
     3fc:	0f 90       	pop	r0
     3fe:	df 91       	pop	r29
     400:	cf 91       	pop	r28
     402:	08 95       	ret

00000404 <Write_Pin>:
     404:	cf 93       	push	r28
     406:	df 93       	push	r29
     408:	00 d0       	rcall	.+0      	; 0x40a <Write_Pin+0x6>
     40a:	00 d0       	rcall	.+0      	; 0x40c <Write_Pin+0x8>
     40c:	cd b7       	in	r28, 0x3d	; 61
     40e:	de b7       	in	r29, 0x3e	; 62
     410:	9a 83       	std	Y+2, r25	; 0x02
     412:	89 83       	std	Y+1, r24	; 0x01
     414:	6b 83       	std	Y+3, r22	; 0x03
     416:	4c 83       	std	Y+4, r20	; 0x04
     418:	89 81       	ldd	r24, Y+1	; 0x01
     41a:	9a 81       	ldd	r25, Y+2	; 0x02
     41c:	c9 97       	sbiw	r24, 0x39	; 57
     41e:	71 f0       	breq	.+28     	; 0x43c <Write_Pin+0x38>
     420:	89 81       	ldd	r24, Y+1	; 0x01
     422:	9a 81       	ldd	r25, Y+2	; 0x02
     424:	c6 97       	sbiw	r24, 0x36	; 54
     426:	51 f0       	breq	.+20     	; 0x43c <Write_Pin+0x38>
     428:	89 81       	ldd	r24, Y+1	; 0x01
     42a:	9a 81       	ldd	r25, Y+2	; 0x02
     42c:	c3 97       	sbiw	r24, 0x33	; 51
     42e:	31 f0       	breq	.+12     	; 0x43c <Write_Pin+0x38>
     430:	89 81       	ldd	r24, Y+1	; 0x01
     432:	9a 81       	ldd	r25, Y+2	; 0x02
     434:	c0 97       	sbiw	r24, 0x30	; 48
     436:	11 f0       	breq	.+4      	; 0x43c <Write_Pin+0x38>
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	1d c0       	rjmp	.+58     	; 0x476 <Write_Pin+0x72>
     43c:	8c 81       	ldd	r24, Y+4	; 0x04
     43e:	81 30       	cpi	r24, 0x01	; 1
     440:	61 f4       	brne	.+24     	; 0x45a <Write_Pin+0x56>
     442:	89 81       	ldd	r24, Y+1	; 0x01
     444:	9a 81       	ldd	r25, Y+2	; 0x02
     446:	fc 01       	movw	r30, r24
     448:	92 81       	ldd	r25, Z+2	; 0x02
     44a:	8b 81       	ldd	r24, Y+3	; 0x03
     44c:	29 2f       	mov	r18, r25
     44e:	28 2b       	or	r18, r24
     450:	89 81       	ldd	r24, Y+1	; 0x01
     452:	9a 81       	ldd	r25, Y+2	; 0x02
     454:	fc 01       	movw	r30, r24
     456:	22 83       	std	Z+2, r18	; 0x02
     458:	0d c0       	rjmp	.+26     	; 0x474 <Write_Pin+0x70>
     45a:	89 81       	ldd	r24, Y+1	; 0x01
     45c:	9a 81       	ldd	r25, Y+2	; 0x02
     45e:	fc 01       	movw	r30, r24
     460:	82 81       	ldd	r24, Z+2	; 0x02
     462:	98 2f       	mov	r25, r24
     464:	8b 81       	ldd	r24, Y+3	; 0x03
     466:	80 95       	com	r24
     468:	89 23       	and	r24, r25
     46a:	28 2f       	mov	r18, r24
     46c:	89 81       	ldd	r24, Y+1	; 0x01
     46e:	9a 81       	ldd	r25, Y+2	; 0x02
     470:	fc 01       	movw	r30, r24
     472:	22 83       	std	Z+2, r18	; 0x02
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	0f 90       	pop	r0
     478:	0f 90       	pop	r0
     47a:	0f 90       	pop	r0
     47c:	0f 90       	pop	r0
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	08 95       	ret

00000484 <Write_Port_Register>:
     484:	cf 93       	push	r28
     486:	df 93       	push	r29
     488:	00 d0       	rcall	.+0      	; 0x48a <Write_Port_Register+0x6>
     48a:	1f 92       	push	r1
     48c:	cd b7       	in	r28, 0x3d	; 61
     48e:	de b7       	in	r29, 0x3e	; 62
     490:	9a 83       	std	Y+2, r25	; 0x02
     492:	89 83       	std	Y+1, r24	; 0x01
     494:	6b 83       	std	Y+3, r22	; 0x03
     496:	89 81       	ldd	r24, Y+1	; 0x01
     498:	9a 81       	ldd	r25, Y+2	; 0x02
     49a:	c9 97       	sbiw	r24, 0x39	; 57
     49c:	61 f0       	breq	.+24     	; 0x4b6 <Write_Port_Register+0x32>
     49e:	89 81       	ldd	r24, Y+1	; 0x01
     4a0:	9a 81       	ldd	r25, Y+2	; 0x02
     4a2:	c6 97       	sbiw	r24, 0x36	; 54
     4a4:	41 f0       	breq	.+16     	; 0x4b6 <Write_Port_Register+0x32>
     4a6:	89 81       	ldd	r24, Y+1	; 0x01
     4a8:	9a 81       	ldd	r25, Y+2	; 0x02
     4aa:	c3 97       	sbiw	r24, 0x33	; 51
     4ac:	21 f0       	breq	.+8      	; 0x4b6 <Write_Port_Register+0x32>
     4ae:	89 81       	ldd	r24, Y+1	; 0x01
     4b0:	9a 81       	ldd	r25, Y+2	; 0x02
     4b2:	c0 97       	sbiw	r24, 0x30	; 48
     4b4:	31 f4       	brne	.+12     	; 0x4c2 <Write_Port_Register+0x3e>
     4b6:	89 81       	ldd	r24, Y+1	; 0x01
     4b8:	9a 81       	ldd	r25, Y+2	; 0x02
     4ba:	2b 81       	ldd	r18, Y+3	; 0x03
     4bc:	fc 01       	movw	r30, r24
     4be:	22 83       	std	Z+2, r18	; 0x02
     4c0:	01 c0       	rjmp	.+2      	; 0x4c4 <Write_Port_Register+0x40>
     4c2:	00 00       	nop
     4c4:	0f 90       	pop	r0
     4c6:	0f 90       	pop	r0
     4c8:	0f 90       	pop	r0
     4ca:	df 91       	pop	r29
     4cc:	cf 91       	pop	r28
     4ce:	08 95       	ret

000004d0 <Change_Direction>:
     4d0:	cf 93       	push	r28
     4d2:	df 93       	push	r29
     4d4:	00 d0       	rcall	.+0      	; 0x4d6 <Change_Direction+0x6>
     4d6:	00 d0       	rcall	.+0      	; 0x4d8 <Change_Direction+0x8>
     4d8:	cd b7       	in	r28, 0x3d	; 61
     4da:	de b7       	in	r29, 0x3e	; 62
     4dc:	9a 83       	std	Y+2, r25	; 0x02
     4de:	89 83       	std	Y+1, r24	; 0x01
     4e0:	6b 83       	std	Y+3, r22	; 0x03
     4e2:	4c 83       	std	Y+4, r20	; 0x04
     4e4:	89 81       	ldd	r24, Y+1	; 0x01
     4e6:	9a 81       	ldd	r25, Y+2	; 0x02
     4e8:	c9 97       	sbiw	r24, 0x39	; 57
     4ea:	69 f0       	breq	.+26     	; 0x506 <Change_Direction+0x36>
     4ec:	89 81       	ldd	r24, Y+1	; 0x01
     4ee:	9a 81       	ldd	r25, Y+2	; 0x02
     4f0:	c6 97       	sbiw	r24, 0x36	; 54
     4f2:	49 f0       	breq	.+18     	; 0x506 <Change_Direction+0x36>
     4f4:	89 81       	ldd	r24, Y+1	; 0x01
     4f6:	9a 81       	ldd	r25, Y+2	; 0x02
     4f8:	c3 97       	sbiw	r24, 0x33	; 51
     4fa:	29 f0       	breq	.+10     	; 0x506 <Change_Direction+0x36>
     4fc:	89 81       	ldd	r24, Y+1	; 0x01
     4fe:	9a 81       	ldd	r25, Y+2	; 0x02
     500:	c0 97       	sbiw	r24, 0x30	; 48
     502:	09 f0       	breq	.+2      	; 0x506 <Change_Direction+0x36>
     504:	a0 c0       	rjmp	.+320    	; 0x646 <Change_Direction+0x176>
     506:	8b 81       	ldd	r24, Y+3	; 0x03
     508:	88 2f       	mov	r24, r24
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	88 30       	cpi	r24, 0x08	; 8
     50e:	91 05       	cpc	r25, r1
     510:	09 f4       	brne	.+2      	; 0x514 <Change_Direction+0x44>
     512:	4a c0       	rjmp	.+148    	; 0x5a8 <Change_Direction+0xd8>
     514:	89 30       	cpi	r24, 0x09	; 9
     516:	91 05       	cpc	r25, r1
     518:	4c f4       	brge	.+18     	; 0x52c <Change_Direction+0x5c>
     51a:	82 30       	cpi	r24, 0x02	; 2
     51c:	91 05       	cpc	r25, r1
     51e:	39 f1       	breq	.+78     	; 0x56e <Change_Direction+0x9e>
     520:	84 30       	cpi	r24, 0x04	; 4
     522:	91 05       	cpc	r25, r1
     524:	91 f1       	breq	.+100    	; 0x58a <Change_Direction+0xba>
     526:	01 97       	sbiw	r24, 0x01	; 1
     528:	a9 f0       	breq	.+42     	; 0x554 <Change_Direction+0x84>
     52a:	8e c0       	rjmp	.+284    	; 0x648 <Change_Direction+0x178>
     52c:	80 32       	cpi	r24, 0x20	; 32
     52e:	91 05       	cpc	r25, r1
     530:	09 f4       	brne	.+2      	; 0x534 <Change_Direction+0x64>
     532:	59 c0       	rjmp	.+178    	; 0x5e6 <Change_Direction+0x116>
     534:	81 32       	cpi	r24, 0x21	; 33
     536:	91 05       	cpc	r25, r1
     538:	24 f4       	brge	.+8      	; 0x542 <Change_Direction+0x72>
     53a:	40 97       	sbiw	r24, 0x10	; 16
     53c:	09 f4       	brne	.+2      	; 0x540 <Change_Direction+0x70>
     53e:	44 c0       	rjmp	.+136    	; 0x5c8 <Change_Direction+0xf8>
     540:	83 c0       	rjmp	.+262    	; 0x648 <Change_Direction+0x178>
     542:	80 34       	cpi	r24, 0x40	; 64
     544:	91 05       	cpc	r25, r1
     546:	09 f4       	brne	.+2      	; 0x54a <Change_Direction+0x7a>
     548:	5e c0       	rjmp	.+188    	; 0x606 <Change_Direction+0x136>
     54a:	80 38       	cpi	r24, 0x80	; 128
     54c:	91 05       	cpc	r25, r1
     54e:	09 f4       	brne	.+2      	; 0x552 <Change_Direction+0x82>
     550:	6b c0       	rjmp	.+214    	; 0x628 <Change_Direction+0x158>
     552:	7a c0       	rjmp	.+244    	; 0x648 <Change_Direction+0x178>
     554:	8c 81       	ldd	r24, Y+4	; 0x04
     556:	28 2f       	mov	r18, r24
     558:	21 70       	andi	r18, 0x01	; 1
     55a:	89 81       	ldd	r24, Y+1	; 0x01
     55c:	9a 81       	ldd	r25, Y+2	; 0x02
     55e:	21 70       	andi	r18, 0x01	; 1
     560:	fc 01       	movw	r30, r24
     562:	31 81       	ldd	r19, Z+1	; 0x01
     564:	3e 7f       	andi	r19, 0xFE	; 254
     566:	23 2b       	or	r18, r19
     568:	fc 01       	movw	r30, r24
     56a:	21 83       	std	Z+1, r18	; 0x01
     56c:	6d c0       	rjmp	.+218    	; 0x648 <Change_Direction+0x178>
     56e:	8c 81       	ldd	r24, Y+4	; 0x04
     570:	28 2f       	mov	r18, r24
     572:	21 70       	andi	r18, 0x01	; 1
     574:	89 81       	ldd	r24, Y+1	; 0x01
     576:	9a 81       	ldd	r25, Y+2	; 0x02
     578:	21 70       	andi	r18, 0x01	; 1
     57a:	22 0f       	add	r18, r18
     57c:	fc 01       	movw	r30, r24
     57e:	31 81       	ldd	r19, Z+1	; 0x01
     580:	3d 7f       	andi	r19, 0xFD	; 253
     582:	23 2b       	or	r18, r19
     584:	fc 01       	movw	r30, r24
     586:	21 83       	std	Z+1, r18	; 0x01
     588:	5f c0       	rjmp	.+190    	; 0x648 <Change_Direction+0x178>
     58a:	8c 81       	ldd	r24, Y+4	; 0x04
     58c:	28 2f       	mov	r18, r24
     58e:	21 70       	andi	r18, 0x01	; 1
     590:	89 81       	ldd	r24, Y+1	; 0x01
     592:	9a 81       	ldd	r25, Y+2	; 0x02
     594:	21 70       	andi	r18, 0x01	; 1
     596:	22 0f       	add	r18, r18
     598:	22 0f       	add	r18, r18
     59a:	fc 01       	movw	r30, r24
     59c:	31 81       	ldd	r19, Z+1	; 0x01
     59e:	3b 7f       	andi	r19, 0xFB	; 251
     5a0:	23 2b       	or	r18, r19
     5a2:	fc 01       	movw	r30, r24
     5a4:	21 83       	std	Z+1, r18	; 0x01
     5a6:	50 c0       	rjmp	.+160    	; 0x648 <Change_Direction+0x178>
     5a8:	8c 81       	ldd	r24, Y+4	; 0x04
     5aa:	28 2f       	mov	r18, r24
     5ac:	21 70       	andi	r18, 0x01	; 1
     5ae:	89 81       	ldd	r24, Y+1	; 0x01
     5b0:	9a 81       	ldd	r25, Y+2	; 0x02
     5b2:	21 70       	andi	r18, 0x01	; 1
     5b4:	22 0f       	add	r18, r18
     5b6:	22 0f       	add	r18, r18
     5b8:	22 0f       	add	r18, r18
     5ba:	fc 01       	movw	r30, r24
     5bc:	31 81       	ldd	r19, Z+1	; 0x01
     5be:	37 7f       	andi	r19, 0xF7	; 247
     5c0:	23 2b       	or	r18, r19
     5c2:	fc 01       	movw	r30, r24
     5c4:	21 83       	std	Z+1, r18	; 0x01
     5c6:	40 c0       	rjmp	.+128    	; 0x648 <Change_Direction+0x178>
     5c8:	8c 81       	ldd	r24, Y+4	; 0x04
     5ca:	28 2f       	mov	r18, r24
     5cc:	21 70       	andi	r18, 0x01	; 1
     5ce:	89 81       	ldd	r24, Y+1	; 0x01
     5d0:	9a 81       	ldd	r25, Y+2	; 0x02
     5d2:	21 70       	andi	r18, 0x01	; 1
     5d4:	22 95       	swap	r18
     5d6:	20 7f       	andi	r18, 0xF0	; 240
     5d8:	fc 01       	movw	r30, r24
     5da:	31 81       	ldd	r19, Z+1	; 0x01
     5dc:	3f 7e       	andi	r19, 0xEF	; 239
     5de:	23 2b       	or	r18, r19
     5e0:	fc 01       	movw	r30, r24
     5e2:	21 83       	std	Z+1, r18	; 0x01
     5e4:	31 c0       	rjmp	.+98     	; 0x648 <Change_Direction+0x178>
     5e6:	8c 81       	ldd	r24, Y+4	; 0x04
     5e8:	28 2f       	mov	r18, r24
     5ea:	21 70       	andi	r18, 0x01	; 1
     5ec:	89 81       	ldd	r24, Y+1	; 0x01
     5ee:	9a 81       	ldd	r25, Y+2	; 0x02
     5f0:	21 70       	andi	r18, 0x01	; 1
     5f2:	22 95       	swap	r18
     5f4:	22 0f       	add	r18, r18
     5f6:	20 7e       	andi	r18, 0xE0	; 224
     5f8:	fc 01       	movw	r30, r24
     5fa:	31 81       	ldd	r19, Z+1	; 0x01
     5fc:	3f 7d       	andi	r19, 0xDF	; 223
     5fe:	23 2b       	or	r18, r19
     600:	fc 01       	movw	r30, r24
     602:	21 83       	std	Z+1, r18	; 0x01
     604:	21 c0       	rjmp	.+66     	; 0x648 <Change_Direction+0x178>
     606:	8c 81       	ldd	r24, Y+4	; 0x04
     608:	28 2f       	mov	r18, r24
     60a:	21 70       	andi	r18, 0x01	; 1
     60c:	89 81       	ldd	r24, Y+1	; 0x01
     60e:	9a 81       	ldd	r25, Y+2	; 0x02
     610:	21 70       	andi	r18, 0x01	; 1
     612:	22 95       	swap	r18
     614:	22 0f       	add	r18, r18
     616:	22 0f       	add	r18, r18
     618:	20 7c       	andi	r18, 0xC0	; 192
     61a:	fc 01       	movw	r30, r24
     61c:	31 81       	ldd	r19, Z+1	; 0x01
     61e:	3f 7b       	andi	r19, 0xBF	; 191
     620:	23 2b       	or	r18, r19
     622:	fc 01       	movw	r30, r24
     624:	21 83       	std	Z+1, r18	; 0x01
     626:	10 c0       	rjmp	.+32     	; 0x648 <Change_Direction+0x178>
     628:	8c 81       	ldd	r24, Y+4	; 0x04
     62a:	28 2f       	mov	r18, r24
     62c:	21 70       	andi	r18, 0x01	; 1
     62e:	89 81       	ldd	r24, Y+1	; 0x01
     630:	9a 81       	ldd	r25, Y+2	; 0x02
     632:	27 95       	ror	r18
     634:	22 27       	eor	r18, r18
     636:	27 95       	ror	r18
     638:	fc 01       	movw	r30, r24
     63a:	31 81       	ldd	r19, Z+1	; 0x01
     63c:	3f 77       	andi	r19, 0x7F	; 127
     63e:	23 2b       	or	r18, r19
     640:	fc 01       	movw	r30, r24
     642:	21 83       	std	Z+1, r18	; 0x01
     644:	01 c0       	rjmp	.+2      	; 0x648 <Change_Direction+0x178>
     646:	00 00       	nop
     648:	0f 90       	pop	r0
     64a:	0f 90       	pop	r0
     64c:	0f 90       	pop	r0
     64e:	0f 90       	pop	r0
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	08 95       	ret

00000656 <Write_Dir_Register>:
     656:	cf 93       	push	r28
     658:	df 93       	push	r29
     65a:	00 d0       	rcall	.+0      	; 0x65c <Write_Dir_Register+0x6>
     65c:	1f 92       	push	r1
     65e:	cd b7       	in	r28, 0x3d	; 61
     660:	de b7       	in	r29, 0x3e	; 62
     662:	9a 83       	std	Y+2, r25	; 0x02
     664:	89 83       	std	Y+1, r24	; 0x01
     666:	6b 83       	std	Y+3, r22	; 0x03
     668:	89 81       	ldd	r24, Y+1	; 0x01
     66a:	9a 81       	ldd	r25, Y+2	; 0x02
     66c:	c9 97       	sbiw	r24, 0x39	; 57
     66e:	61 f0       	breq	.+24     	; 0x688 <Write_Dir_Register+0x32>
     670:	89 81       	ldd	r24, Y+1	; 0x01
     672:	9a 81       	ldd	r25, Y+2	; 0x02
     674:	c6 97       	sbiw	r24, 0x36	; 54
     676:	41 f0       	breq	.+16     	; 0x688 <Write_Dir_Register+0x32>
     678:	89 81       	ldd	r24, Y+1	; 0x01
     67a:	9a 81       	ldd	r25, Y+2	; 0x02
     67c:	c3 97       	sbiw	r24, 0x33	; 51
     67e:	21 f0       	breq	.+8      	; 0x688 <Write_Dir_Register+0x32>
     680:	89 81       	ldd	r24, Y+1	; 0x01
     682:	9a 81       	ldd	r25, Y+2	; 0x02
     684:	c0 97       	sbiw	r24, 0x30	; 48
     686:	31 f4       	brne	.+12     	; 0x694 <Write_Dir_Register+0x3e>
     688:	89 81       	ldd	r24, Y+1	; 0x01
     68a:	9a 81       	ldd	r25, Y+2	; 0x02
     68c:	2b 81       	ldd	r18, Y+3	; 0x03
     68e:	fc 01       	movw	r30, r24
     690:	21 83       	std	Z+1, r18	; 0x01
     692:	01 c0       	rjmp	.+2      	; 0x696 <Write_Dir_Register+0x40>
     694:	00 00       	nop
     696:	0f 90       	pop	r0
     698:	0f 90       	pop	r0
     69a:	0f 90       	pop	r0
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	08 95       	ret

000006a2 <Kick_Enable_pin>:
}

void clean_Lcd(LCD_16_2 *lcd_instance)
{
    Write_Command(lcd_instance,CMD_LCD_Clear);
}
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	cd b7       	in	r28, 0x3d	; 61
     6a8:	de b7       	in	r29, 0x3e	; 62
     6aa:	60 97       	sbiw	r28, 0x10	; 16
     6ac:	0f b6       	in	r0, 0x3f	; 63
     6ae:	f8 94       	cli
     6b0:	de bf       	out	0x3e, r29	; 62
     6b2:	0f be       	out	0x3f, r0	; 63
     6b4:	cd bf       	out	0x3d, r28	; 61
     6b6:	98 8b       	std	Y+16, r25	; 0x10
     6b8:	8f 87       	std	Y+15, r24	; 0x0f
     6ba:	8f 85       	ldd	r24, Y+15	; 0x0f
     6bc:	98 89       	ldd	r25, Y+16	; 0x10
     6be:	fc 01       	movw	r30, r24
     6c0:	21 85       	ldd	r18, Z+9	; 0x09
     6c2:	8f 85       	ldd	r24, Y+15	; 0x0f
     6c4:	98 89       	ldd	r25, Y+16	; 0x10
     6c6:	fc 01       	movw	r30, r24
     6c8:	86 81       	ldd	r24, Z+6	; 0x06
     6ca:	97 81       	ldd	r25, Z+7	; 0x07
     6cc:	40 e0       	ldi	r20, 0x00	; 0
     6ce:	62 2f       	mov	r22, r18
     6d0:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     6d4:	00 00       	nop
     6d6:	00 00       	nop
     6d8:	80 e0       	ldi	r24, 0x00	; 0
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	a0 e8       	ldi	r26, 0x80	; 128
     6de:	bf e3       	ldi	r27, 0x3F	; 63
     6e0:	89 83       	std	Y+1, r24	; 0x01
     6e2:	9a 83       	std	Y+2, r25	; 0x02
     6e4:	ab 83       	std	Y+3, r26	; 0x03
     6e6:	bc 83       	std	Y+4, r27	; 0x04
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	4a e7       	ldi	r20, 0x7A	; 122
     6ee:	55 e4       	ldi	r21, 0x45	; 69
     6f0:	69 81       	ldd	r22, Y+1	; 0x01
     6f2:	7a 81       	ldd	r23, Y+2	; 0x02
     6f4:	8b 81       	ldd	r24, Y+3	; 0x03
     6f6:	9c 81       	ldd	r25, Y+4	; 0x04
     6f8:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     6fc:	dc 01       	movw	r26, r24
     6fe:	cb 01       	movw	r24, r22
     700:	8d 83       	std	Y+5, r24	; 0x05
     702:	9e 83       	std	Y+6, r25	; 0x06
     704:	af 83       	std	Y+7, r26	; 0x07
     706:	b8 87       	std	Y+8, r27	; 0x08
     708:	20 e0       	ldi	r18, 0x00	; 0
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	40 e8       	ldi	r20, 0x80	; 128
     70e:	5f e3       	ldi	r21, 0x3F	; 63
     710:	6d 81       	ldd	r22, Y+5	; 0x05
     712:	7e 81       	ldd	r23, Y+6	; 0x06
     714:	8f 81       	ldd	r24, Y+7	; 0x07
     716:	98 85       	ldd	r25, Y+8	; 0x08
     718:	0e 94 c0 07 	call	0xf80	; 0xf80 <__cmpsf2>
     71c:	88 23       	and	r24, r24
     71e:	2c f4       	brge	.+10     	; 0x72a <Kick_Enable_pin+0x88>
     720:	81 e0       	ldi	r24, 0x01	; 1
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	9a 87       	std	Y+10, r25	; 0x0a
     726:	89 87       	std	Y+9, r24	; 0x09
     728:	3f c0       	rjmp	.+126    	; 0x7a8 <Kick_Enable_pin+0x106>
     72a:	20 e0       	ldi	r18, 0x00	; 0
     72c:	3f ef       	ldi	r19, 0xFF	; 255
     72e:	4f e7       	ldi	r20, 0x7F	; 127
     730:	57 e4       	ldi	r21, 0x47	; 71
     732:	6d 81       	ldd	r22, Y+5	; 0x05
     734:	7e 81       	ldd	r23, Y+6	; 0x06
     736:	8f 81       	ldd	r24, Y+7	; 0x07
     738:	98 85       	ldd	r25, Y+8	; 0x08
     73a:	0e 94 41 08 	call	0x1082	; 0x1082 <__gesf2>
     73e:	18 16       	cp	r1, r24
     740:	4c f5       	brge	.+82     	; 0x794 <Kick_Enable_pin+0xf2>
     742:	20 e0       	ldi	r18, 0x00	; 0
     744:	30 e0       	ldi	r19, 0x00	; 0
     746:	40 e2       	ldi	r20, 0x20	; 32
     748:	51 e4       	ldi	r21, 0x41	; 65
     74a:	69 81       	ldd	r22, Y+1	; 0x01
     74c:	7a 81       	ldd	r23, Y+2	; 0x02
     74e:	8b 81       	ldd	r24, Y+3	; 0x03
     750:	9c 81       	ldd	r25, Y+4	; 0x04
     752:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     756:	dc 01       	movw	r26, r24
     758:	cb 01       	movw	r24, r22
     75a:	bc 01       	movw	r22, r24
     75c:	cd 01       	movw	r24, r26
     75e:	0e 94 c5 07 	call	0xf8a	; 0xf8a <__fixunssfsi>
     762:	dc 01       	movw	r26, r24
     764:	cb 01       	movw	r24, r22
     766:	9a 87       	std	Y+10, r25	; 0x0a
     768:	89 87       	std	Y+9, r24	; 0x09
     76a:	0f c0       	rjmp	.+30     	; 0x78a <Kick_Enable_pin+0xe8>
     76c:	80 e9       	ldi	r24, 0x90	; 144
     76e:	91 e0       	ldi	r25, 0x01	; 1
     770:	9c 87       	std	Y+12, r25	; 0x0c
     772:	8b 87       	std	Y+11, r24	; 0x0b
     774:	8b 85       	ldd	r24, Y+11	; 0x0b
     776:	9c 85       	ldd	r25, Y+12	; 0x0c
     778:	01 97       	sbiw	r24, 0x01	; 1
     77a:	f1 f7       	brne	.-4      	; 0x778 <Kick_Enable_pin+0xd6>
     77c:	9c 87       	std	Y+12, r25	; 0x0c
     77e:	8b 87       	std	Y+11, r24	; 0x0b
     780:	89 85       	ldd	r24, Y+9	; 0x09
     782:	9a 85       	ldd	r25, Y+10	; 0x0a
     784:	01 97       	sbiw	r24, 0x01	; 1
     786:	9a 87       	std	Y+10, r25	; 0x0a
     788:	89 87       	std	Y+9, r24	; 0x09
     78a:	89 85       	ldd	r24, Y+9	; 0x09
     78c:	9a 85       	ldd	r25, Y+10	; 0x0a
     78e:	89 2b       	or	r24, r25
     790:	69 f7       	brne	.-38     	; 0x76c <Kick_Enable_pin+0xca>
     792:	14 c0       	rjmp	.+40     	; 0x7bc <Kick_Enable_pin+0x11a>
     794:	6d 81       	ldd	r22, Y+5	; 0x05
     796:	7e 81       	ldd	r23, Y+6	; 0x06
     798:	8f 81       	ldd	r24, Y+7	; 0x07
     79a:	98 85       	ldd	r25, Y+8	; 0x08
     79c:	0e 94 c5 07 	call	0xf8a	; 0xf8a <__fixunssfsi>
     7a0:	dc 01       	movw	r26, r24
     7a2:	cb 01       	movw	r24, r22
     7a4:	9a 87       	std	Y+10, r25	; 0x0a
     7a6:	89 87       	std	Y+9, r24	; 0x09
     7a8:	89 85       	ldd	r24, Y+9	; 0x09
     7aa:	9a 85       	ldd	r25, Y+10	; 0x0a
     7ac:	9e 87       	std	Y+14, r25	; 0x0e
     7ae:	8d 87       	std	Y+13, r24	; 0x0d
     7b0:	8d 85       	ldd	r24, Y+13	; 0x0d
     7b2:	9e 85       	ldd	r25, Y+14	; 0x0e
     7b4:	01 97       	sbiw	r24, 0x01	; 1
     7b6:	f1 f7       	brne	.-4      	; 0x7b4 <Kick_Enable_pin+0x112>
     7b8:	9e 87       	std	Y+14, r25	; 0x0e
     7ba:	8d 87       	std	Y+13, r24	; 0x0d
     7bc:	8f 85       	ldd	r24, Y+15	; 0x0f
     7be:	98 89       	ldd	r25, Y+16	; 0x10
     7c0:	fc 01       	movw	r30, r24
     7c2:	21 85       	ldd	r18, Z+9	; 0x09
     7c4:	8f 85       	ldd	r24, Y+15	; 0x0f
     7c6:	98 89       	ldd	r25, Y+16	; 0x10
     7c8:	fc 01       	movw	r30, r24
     7ca:	86 81       	ldd	r24, Z+6	; 0x06
     7cc:	97 81       	ldd	r25, Z+7	; 0x07
     7ce:	41 e0       	ldi	r20, 0x01	; 1
     7d0:	62 2f       	mov	r22, r18
     7d2:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     7d6:	00 00       	nop
     7d8:	60 96       	adiw	r28, 0x10	; 16
     7da:	0f b6       	in	r0, 0x3f	; 63
     7dc:	f8 94       	cli
     7de:	de bf       	out	0x3e, r29	; 62
     7e0:	0f be       	out	0x3f, r0	; 63
     7e2:	cd bf       	out	0x3d, r28	; 61
     7e4:	df 91       	pop	r29
     7e6:	cf 91       	pop	r28
     7e8:	08 95       	ret

000007ea <LCD_init>:
     7ea:	cf 93       	push	r28
     7ec:	df 93       	push	r29
     7ee:	cd b7       	in	r28, 0x3d	; 61
     7f0:	de b7       	in	r29, 0x3e	; 62
     7f2:	6e 97       	sbiw	r28, 0x1e	; 30
     7f4:	0f b6       	in	r0, 0x3f	; 63
     7f6:	f8 94       	cli
     7f8:	de bf       	out	0x3e, r29	; 62
     7fa:	0f be       	out	0x3f, r0	; 63
     7fc:	cd bf       	out	0x3d, r28	; 61
     7fe:	9e 8f       	std	Y+30, r25	; 0x1e
     800:	8d 8f       	std	Y+29, r24	; 0x1d
     802:	8d 8d       	ldd	r24, Y+29	; 0x1d
     804:	9e 8d       	ldd	r25, Y+30	; 0x1e
     806:	fc 01       	movw	r30, r24
     808:	20 85       	ldd	r18, Z+8	; 0x08
     80a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     80c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     80e:	fc 01       	movw	r30, r24
     810:	84 81       	ldd	r24, Z+4	; 0x04
     812:	95 81       	ldd	r25, Z+5	; 0x05
     814:	41 e0       	ldi	r20, 0x01	; 1
     816:	62 2f       	mov	r22, r18
     818:	0e 94 68 02 	call	0x4d0	; 0x4d0 <Change_Direction>
     81c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     81e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     820:	fc 01       	movw	r30, r24
     822:	22 85       	ldd	r18, Z+10	; 0x0a
     824:	8d 8d       	ldd	r24, Y+29	; 0x1d
     826:	9e 8d       	ldd	r25, Y+30	; 0x1e
     828:	fc 01       	movw	r30, r24
     82a:	82 81       	ldd	r24, Z+2	; 0x02
     82c:	93 81       	ldd	r25, Z+3	; 0x03
     82e:	41 e0       	ldi	r20, 0x01	; 1
     830:	62 2f       	mov	r22, r18
     832:	0e 94 68 02 	call	0x4d0	; 0x4d0 <Change_Direction>
     836:	8d 8d       	ldd	r24, Y+29	; 0x1d
     838:	9e 8d       	ldd	r25, Y+30	; 0x1e
     83a:	fc 01       	movw	r30, r24
     83c:	21 85       	ldd	r18, Z+9	; 0x09
     83e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     840:	9e 8d       	ldd	r25, Y+30	; 0x1e
     842:	fc 01       	movw	r30, r24
     844:	86 81       	ldd	r24, Z+6	; 0x06
     846:	97 81       	ldd	r25, Z+7	; 0x07
     848:	41 e0       	ldi	r20, 0x01	; 1
     84a:	62 2f       	mov	r22, r18
     84c:	0e 94 68 02 	call	0x4d0	; 0x4d0 <Change_Direction>
     850:	8d 8d       	ldd	r24, Y+29	; 0x1d
     852:	9e 8d       	ldd	r25, Y+30	; 0x1e
     854:	fc 01       	movw	r30, r24
     856:	22 85       	ldd	r18, Z+10	; 0x0a
     858:	8d 8d       	ldd	r24, Y+29	; 0x1d
     85a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     85c:	fc 01       	movw	r30, r24
     85e:	82 81       	ldd	r24, Z+2	; 0x02
     860:	93 81       	ldd	r25, Z+3	; 0x03
     862:	40 e0       	ldi	r20, 0x00	; 0
     864:	62 2f       	mov	r22, r18
     866:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     86a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     86c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     86e:	fc 01       	movw	r30, r24
     870:	20 85       	ldd	r18, Z+8	; 0x08
     872:	8d 8d       	ldd	r24, Y+29	; 0x1d
     874:	9e 8d       	ldd	r25, Y+30	; 0x1e
     876:	fc 01       	movw	r30, r24
     878:	84 81       	ldd	r24, Z+4	; 0x04
     87a:	95 81       	ldd	r25, Z+5	; 0x05
     87c:	40 e0       	ldi	r20, 0x00	; 0
     87e:	62 2f       	mov	r22, r18
     880:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     884:	8d 8d       	ldd	r24, Y+29	; 0x1d
     886:	9e 8d       	ldd	r25, Y+30	; 0x1e
     888:	fc 01       	movw	r30, r24
     88a:	21 85       	ldd	r18, Z+9	; 0x09
     88c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     88e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     890:	fc 01       	movw	r30, r24
     892:	86 81       	ldd	r24, Z+6	; 0x06
     894:	97 81       	ldd	r25, Z+7	; 0x07
     896:	40 e0       	ldi	r20, 0x00	; 0
     898:	62 2f       	mov	r22, r18
     89a:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     89e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     8a0:	9e 8d       	ldd	r25, Y+30	; 0x1e
     8a2:	fc 01       	movw	r30, r24
     8a4:	80 81       	ld	r24, Z
     8a6:	91 81       	ldd	r25, Z+1	; 0x01
     8a8:	6f ef       	ldi	r22, 0xFF	; 255
     8aa:	0e 94 2b 03 	call	0x656	; 0x656 <Write_Dir_Register>
     8ae:	80 e0       	ldi	r24, 0x00	; 0
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	a0 eb       	ldi	r26, 0xB0	; 176
     8b4:	b1 e4       	ldi	r27, 0x41	; 65
     8b6:	89 83       	std	Y+1, r24	; 0x01
     8b8:	9a 83       	std	Y+2, r25	; 0x02
     8ba:	ab 83       	std	Y+3, r26	; 0x03
     8bc:	bc 83       	std	Y+4, r27	; 0x04
     8be:	20 e0       	ldi	r18, 0x00	; 0
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	4a e7       	ldi	r20, 0x7A	; 122
     8c4:	55 e4       	ldi	r21, 0x45	; 69
     8c6:	69 81       	ldd	r22, Y+1	; 0x01
     8c8:	7a 81       	ldd	r23, Y+2	; 0x02
     8ca:	8b 81       	ldd	r24, Y+3	; 0x03
     8cc:	9c 81       	ldd	r25, Y+4	; 0x04
     8ce:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     8d2:	dc 01       	movw	r26, r24
     8d4:	cb 01       	movw	r24, r22
     8d6:	8b 8b       	std	Y+19, r24	; 0x13
     8d8:	9c 8b       	std	Y+20, r25	; 0x14
     8da:	ad 8b       	std	Y+21, r26	; 0x15
     8dc:	be 8b       	std	Y+22, r27	; 0x16
     8de:	20 e0       	ldi	r18, 0x00	; 0
     8e0:	30 e0       	ldi	r19, 0x00	; 0
     8e2:	40 e8       	ldi	r20, 0x80	; 128
     8e4:	5f e3       	ldi	r21, 0x3F	; 63
     8e6:	6b 89       	ldd	r22, Y+19	; 0x13
     8e8:	7c 89       	ldd	r23, Y+20	; 0x14
     8ea:	8d 89       	ldd	r24, Y+21	; 0x15
     8ec:	9e 89       	ldd	r25, Y+22	; 0x16
     8ee:	0e 94 c0 07 	call	0xf80	; 0xf80 <__cmpsf2>
     8f2:	88 23       	and	r24, r24
     8f4:	2c f4       	brge	.+10     	; 0x900 <__stack+0xa1>
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	98 8f       	std	Y+24, r25	; 0x18
     8fc:	8f 8b       	std	Y+23, r24	; 0x17
     8fe:	3f c0       	rjmp	.+126    	; 0x97e <__stack+0x11f>
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	3f ef       	ldi	r19, 0xFF	; 255
     904:	4f e7       	ldi	r20, 0x7F	; 127
     906:	57 e4       	ldi	r21, 0x47	; 71
     908:	6b 89       	ldd	r22, Y+19	; 0x13
     90a:	7c 89       	ldd	r23, Y+20	; 0x14
     90c:	8d 89       	ldd	r24, Y+21	; 0x15
     90e:	9e 89       	ldd	r25, Y+22	; 0x16
     910:	0e 94 41 08 	call	0x1082	; 0x1082 <__gesf2>
     914:	18 16       	cp	r1, r24
     916:	4c f5       	brge	.+82     	; 0x96a <__stack+0x10b>
     918:	20 e0       	ldi	r18, 0x00	; 0
     91a:	30 e0       	ldi	r19, 0x00	; 0
     91c:	40 e2       	ldi	r20, 0x20	; 32
     91e:	51 e4       	ldi	r21, 0x41	; 65
     920:	69 81       	ldd	r22, Y+1	; 0x01
     922:	7a 81       	ldd	r23, Y+2	; 0x02
     924:	8b 81       	ldd	r24, Y+3	; 0x03
     926:	9c 81       	ldd	r25, Y+4	; 0x04
     928:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     92c:	dc 01       	movw	r26, r24
     92e:	cb 01       	movw	r24, r22
     930:	bc 01       	movw	r22, r24
     932:	cd 01       	movw	r24, r26
     934:	0e 94 c5 07 	call	0xf8a	; 0xf8a <__fixunssfsi>
     938:	dc 01       	movw	r26, r24
     93a:	cb 01       	movw	r24, r22
     93c:	98 8f       	std	Y+24, r25	; 0x18
     93e:	8f 8b       	std	Y+23, r24	; 0x17
     940:	0f c0       	rjmp	.+30     	; 0x960 <__stack+0x101>
     942:	80 e9       	ldi	r24, 0x90	; 144
     944:	91 e0       	ldi	r25, 0x01	; 1
     946:	9a 8f       	std	Y+26, r25	; 0x1a
     948:	89 8f       	std	Y+25, r24	; 0x19
     94a:	89 8d       	ldd	r24, Y+25	; 0x19
     94c:	9a 8d       	ldd	r25, Y+26	; 0x1a
     94e:	01 97       	sbiw	r24, 0x01	; 1
     950:	f1 f7       	brne	.-4      	; 0x94e <__stack+0xef>
     952:	9a 8f       	std	Y+26, r25	; 0x1a
     954:	89 8f       	std	Y+25, r24	; 0x19
     956:	8f 89       	ldd	r24, Y+23	; 0x17
     958:	98 8d       	ldd	r25, Y+24	; 0x18
     95a:	01 97       	sbiw	r24, 0x01	; 1
     95c:	98 8f       	std	Y+24, r25	; 0x18
     95e:	8f 8b       	std	Y+23, r24	; 0x17
     960:	8f 89       	ldd	r24, Y+23	; 0x17
     962:	98 8d       	ldd	r25, Y+24	; 0x18
     964:	89 2b       	or	r24, r25
     966:	69 f7       	brne	.-38     	; 0x942 <__stack+0xe3>
     968:	14 c0       	rjmp	.+40     	; 0x992 <__stack+0x133>
     96a:	6b 89       	ldd	r22, Y+19	; 0x13
     96c:	7c 89       	ldd	r23, Y+20	; 0x14
     96e:	8d 89       	ldd	r24, Y+21	; 0x15
     970:	9e 89       	ldd	r25, Y+22	; 0x16
     972:	0e 94 c5 07 	call	0xf8a	; 0xf8a <__fixunssfsi>
     976:	dc 01       	movw	r26, r24
     978:	cb 01       	movw	r24, r22
     97a:	98 8f       	std	Y+24, r25	; 0x18
     97c:	8f 8b       	std	Y+23, r24	; 0x17
     97e:	8f 89       	ldd	r24, Y+23	; 0x17
     980:	98 8d       	ldd	r25, Y+24	; 0x18
     982:	9c 8f       	std	Y+28, r25	; 0x1c
     984:	8b 8f       	std	Y+27, r24	; 0x1b
     986:	8b 8d       	ldd	r24, Y+27	; 0x1b
     988:	9c 8d       	ldd	r25, Y+28	; 0x1c
     98a:	01 97       	sbiw	r24, 0x01	; 1
     98c:	f1 f7       	brne	.-4      	; 0x98a <__stack+0x12b>
     98e:	9c 8f       	std	Y+28, r25	; 0x1c
     990:	8b 8f       	std	Y+27, r24	; 0x1b
     992:	8d 8d       	ldd	r24, Y+29	; 0x1d
     994:	9e 8d       	ldd	r25, Y+30	; 0x1e
     996:	61 e0       	ldi	r22, 0x01	; 1
     998:	0e 94 19 06 	call	0xc32	; 0xc32 <Write_Command>
     99c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     99e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     9a0:	6c e3       	ldi	r22, 0x3C	; 60
     9a2:	0e 94 19 06 	call	0xc32	; 0xc32 <Write_Command>
     9a6:	8d 8d       	ldd	r24, Y+29	; 0x1d
     9a8:	9e 8d       	ldd	r25, Y+30	; 0x1e
     9aa:	66 e0       	ldi	r22, 0x06	; 6
     9ac:	0e 94 19 06 	call	0xc32	; 0xc32 <Write_Command>
     9b0:	8d 8d       	ldd	r24, Y+29	; 0x1d
     9b2:	9e 8d       	ldd	r25, Y+30	; 0x1e
     9b4:	60 e8       	ldi	r22, 0x80	; 128
     9b6:	0e 94 19 06 	call	0xc32	; 0xc32 <Write_Command>
     9ba:	8d 8d       	ldd	r24, Y+29	; 0x1d
     9bc:	9e 8d       	ldd	r25, Y+30	; 0x1e
     9be:	6c e0       	ldi	r22, 0x0C	; 12
     9c0:	0e 94 19 06 	call	0xc32	; 0xc32 <Write_Command>
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	a0 e2       	ldi	r26, 0x20	; 32
     9ca:	b2 e4       	ldi	r27, 0x42	; 66
     9cc:	8d 83       	std	Y+5, r24	; 0x05
     9ce:	9e 83       	std	Y+6, r25	; 0x06
     9d0:	af 83       	std	Y+7, r26	; 0x07
     9d2:	b8 87       	std	Y+8, r27	; 0x08
     9d4:	20 e0       	ldi	r18, 0x00	; 0
     9d6:	30 e0       	ldi	r19, 0x00	; 0
     9d8:	4a e7       	ldi	r20, 0x7A	; 122
     9da:	55 e4       	ldi	r21, 0x45	; 69
     9dc:	6d 81       	ldd	r22, Y+5	; 0x05
     9de:	7e 81       	ldd	r23, Y+6	; 0x06
     9e0:	8f 81       	ldd	r24, Y+7	; 0x07
     9e2:	98 85       	ldd	r25, Y+8	; 0x08
     9e4:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     9e8:	dc 01       	movw	r26, r24
     9ea:	cb 01       	movw	r24, r22
     9ec:	89 87       	std	Y+9, r24	; 0x09
     9ee:	9a 87       	std	Y+10, r25	; 0x0a
     9f0:	ab 87       	std	Y+11, r26	; 0x0b
     9f2:	bc 87       	std	Y+12, r27	; 0x0c
     9f4:	20 e0       	ldi	r18, 0x00	; 0
     9f6:	30 e0       	ldi	r19, 0x00	; 0
     9f8:	40 e8       	ldi	r20, 0x80	; 128
     9fa:	5f e3       	ldi	r21, 0x3F	; 63
     9fc:	69 85       	ldd	r22, Y+9	; 0x09
     9fe:	7a 85       	ldd	r23, Y+10	; 0x0a
     a00:	8b 85       	ldd	r24, Y+11	; 0x0b
     a02:	9c 85       	ldd	r25, Y+12	; 0x0c
     a04:	0e 94 c0 07 	call	0xf80	; 0xf80 <__cmpsf2>
     a08:	88 23       	and	r24, r24
     a0a:	2c f4       	brge	.+10     	; 0xa16 <__stack+0x1b7>
     a0c:	81 e0       	ldi	r24, 0x01	; 1
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	9e 87       	std	Y+14, r25	; 0x0e
     a12:	8d 87       	std	Y+13, r24	; 0x0d
     a14:	3f c0       	rjmp	.+126    	; 0xa94 <__stack+0x235>
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	3f ef       	ldi	r19, 0xFF	; 255
     a1a:	4f e7       	ldi	r20, 0x7F	; 127
     a1c:	57 e4       	ldi	r21, 0x47	; 71
     a1e:	69 85       	ldd	r22, Y+9	; 0x09
     a20:	7a 85       	ldd	r23, Y+10	; 0x0a
     a22:	8b 85       	ldd	r24, Y+11	; 0x0b
     a24:	9c 85       	ldd	r25, Y+12	; 0x0c
     a26:	0e 94 41 08 	call	0x1082	; 0x1082 <__gesf2>
     a2a:	18 16       	cp	r1, r24
     a2c:	4c f5       	brge	.+82     	; 0xa80 <__stack+0x221>
     a2e:	20 e0       	ldi	r18, 0x00	; 0
     a30:	30 e0       	ldi	r19, 0x00	; 0
     a32:	40 e2       	ldi	r20, 0x20	; 32
     a34:	51 e4       	ldi	r21, 0x41	; 65
     a36:	6d 81       	ldd	r22, Y+5	; 0x05
     a38:	7e 81       	ldd	r23, Y+6	; 0x06
     a3a:	8f 81       	ldd	r24, Y+7	; 0x07
     a3c:	98 85       	ldd	r25, Y+8	; 0x08
     a3e:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     a42:	dc 01       	movw	r26, r24
     a44:	cb 01       	movw	r24, r22
     a46:	bc 01       	movw	r22, r24
     a48:	cd 01       	movw	r24, r26
     a4a:	0e 94 c5 07 	call	0xf8a	; 0xf8a <__fixunssfsi>
     a4e:	dc 01       	movw	r26, r24
     a50:	cb 01       	movw	r24, r22
     a52:	9e 87       	std	Y+14, r25	; 0x0e
     a54:	8d 87       	std	Y+13, r24	; 0x0d
     a56:	0f c0       	rjmp	.+30     	; 0xa76 <__stack+0x217>
     a58:	80 e9       	ldi	r24, 0x90	; 144
     a5a:	91 e0       	ldi	r25, 0x01	; 1
     a5c:	98 8b       	std	Y+16, r25	; 0x10
     a5e:	8f 87       	std	Y+15, r24	; 0x0f
     a60:	8f 85       	ldd	r24, Y+15	; 0x0f
     a62:	98 89       	ldd	r25, Y+16	; 0x10
     a64:	01 97       	sbiw	r24, 0x01	; 1
     a66:	f1 f7       	brne	.-4      	; 0xa64 <__stack+0x205>
     a68:	98 8b       	std	Y+16, r25	; 0x10
     a6a:	8f 87       	std	Y+15, r24	; 0x0f
     a6c:	8d 85       	ldd	r24, Y+13	; 0x0d
     a6e:	9e 85       	ldd	r25, Y+14	; 0x0e
     a70:	01 97       	sbiw	r24, 0x01	; 1
     a72:	9e 87       	std	Y+14, r25	; 0x0e
     a74:	8d 87       	std	Y+13, r24	; 0x0d
     a76:	8d 85       	ldd	r24, Y+13	; 0x0d
     a78:	9e 85       	ldd	r25, Y+14	; 0x0e
     a7a:	89 2b       	or	r24, r25
     a7c:	69 f7       	brne	.-38     	; 0xa58 <__stack+0x1f9>
     a7e:	14 c0       	rjmp	.+40     	; 0xaa8 <__stack+0x249>
     a80:	69 85       	ldd	r22, Y+9	; 0x09
     a82:	7a 85       	ldd	r23, Y+10	; 0x0a
     a84:	8b 85       	ldd	r24, Y+11	; 0x0b
     a86:	9c 85       	ldd	r25, Y+12	; 0x0c
     a88:	0e 94 c5 07 	call	0xf8a	; 0xf8a <__fixunssfsi>
     a8c:	dc 01       	movw	r26, r24
     a8e:	cb 01       	movw	r24, r22
     a90:	9e 87       	std	Y+14, r25	; 0x0e
     a92:	8d 87       	std	Y+13, r24	; 0x0d
     a94:	8d 85       	ldd	r24, Y+13	; 0x0d
     a96:	9e 85       	ldd	r25, Y+14	; 0x0e
     a98:	9a 8b       	std	Y+18, r25	; 0x12
     a9a:	89 8b       	std	Y+17, r24	; 0x11
     a9c:	89 89       	ldd	r24, Y+17	; 0x11
     a9e:	9a 89       	ldd	r25, Y+18	; 0x12
     aa0:	01 97       	sbiw	r24, 0x01	; 1
     aa2:	f1 f7       	brne	.-4      	; 0xaa0 <__stack+0x241>
     aa4:	9a 8b       	std	Y+18, r25	; 0x12
     aa6:	89 8b       	std	Y+17, r24	; 0x11
     aa8:	00 00       	nop
     aaa:	6e 96       	adiw	r28, 0x1e	; 30
     aac:	0f b6       	in	r0, 0x3f	; 63
     aae:	f8 94       	cli
     ab0:	de bf       	out	0x3e, r29	; 62
     ab2:	0f be       	out	0x3f, r0	; 63
     ab4:	cd bf       	out	0x3d, r28	; 61
     ab6:	df 91       	pop	r29
     ab8:	cf 91       	pop	r28
     aba:	08 95       	ret

00000abc <Check_BF>:
     abc:	cf 93       	push	r28
     abe:	df 93       	push	r29
     ac0:	00 d0       	rcall	.+0      	; 0xac2 <Check_BF+0x6>
     ac2:	cd b7       	in	r28, 0x3d	; 61
     ac4:	de b7       	in	r29, 0x3e	; 62
     ac6:	9a 83       	std	Y+2, r25	; 0x02
     ac8:	89 83       	std	Y+1, r24	; 0x01
     aca:	89 81       	ldd	r24, Y+1	; 0x01
     acc:	9a 81       	ldd	r25, Y+2	; 0x02
     ace:	fc 01       	movw	r30, r24
     ad0:	80 81       	ld	r24, Z
     ad2:	91 81       	ldd	r25, Z+1	; 0x01
     ad4:	60 e0       	ldi	r22, 0x00	; 0
     ad6:	0e 94 2b 03 	call	0x656	; 0x656 <Write_Dir_Register>
     ada:	89 81       	ldd	r24, Y+1	; 0x01
     adc:	9a 81       	ldd	r25, Y+2	; 0x02
     ade:	fc 01       	movw	r30, r24
     ae0:	20 85       	ldd	r18, Z+8	; 0x08
     ae2:	89 81       	ldd	r24, Y+1	; 0x01
     ae4:	9a 81       	ldd	r25, Y+2	; 0x02
     ae6:	fc 01       	movw	r30, r24
     ae8:	84 81       	ldd	r24, Z+4	; 0x04
     aea:	95 81       	ldd	r25, Z+5	; 0x05
     aec:	41 e0       	ldi	r20, 0x01	; 1
     aee:	62 2f       	mov	r22, r18
     af0:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     af4:	89 81       	ldd	r24, Y+1	; 0x01
     af6:	9a 81       	ldd	r25, Y+2	; 0x02
     af8:	fc 01       	movw	r30, r24
     afa:	22 85       	ldd	r18, Z+10	; 0x0a
     afc:	89 81       	ldd	r24, Y+1	; 0x01
     afe:	9a 81       	ldd	r25, Y+2	; 0x02
     b00:	fc 01       	movw	r30, r24
     b02:	82 81       	ldd	r24, Z+2	; 0x02
     b04:	93 81       	ldd	r25, Z+3	; 0x03
     b06:	40 e0       	ldi	r20, 0x00	; 0
     b08:	62 2f       	mov	r22, r18
     b0a:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     b0e:	89 81       	ldd	r24, Y+1	; 0x01
     b10:	9a 81       	ldd	r25, Y+2	; 0x02
     b12:	0e 94 51 03 	call	0x6a2	; 0x6a2 <Kick_Enable_pin>
     b16:	89 81       	ldd	r24, Y+1	; 0x01
     b18:	9a 81       	ldd	r25, Y+2	; 0x02
     b1a:	fc 01       	movw	r30, r24
     b1c:	80 81       	ld	r24, Z
     b1e:	91 81       	ldd	r25, Z+1	; 0x01
     b20:	6f ef       	ldi	r22, 0xFF	; 255
     b22:	0e 94 2b 03 	call	0x656	; 0x656 <Write_Dir_Register>
     b26:	89 81       	ldd	r24, Y+1	; 0x01
     b28:	9a 81       	ldd	r25, Y+2	; 0x02
     b2a:	fc 01       	movw	r30, r24
     b2c:	20 85       	ldd	r18, Z+8	; 0x08
     b2e:	89 81       	ldd	r24, Y+1	; 0x01
     b30:	9a 81       	ldd	r25, Y+2	; 0x02
     b32:	fc 01       	movw	r30, r24
     b34:	84 81       	ldd	r24, Z+4	; 0x04
     b36:	95 81       	ldd	r25, Z+5	; 0x05
     b38:	40 e0       	ldi	r20, 0x00	; 0
     b3a:	62 2f       	mov	r22, r18
     b3c:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     b40:	00 00       	nop
     b42:	0f 90       	pop	r0
     b44:	0f 90       	pop	r0
     b46:	df 91       	pop	r29
     b48:	cf 91       	pop	r28
     b4a:	08 95       	ret

00000b4c <Write_Character>:
     b4c:	cf 93       	push	r28
     b4e:	df 93       	push	r29
     b50:	00 d0       	rcall	.+0      	; 0xb52 <Write_Character+0x6>
     b52:	1f 92       	push	r1
     b54:	cd b7       	in	r28, 0x3d	; 61
     b56:	de b7       	in	r29, 0x3e	; 62
     b58:	9a 83       	std	Y+2, r25	; 0x02
     b5a:	89 83       	std	Y+1, r24	; 0x01
     b5c:	6b 83       	std	Y+3, r22	; 0x03
     b5e:	89 81       	ldd	r24, Y+1	; 0x01
     b60:	9a 81       	ldd	r25, Y+2	; 0x02
     b62:	0e 94 5e 05 	call	0xabc	; 0xabc <Check_BF>
     b66:	89 81       	ldd	r24, Y+1	; 0x01
     b68:	9a 81       	ldd	r25, Y+2	; 0x02
     b6a:	fc 01       	movw	r30, r24
     b6c:	22 85       	ldd	r18, Z+10	; 0x0a
     b6e:	89 81       	ldd	r24, Y+1	; 0x01
     b70:	9a 81       	ldd	r25, Y+2	; 0x02
     b72:	fc 01       	movw	r30, r24
     b74:	82 81       	ldd	r24, Z+2	; 0x02
     b76:	93 81       	ldd	r25, Z+3	; 0x03
     b78:	41 e0       	ldi	r20, 0x01	; 1
     b7a:	62 2f       	mov	r22, r18
     b7c:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     b80:	89 81       	ldd	r24, Y+1	; 0x01
     b82:	9a 81       	ldd	r25, Y+2	; 0x02
     b84:	fc 01       	movw	r30, r24
     b86:	80 81       	ld	r24, Z
     b88:	91 81       	ldd	r25, Z+1	; 0x01
     b8a:	6b 81       	ldd	r22, Y+3	; 0x03
     b8c:	0e 94 42 02 	call	0x484	; 0x484 <Write_Port_Register>
     b90:	89 81       	ldd	r24, Y+1	; 0x01
     b92:	9a 81       	ldd	r25, Y+2	; 0x02
     b94:	fc 01       	movw	r30, r24
     b96:	22 85       	ldd	r18, Z+10	; 0x0a
     b98:	89 81       	ldd	r24, Y+1	; 0x01
     b9a:	9a 81       	ldd	r25, Y+2	; 0x02
     b9c:	fc 01       	movw	r30, r24
     b9e:	82 81       	ldd	r24, Z+2	; 0x02
     ba0:	93 81       	ldd	r25, Z+3	; 0x03
     ba2:	41 e0       	ldi	r20, 0x01	; 1
     ba4:	62 2f       	mov	r22, r18
     ba6:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     baa:	89 81       	ldd	r24, Y+1	; 0x01
     bac:	9a 81       	ldd	r25, Y+2	; 0x02
     bae:	fc 01       	movw	r30, r24
     bb0:	20 85       	ldd	r18, Z+8	; 0x08
     bb2:	89 81       	ldd	r24, Y+1	; 0x01
     bb4:	9a 81       	ldd	r25, Y+2	; 0x02
     bb6:	fc 01       	movw	r30, r24
     bb8:	84 81       	ldd	r24, Z+4	; 0x04
     bba:	95 81       	ldd	r25, Z+5	; 0x05
     bbc:	40 e0       	ldi	r20, 0x00	; 0
     bbe:	62 2f       	mov	r22, r18
     bc0:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     bc4:	89 81       	ldd	r24, Y+1	; 0x01
     bc6:	9a 81       	ldd	r25, Y+2	; 0x02
     bc8:	0e 94 51 03 	call	0x6a2	; 0x6a2 <Kick_Enable_pin>
     bcc:	00 00       	nop
     bce:	0f 90       	pop	r0
     bd0:	0f 90       	pop	r0
     bd2:	0f 90       	pop	r0
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	08 95       	ret

00000bda <Jump_to_coordinator>:
     bda:	cf 93       	push	r28
     bdc:	df 93       	push	r29
     bde:	00 d0       	rcall	.+0      	; 0xbe0 <Jump_to_coordinator+0x6>
     be0:	00 d0       	rcall	.+0      	; 0xbe2 <Jump_to_coordinator+0x8>
     be2:	cd b7       	in	r28, 0x3d	; 61
     be4:	de b7       	in	r29, 0x3e	; 62
     be6:	9a 83       	std	Y+2, r25	; 0x02
     be8:	89 83       	std	Y+1, r24	; 0x01
     bea:	6b 83       	std	Y+3, r22	; 0x03
     bec:	4c 83       	std	Y+4, r20	; 0x04
     bee:	8c 81       	ldd	r24, Y+4	; 0x04
     bf0:	88 2f       	mov	r24, r24
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	00 97       	sbiw	r24, 0x00	; 0
     bf6:	19 f0       	breq	.+6      	; 0xbfe <Jump_to_coordinator+0x24>
     bf8:	01 97       	sbiw	r24, 0x01	; 1
     bfa:	51 f0       	breq	.+20     	; 0xc10 <Jump_to_coordinator+0x36>
     bfc:	12 c0       	rjmp	.+36     	; 0xc22 <Jump_to_coordinator+0x48>
     bfe:	8b 81       	ldd	r24, Y+3	; 0x03
     c00:	20 e8       	ldi	r18, 0x80	; 128
     c02:	28 0f       	add	r18, r24
     c04:	89 81       	ldd	r24, Y+1	; 0x01
     c06:	9a 81       	ldd	r25, Y+2	; 0x02
     c08:	62 2f       	mov	r22, r18
     c0a:	0e 94 19 06 	call	0xc32	; 0xc32 <Write_Command>
     c0e:	09 c0       	rjmp	.+18     	; 0xc22 <Jump_to_coordinator+0x48>
     c10:	8b 81       	ldd	r24, Y+3	; 0x03
     c12:	20 ec       	ldi	r18, 0xC0	; 192
     c14:	28 0f       	add	r18, r24
     c16:	89 81       	ldd	r24, Y+1	; 0x01
     c18:	9a 81       	ldd	r25, Y+2	; 0x02
     c1a:	62 2f       	mov	r22, r18
     c1c:	0e 94 19 06 	call	0xc32	; 0xc32 <Write_Command>
     c20:	00 00       	nop
     c22:	00 00       	nop
     c24:	0f 90       	pop	r0
     c26:	0f 90       	pop	r0
     c28:	0f 90       	pop	r0
     c2a:	0f 90       	pop	r0
     c2c:	df 91       	pop	r29
     c2e:	cf 91       	pop	r28
     c30:	08 95       	ret

00000c32 <Write_Command>:
     c32:	cf 93       	push	r28
     c34:	df 93       	push	r29
     c36:	00 d0       	rcall	.+0      	; 0xc38 <Write_Command+0x6>
     c38:	1f 92       	push	r1
     c3a:	cd b7       	in	r28, 0x3d	; 61
     c3c:	de b7       	in	r29, 0x3e	; 62
     c3e:	9a 83       	std	Y+2, r25	; 0x02
     c40:	89 83       	std	Y+1, r24	; 0x01
     c42:	6b 83       	std	Y+3, r22	; 0x03
     c44:	89 81       	ldd	r24, Y+1	; 0x01
     c46:	9a 81       	ldd	r25, Y+2	; 0x02
     c48:	0e 94 5e 05 	call	0xabc	; 0xabc <Check_BF>
     c4c:	89 81       	ldd	r24, Y+1	; 0x01
     c4e:	9a 81       	ldd	r25, Y+2	; 0x02
     c50:	fc 01       	movw	r30, r24
     c52:	80 81       	ld	r24, Z
     c54:	91 81       	ldd	r25, Z+1	; 0x01
     c56:	6b 81       	ldd	r22, Y+3	; 0x03
     c58:	0e 94 42 02 	call	0x484	; 0x484 <Write_Port_Register>
     c5c:	89 81       	ldd	r24, Y+1	; 0x01
     c5e:	9a 81       	ldd	r25, Y+2	; 0x02
     c60:	fc 01       	movw	r30, r24
     c62:	22 85       	ldd	r18, Z+10	; 0x0a
     c64:	89 81       	ldd	r24, Y+1	; 0x01
     c66:	9a 81       	ldd	r25, Y+2	; 0x02
     c68:	fc 01       	movw	r30, r24
     c6a:	82 81       	ldd	r24, Z+2	; 0x02
     c6c:	93 81       	ldd	r25, Z+3	; 0x03
     c6e:	40 e0       	ldi	r20, 0x00	; 0
     c70:	62 2f       	mov	r22, r18
     c72:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     c76:	89 81       	ldd	r24, Y+1	; 0x01
     c78:	9a 81       	ldd	r25, Y+2	; 0x02
     c7a:	fc 01       	movw	r30, r24
     c7c:	20 85       	ldd	r18, Z+8	; 0x08
     c7e:	89 81       	ldd	r24, Y+1	; 0x01
     c80:	9a 81       	ldd	r25, Y+2	; 0x02
     c82:	fc 01       	movw	r30, r24
     c84:	84 81       	ldd	r24, Z+4	; 0x04
     c86:	95 81       	ldd	r25, Z+5	; 0x05
     c88:	40 e0       	ldi	r20, 0x00	; 0
     c8a:	62 2f       	mov	r22, r18
     c8c:	0e 94 02 02 	call	0x404	; 0x404 <Write_Pin>
     c90:	89 81       	ldd	r24, Y+1	; 0x01
     c92:	9a 81       	ldd	r25, Y+2	; 0x02
     c94:	0e 94 51 03 	call	0x6a2	; 0x6a2 <Kick_Enable_pin>
     c98:	00 00       	nop
     c9a:	0f 90       	pop	r0
     c9c:	0f 90       	pop	r0
     c9e:	0f 90       	pop	r0
     ca0:	df 91       	pop	r29
     ca2:	cf 91       	pop	r28
     ca4:	08 95       	ret

00000ca6 <Write_String_Stop_with_Character>:

uint8_t Write_String_Stop_with_Character(const LCD_16_2 *lcd_instance,unsigned char *ch, uint8_t Stop_char)
{
     ca6:	cf 93       	push	r28
     ca8:	df 93       	push	r29
     caa:	00 d0       	rcall	.+0      	; 0xcac <Write_String_Stop_with_Character+0x6>
     cac:	00 d0       	rcall	.+0      	; 0xcae <Write_String_Stop_with_Character+0x8>
     cae:	1f 92       	push	r1
     cb0:	cd b7       	in	r28, 0x3d	; 61
     cb2:	de b7       	in	r29, 0x3e	; 62
     cb4:	9a 83       	std	Y+2, r25	; 0x02
     cb6:	89 83       	std	Y+1, r24	; 0x01
     cb8:	7c 83       	std	Y+4, r23	; 0x04
     cba:	6b 83       	std	Y+3, r22	; 0x03
     cbc:	4d 83       	std	Y+5, r20	; 0x05
    while(*ch != Stop_char)
     cbe:	0e c0       	rjmp	.+28     	; 0xcdc <Write_String_Stop_with_Character+0x36>
    {
        Write_Character(lcd_instance,*ch);
     cc0:	8b 81       	ldd	r24, Y+3	; 0x03
     cc2:	9c 81       	ldd	r25, Y+4	; 0x04
     cc4:	fc 01       	movw	r30, r24
     cc6:	20 81       	ld	r18, Z
     cc8:	89 81       	ldd	r24, Y+1	; 0x01
     cca:	9a 81       	ldd	r25, Y+2	; 0x02
     ccc:	62 2f       	mov	r22, r18
     cce:	0e 94 a6 05 	call	0xb4c	; 0xb4c <Write_Character>
        ch++;
     cd2:	8b 81       	ldd	r24, Y+3	; 0x03
     cd4:	9c 81       	ldd	r25, Y+4	; 0x04
     cd6:	01 96       	adiw	r24, 0x01	; 1
     cd8:	9c 83       	std	Y+4, r25	; 0x04
     cda:	8b 83       	std	Y+3, r24	; 0x03
    Write_Command(lcd_instance,CMD_LCD_Clear);
}

uint8_t Write_String_Stop_with_Character(const LCD_16_2 *lcd_instance,unsigned char *ch, uint8_t Stop_char)
{
    while(*ch != Stop_char)
     cdc:	8b 81       	ldd	r24, Y+3	; 0x03
     cde:	9c 81       	ldd	r25, Y+4	; 0x04
     ce0:	fc 01       	movw	r30, r24
     ce2:	90 81       	ld	r25, Z
     ce4:	8d 81       	ldd	r24, Y+5	; 0x05
     ce6:	98 17       	cp	r25, r24
     ce8:	59 f7       	brne	.-42     	; 0xcc0 <Write_String_Stop_with_Character+0x1a>
    {
        Write_Character(lcd_instance,*ch);
        ch++;
    }
     cea:	00 00       	nop
     cec:	0f 90       	pop	r0
     cee:	0f 90       	pop	r0
     cf0:	0f 90       	pop	r0
     cf2:	0f 90       	pop	r0
     cf4:	0f 90       	pop	r0
     cf6:	df 91       	pop	r29
     cf8:	cf 91       	pop	r28
     cfa:	08 95       	ret

00000cfc <__vector_10>:
    return 1;
}

volatile uint8_t counter = 0;
ISR(TIMER0_COMP_vect)
{
     cfc:	1f 92       	push	r1
     cfe:	0f 92       	push	r0
     d00:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     d04:	0f 92       	push	r0
     d06:	11 24       	eor	r1, r1
     d08:	2f 93       	push	r18
     d0a:	3f 93       	push	r19
     d0c:	4f 93       	push	r20
     d0e:	5f 93       	push	r21
     d10:	6f 93       	push	r22
     d12:	7f 93       	push	r23
     d14:	8f 93       	push	r24
     d16:	9f 93       	push	r25
     d18:	af 93       	push	r26
     d1a:	bf 93       	push	r27
     d1c:	ef 93       	push	r30
     d1e:	ff 93       	push	r31
     d20:	cf 93       	push	r28
     d22:	df 93       	push	r29
     d24:	cd b7       	in	r28, 0x3d	; 61
     d26:	de b7       	in	r29, 0x3e	; 62
    counter++;
     d28:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <counter>
     d2c:	8f 5f       	subi	r24, 0xFF	; 255
     d2e:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <counter>
    Write_Port_Register(PORT_A,counter);
     d32:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <counter>
     d36:	68 2f       	mov	r22, r24
     d38:	89 e3       	ldi	r24, 0x39	; 57
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	0e 94 42 02 	call	0x484	; 0x484 <Write_Port_Register>
}
     d40:	00 00       	nop
     d42:	df 91       	pop	r29
     d44:	cf 91       	pop	r28
     d46:	ff 91       	pop	r31
     d48:	ef 91       	pop	r30
     d4a:	bf 91       	pop	r27
     d4c:	af 91       	pop	r26
     d4e:	9f 91       	pop	r25
     d50:	8f 91       	pop	r24
     d52:	7f 91       	pop	r23
     d54:	6f 91       	pop	r22
     d56:	5f 91       	pop	r21
     d58:	4f 91       	pop	r20
     d5a:	3f 91       	pop	r19
     d5c:	2f 91       	pop	r18
     d5e:	0f 90       	pop	r0
     d60:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     d64:	0f 90       	pop	r0
     d66:	1f 90       	pop	r1
     d68:	18 95       	reti

00000d6a <__vector_11>:


ISR(TIMER0_OVF_vect)
{
     d6a:	1f 92       	push	r1
     d6c:	0f 92       	push	r0
     d6e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     d72:	0f 92       	push	r0
     d74:	11 24       	eor	r1, r1
     d76:	cf 93       	push	r28
     d78:	df 93       	push	r29
     d7a:	cd b7       	in	r28, 0x3d	; 61
     d7c:	de b7       	in	r29, 0x3e	; 62
    
}
     d7e:	00 00       	nop
     d80:	df 91       	pop	r29
     d82:	cf 91       	pop	r28
     d84:	0f 90       	pop	r0
     d86:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     d8a:	0f 90       	pop	r0
     d8c:	1f 90       	pop	r1
     d8e:	18 95       	reti

00000d90 <Uart_Receive>:
/**
 * @brief   Used to Receiv Data form UART by polling
 * @return  unsigned char: return received value 
 */
unsigned char *Uart_Receive(St_UART_driver *_init_uart)
{
     d90:	cf 93       	push	r28
     d92:	df 93       	push	r29
     d94:	00 d0       	rcall	.+0      	; 0xd96 <Uart_Receive+0x6>
     d96:	00 d0       	rcall	.+0      	; 0xd98 <Uart_Receive+0x8>
     d98:	00 d0       	rcall	.+0      	; 0xd9a <Uart_Receive+0xa>
     d9a:	cd b7       	in	r28, 0x3d	; 61
     d9c:	de b7       	in	r29, 0x3e	; 62
     d9e:	9e 83       	std	Y+6, r25	; 0x06
     da0:	8d 83       	std	Y+5, r24	; 0x05
    uint8_t index = 0;
     da2:	19 82       	std	Y+1, r1	; 0x01
    unsigned char status, resh, resl;
    
    while(_init_uart->msg[index] != '#')
     da4:	66 c0       	rjmp	.+204    	; 0xe72 <Uart_Receive+0xe2>
    {
        
        while(!(UCSRA_R->UCSRA_field & (1 << RXC)));
     da6:	00 00       	nop
     da8:	8b e2       	ldi	r24, 0x2B	; 43
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	fc 01       	movw	r30, r24
     dae:	80 81       	ld	r24, Z
     db0:	88 23       	and	r24, r24
     db2:	d4 f7       	brge	.-12     	; 0xda8 <Uart_Receive+0x18>

        status = UCSRA_R->UCSRA_field;
     db4:	8b e2       	ldi	r24, 0x2B	; 43
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	fc 01       	movw	r30, r24
     dba:	80 81       	ld	r24, Z
     dbc:	8a 83       	std	Y+2, r24	; 0x02
        resh = UCSRB_R->UCSRB_field;
     dbe:	8a e2       	ldi	r24, 0x2A	; 42
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	fc 01       	movw	r30, r24
     dc4:	80 81       	ld	r24, Z
     dc6:	8b 83       	std	Y+3, r24	; 0x03
        resl = UDR;
     dc8:	8c e2       	ldi	r24, 0x2C	; 44
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	fc 01       	movw	r30, r24
     dce:	80 81       	ld	r24, Z
     dd0:	8c 83       	std	Y+4, r24	; 0x04

        if(status & ((1 << FE)|(1 << DOR)|(1 << PE)))
     dd2:	8a 81       	ldd	r24, Y+2	; 0x02
     dd4:	88 2f       	mov	r24, r24
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	8c 71       	andi	r24, 0x1C	; 28
     dda:	99 27       	eor	r25, r25
     ddc:	89 2b       	or	r24, r25
     dde:	19 f0       	breq	.+6      	; 0xde6 <Uart_Receive+0x56>
            return -1;
     de0:	8f ef       	ldi	r24, 0xFF	; 255
     de2:	9f ef       	ldi	r25, 0xFF	; 255
     de4:	55 c0       	rjmp	.+170    	; 0xe90 <Uart_Receive+0x100>
        resh = (resh >> 1) & 0x01;
     de6:	8b 81       	ldd	r24, Y+3	; 0x03
     de8:	86 95       	lsr	r24
     dea:	81 70       	andi	r24, 0x01	; 1
     dec:	8b 83       	std	Y+3, r24	; 0x03
        if((index == 15) || (_init_uart->msg[index] == '#')){index = 0;}
     dee:	89 81       	ldd	r24, Y+1	; 0x01
     df0:	8f 30       	cpi	r24, 0x0F	; 15
     df2:	71 f0       	breq	.+28     	; 0xe10 <Uart_Receive+0x80>
     df4:	8d 81       	ldd	r24, Y+5	; 0x05
     df6:	9e 81       	ldd	r25, Y+6	; 0x06
     df8:	fc 01       	movw	r30, r24
     dfa:	21 85       	ldd	r18, Z+9	; 0x09
     dfc:	32 85       	ldd	r19, Z+10	; 0x0a
     dfe:	89 81       	ldd	r24, Y+1	; 0x01
     e00:	88 2f       	mov	r24, r24
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	82 0f       	add	r24, r18
     e06:	93 1f       	adc	r25, r19
     e08:	fc 01       	movw	r30, r24
     e0a:	80 81       	ld	r24, Z
     e0c:	83 32       	cpi	r24, 0x23	; 35
     e0e:	09 f4       	brne	.+2      	; 0xe12 <Uart_Receive+0x82>
     e10:	19 82       	std	Y+1, r1	; 0x01
        _init_uart->msg[index] = ((resh << 8) | resl);
     e12:	8d 81       	ldd	r24, Y+5	; 0x05
     e14:	9e 81       	ldd	r25, Y+6	; 0x06
     e16:	fc 01       	movw	r30, r24
     e18:	21 85       	ldd	r18, Z+9	; 0x09
     e1a:	32 85       	ldd	r19, Z+10	; 0x0a
     e1c:	89 81       	ldd	r24, Y+1	; 0x01
     e1e:	88 2f       	mov	r24, r24
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	82 0f       	add	r24, r18
     e24:	93 1f       	adc	r25, r19
     e26:	2b 81       	ldd	r18, Y+3	; 0x03
     e28:	22 2f       	mov	r18, r18
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	32 2f       	mov	r19, r18
     e2e:	22 27       	eor	r18, r18
     e30:	32 2f       	mov	r19, r18
     e32:	2c 81       	ldd	r18, Y+4	; 0x04
     e34:	23 2b       	or	r18, r19
     e36:	fc 01       	movw	r30, r24
     e38:	20 83       	st	Z, r18
        if(_init_uart->msg[index] == '#') {return &_init_uart->msg[index];}
     e3a:	8d 81       	ldd	r24, Y+5	; 0x05
     e3c:	9e 81       	ldd	r25, Y+6	; 0x06
     e3e:	fc 01       	movw	r30, r24
     e40:	21 85       	ldd	r18, Z+9	; 0x09
     e42:	32 85       	ldd	r19, Z+10	; 0x0a
     e44:	89 81       	ldd	r24, Y+1	; 0x01
     e46:	88 2f       	mov	r24, r24
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	82 0f       	add	r24, r18
     e4c:	93 1f       	adc	r25, r19
     e4e:	fc 01       	movw	r30, r24
     e50:	80 81       	ld	r24, Z
     e52:	83 32       	cpi	r24, 0x23	; 35
     e54:	59 f4       	brne	.+22     	; 0xe6c <Uart_Receive+0xdc>
     e56:	8d 81       	ldd	r24, Y+5	; 0x05
     e58:	9e 81       	ldd	r25, Y+6	; 0x06
     e5a:	fc 01       	movw	r30, r24
     e5c:	21 85       	ldd	r18, Z+9	; 0x09
     e5e:	32 85       	ldd	r19, Z+10	; 0x0a
     e60:	89 81       	ldd	r24, Y+1	; 0x01
     e62:	88 2f       	mov	r24, r24
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	82 0f       	add	r24, r18
     e68:	93 1f       	adc	r25, r19
     e6a:	12 c0       	rjmp	.+36     	; 0xe90 <Uart_Receive+0x100>
        index++;
     e6c:	89 81       	ldd	r24, Y+1	; 0x01
     e6e:	8f 5f       	subi	r24, 0xFF	; 255
     e70:	89 83       	std	Y+1, r24	; 0x01
unsigned char *Uart_Receive(St_UART_driver *_init_uart)
{
    uint8_t index = 0;
    unsigned char status, resh, resl;
    
    while(_init_uart->msg[index] != '#')
     e72:	8d 81       	ldd	r24, Y+5	; 0x05
     e74:	9e 81       	ldd	r25, Y+6	; 0x06
     e76:	fc 01       	movw	r30, r24
     e78:	21 85       	ldd	r18, Z+9	; 0x09
     e7a:	32 85       	ldd	r19, Z+10	; 0x0a
     e7c:	89 81       	ldd	r24, Y+1	; 0x01
     e7e:	88 2f       	mov	r24, r24
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	82 0f       	add	r24, r18
     e84:	93 1f       	adc	r25, r19
     e86:	fc 01       	movw	r30, r24
     e88:	80 81       	ld	r24, Z
     e8a:	83 32       	cpi	r24, 0x23	; 35
     e8c:	09 f0       	breq	.+2      	; 0xe90 <Uart_Receive+0x100>
     e8e:	8b cf       	rjmp	.-234    	; 0xda6 <Uart_Receive+0x16>
        index++;
    }
    

    
}
     e90:	26 96       	adiw	r28, 0x06	; 6
     e92:	0f b6       	in	r0, 0x3f	; 63
     e94:	f8 94       	cli
     e96:	de bf       	out	0x3e, r29	; 62
     e98:	0f be       	out	0x3f, r0	; 63
     e9a:	cd bf       	out	0x3d, r28	; 61
     e9c:	df 91       	pop	r29
     e9e:	cf 91       	pop	r28
     ea0:	08 95       	ret

00000ea2 <__vector_13>:

ISR(USART_RXC_vect)
{
     ea2:	1f 92       	push	r1
     ea4:	0f 92       	push	r0
     ea6:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     eaa:	0f 92       	push	r0
     eac:	11 24       	eor	r1, r1
     eae:	2f 93       	push	r18
     eb0:	3f 93       	push	r19
     eb2:	4f 93       	push	r20
     eb4:	5f 93       	push	r21
     eb6:	6f 93       	push	r22
     eb8:	7f 93       	push	r23
     eba:	8f 93       	push	r24
     ebc:	9f 93       	push	r25
     ebe:	af 93       	push	r26
     ec0:	bf 93       	push	r27
     ec2:	ef 93       	push	r30
     ec4:	ff 93       	push	r31
     ec6:	cf 93       	push	r28
     ec8:	df 93       	push	r29
     eca:	cd b7       	in	r28, 0x3d	; 61
     ecc:	de b7       	in	r29, 0x3e	; 62
    Uart_Receive(&UART_Config);
     ece:	8f e7       	ldi	r24, 0x7F	; 127
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	0e 94 c8 06 	call	0xd90	; 0xd90 <Uart_Receive>
}
     ed6:	00 00       	nop
     ed8:	df 91       	pop	r29
     eda:	cf 91       	pop	r28
     edc:	ff 91       	pop	r31
     ede:	ef 91       	pop	r30
     ee0:	bf 91       	pop	r27
     ee2:	af 91       	pop	r26
     ee4:	9f 91       	pop	r25
     ee6:	8f 91       	pop	r24
     ee8:	7f 91       	pop	r23
     eea:	6f 91       	pop	r22
     eec:	5f 91       	pop	r21
     eee:	4f 91       	pop	r20
     ef0:	3f 91       	pop	r19
     ef2:	2f 91       	pop	r18
     ef4:	0f 90       	pop	r0
     ef6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     efa:	0f 90       	pop	r0
     efc:	1f 90       	pop	r1
     efe:	18 95       	reti

00000f00 <__vector_15>:


ISR(USART_TXC_vect)
{
     f00:	1f 92       	push	r1
     f02:	0f 92       	push	r0
     f04:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     f08:	0f 92       	push	r0
     f0a:	11 24       	eor	r1, r1
     f0c:	cf 93       	push	r28
     f0e:	df 93       	push	r29
     f10:	cd b7       	in	r28, 0x3d	; 61
     f12:	de b7       	in	r29, 0x3e	; 62

}
     f14:	00 00       	nop
     f16:	df 91       	pop	r29
     f18:	cf 91       	pop	r28
     f1a:	0f 90       	pop	r0
     f1c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     f20:	0f 90       	pop	r0
     f22:	1f 90       	pop	r1
     f24:	18 95       	reti

00000f26 <__vector_14>:


ISR(USART_UDRE_vect)
{
     f26:	1f 92       	push	r1
     f28:	0f 92       	push	r0
     f2a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     f2e:	0f 92       	push	r0
     f30:	11 24       	eor	r1, r1
     f32:	2f 93       	push	r18
     f34:	8f 93       	push	r24
     f36:	9f 93       	push	r25
     f38:	ef 93       	push	r30
     f3a:	ff 93       	push	r31
     f3c:	cf 93       	push	r28
     f3e:	df 93       	push	r29
     f40:	cd b7       	in	r28, 0x3d	; 61
     f42:	de b7       	in	r29, 0x3e	; 62
    UCSRB_R->UCSRB_bits.UDRIE_b = 0;
     f44:	8a e2       	ldi	r24, 0x2A	; 42
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	fc 01       	movw	r30, r24
     f4a:	20 81       	ld	r18, Z
     f4c:	2f 7d       	andi	r18, 0xDF	; 223
     f4e:	fc 01       	movw	r30, r24
     f50:	20 83       	st	Z, r18
     f52:	00 00       	nop
     f54:	df 91       	pop	r29
     f56:	cf 91       	pop	r28
     f58:	ff 91       	pop	r31
     f5a:	ef 91       	pop	r30
     f5c:	9f 91       	pop	r25
     f5e:	8f 91       	pop	r24
     f60:	2f 91       	pop	r18
     f62:	0f 90       	pop	r0
     f64:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     f68:	0f 90       	pop	r0
     f6a:	1f 90       	pop	r1
     f6c:	18 95       	reti

00000f6e <main>:
     f6e:	cf 93       	push	r28
     f70:	df 93       	push	r29
     f72:	cd b7       	in	r28, 0x3d	; 61
     f74:	de b7       	in	r29, 0x3e	; 62
     f76:	0e 94 14 01 	call	0x228	; 0x228 <init>
     f7a:	0e 94 4e 01 	call	0x29c	; 0x29c <program>
     f7e:	fd cf       	rjmp	.-6      	; 0xf7a <main+0xc>

00000f80 <__cmpsf2>:
     f80:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__fp_cmp>
     f84:	08 f4       	brcc	.+2      	; 0xf88 <__cmpsf2+0x8>
     f86:	81 e0       	ldi	r24, 0x01	; 1
     f88:	08 95       	ret

00000f8a <__fixunssfsi>:
     f8a:	0e 94 20 08 	call	0x1040	; 0x1040 <__fp_splitA>
     f8e:	88 f0       	brcs	.+34     	; 0xfb2 <__fixunssfsi+0x28>
     f90:	9f 57       	subi	r25, 0x7F	; 127
     f92:	98 f0       	brcs	.+38     	; 0xfba <__fixunssfsi+0x30>
     f94:	b9 2f       	mov	r27, r25
     f96:	99 27       	eor	r25, r25
     f98:	b7 51       	subi	r27, 0x17	; 23
     f9a:	b0 f0       	brcs	.+44     	; 0xfc8 <__fixunssfsi+0x3e>
     f9c:	e1 f0       	breq	.+56     	; 0xfd6 <__fixunssfsi+0x4c>
     f9e:	66 0f       	add	r22, r22
     fa0:	77 1f       	adc	r23, r23
     fa2:	88 1f       	adc	r24, r24
     fa4:	99 1f       	adc	r25, r25
     fa6:	1a f0       	brmi	.+6      	; 0xfae <__fixunssfsi+0x24>
     fa8:	ba 95       	dec	r27
     faa:	c9 f7       	brne	.-14     	; 0xf9e <__fixunssfsi+0x14>
     fac:	14 c0       	rjmp	.+40     	; 0xfd6 <__fixunssfsi+0x4c>
     fae:	b1 30       	cpi	r27, 0x01	; 1
     fb0:	91 f0       	breq	.+36     	; 0xfd6 <__fixunssfsi+0x4c>
     fb2:	0e 94 3a 08 	call	0x1074	; 0x1074 <__fp_zero>
     fb6:	b1 e0       	ldi	r27, 0x01	; 1
     fb8:	08 95       	ret
     fba:	0c 94 3a 08 	jmp	0x1074	; 0x1074 <__fp_zero>
     fbe:	67 2f       	mov	r22, r23
     fc0:	78 2f       	mov	r23, r24
     fc2:	88 27       	eor	r24, r24
     fc4:	b8 5f       	subi	r27, 0xF8	; 248
     fc6:	39 f0       	breq	.+14     	; 0xfd6 <__fixunssfsi+0x4c>
     fc8:	b9 3f       	cpi	r27, 0xF9	; 249
     fca:	cc f3       	brlt	.-14     	; 0xfbe <__fixunssfsi+0x34>
     fcc:	86 95       	lsr	r24
     fce:	77 95       	ror	r23
     fd0:	67 95       	ror	r22
     fd2:	b3 95       	inc	r27
     fd4:	d9 f7       	brne	.-10     	; 0xfcc <__fixunssfsi+0x42>
     fd6:	3e f4       	brtc	.+14     	; 0xfe6 <__fixunssfsi+0x5c>
     fd8:	90 95       	com	r25
     fda:	80 95       	com	r24
     fdc:	70 95       	com	r23
     fde:	61 95       	neg	r22
     fe0:	7f 4f       	sbci	r23, 0xFF	; 255
     fe2:	8f 4f       	sbci	r24, 0xFF	; 255
     fe4:	9f 4f       	sbci	r25, 0xFF	; 255
     fe6:	08 95       	ret

00000fe8 <__fp_cmp>:
     fe8:	99 0f       	add	r25, r25
     fea:	00 08       	sbc	r0, r0
     fec:	55 0f       	add	r21, r21
     fee:	aa 0b       	sbc	r26, r26
     ff0:	e0 e8       	ldi	r30, 0x80	; 128
     ff2:	fe ef       	ldi	r31, 0xFE	; 254
     ff4:	16 16       	cp	r1, r22
     ff6:	17 06       	cpc	r1, r23
     ff8:	e8 07       	cpc	r30, r24
     ffa:	f9 07       	cpc	r31, r25
     ffc:	c0 f0       	brcs	.+48     	; 0x102e <__fp_cmp+0x46>
     ffe:	12 16       	cp	r1, r18
    1000:	13 06       	cpc	r1, r19
    1002:	e4 07       	cpc	r30, r20
    1004:	f5 07       	cpc	r31, r21
    1006:	98 f0       	brcs	.+38     	; 0x102e <__fp_cmp+0x46>
    1008:	62 1b       	sub	r22, r18
    100a:	73 0b       	sbc	r23, r19
    100c:	84 0b       	sbc	r24, r20
    100e:	95 0b       	sbc	r25, r21
    1010:	39 f4       	brne	.+14     	; 0x1020 <__fp_cmp+0x38>
    1012:	0a 26       	eor	r0, r26
    1014:	61 f0       	breq	.+24     	; 0x102e <__fp_cmp+0x46>
    1016:	23 2b       	or	r18, r19
    1018:	24 2b       	or	r18, r20
    101a:	25 2b       	or	r18, r21
    101c:	21 f4       	brne	.+8      	; 0x1026 <__fp_cmp+0x3e>
    101e:	08 95       	ret
    1020:	0a 26       	eor	r0, r26
    1022:	09 f4       	brne	.+2      	; 0x1026 <__fp_cmp+0x3e>
    1024:	a1 40       	sbci	r26, 0x01	; 1
    1026:	a6 95       	lsr	r26
    1028:	8f ef       	ldi	r24, 0xFF	; 255
    102a:	81 1d       	adc	r24, r1
    102c:	81 1d       	adc	r24, r1
    102e:	08 95       	ret

00001030 <__fp_split3>:
    1030:	57 fd       	sbrc	r21, 7
    1032:	90 58       	subi	r25, 0x80	; 128
    1034:	44 0f       	add	r20, r20
    1036:	55 1f       	adc	r21, r21
    1038:	59 f0       	breq	.+22     	; 0x1050 <__fp_splitA+0x10>
    103a:	5f 3f       	cpi	r21, 0xFF	; 255
    103c:	71 f0       	breq	.+28     	; 0x105a <__fp_splitA+0x1a>
    103e:	47 95       	ror	r20

00001040 <__fp_splitA>:
    1040:	88 0f       	add	r24, r24
    1042:	97 fb       	bst	r25, 7
    1044:	99 1f       	adc	r25, r25
    1046:	61 f0       	breq	.+24     	; 0x1060 <__fp_splitA+0x20>
    1048:	9f 3f       	cpi	r25, 0xFF	; 255
    104a:	79 f0       	breq	.+30     	; 0x106a <__fp_splitA+0x2a>
    104c:	87 95       	ror	r24
    104e:	08 95       	ret
    1050:	12 16       	cp	r1, r18
    1052:	13 06       	cpc	r1, r19
    1054:	14 06       	cpc	r1, r20
    1056:	55 1f       	adc	r21, r21
    1058:	f2 cf       	rjmp	.-28     	; 0x103e <__fp_split3+0xe>
    105a:	46 95       	lsr	r20
    105c:	f1 df       	rcall	.-30     	; 0x1040 <__fp_splitA>
    105e:	08 c0       	rjmp	.+16     	; 0x1070 <__fp_splitA+0x30>
    1060:	16 16       	cp	r1, r22
    1062:	17 06       	cpc	r1, r23
    1064:	18 06       	cpc	r1, r24
    1066:	99 1f       	adc	r25, r25
    1068:	f1 cf       	rjmp	.-30     	; 0x104c <__fp_splitA+0xc>
    106a:	86 95       	lsr	r24
    106c:	71 05       	cpc	r23, r1
    106e:	61 05       	cpc	r22, r1
    1070:	08 94       	sec
    1072:	08 95       	ret

00001074 <__fp_zero>:
    1074:	e8 94       	clt

00001076 <__fp_szero>:
    1076:	bb 27       	eor	r27, r27
    1078:	66 27       	eor	r22, r22
    107a:	77 27       	eor	r23, r23
    107c:	cb 01       	movw	r24, r22
    107e:	97 f9       	bld	r25, 7
    1080:	08 95       	ret

00001082 <__gesf2>:
    1082:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__fp_cmp>
    1086:	08 f4       	brcc	.+2      	; 0x108a <__gesf2+0x8>
    1088:	8f ef       	ldi	r24, 0xFF	; 255
    108a:	08 95       	ret

0000108c <__mulsf3>:
    108c:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__mulsf3x>
    1090:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__fp_round>
    1094:	0e 94 bc 08 	call	0x1178	; 0x1178 <__fp_pscA>
    1098:	38 f0       	brcs	.+14     	; 0x10a8 <__mulsf3+0x1c>
    109a:	0e 94 c3 08 	call	0x1186	; 0x1186 <__fp_pscB>
    109e:	20 f0       	brcs	.+8      	; 0x10a8 <__mulsf3+0x1c>
    10a0:	95 23       	and	r25, r21
    10a2:	11 f0       	breq	.+4      	; 0x10a8 <__mulsf3+0x1c>
    10a4:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_inf>
    10a8:	0c 94 b9 08 	jmp	0x1172	; 0x1172 <__fp_nan>
    10ac:	11 24       	eor	r1, r1
    10ae:	0c 94 3b 08 	jmp	0x1076	; 0x1076 <__fp_szero>

000010b2 <__mulsf3x>:
    10b2:	0e 94 18 08 	call	0x1030	; 0x1030 <__fp_split3>
    10b6:	70 f3       	brcs	.-36     	; 0x1094 <__mulsf3+0x8>

000010b8 <__mulsf3_pse>:
    10b8:	95 9f       	mul	r25, r21
    10ba:	c1 f3       	breq	.-16     	; 0x10ac <__mulsf3+0x20>
    10bc:	95 0f       	add	r25, r21
    10be:	50 e0       	ldi	r21, 0x00	; 0
    10c0:	55 1f       	adc	r21, r21
    10c2:	62 9f       	mul	r22, r18
    10c4:	f0 01       	movw	r30, r0
    10c6:	72 9f       	mul	r23, r18
    10c8:	bb 27       	eor	r27, r27
    10ca:	f0 0d       	add	r31, r0
    10cc:	b1 1d       	adc	r27, r1
    10ce:	63 9f       	mul	r22, r19
    10d0:	aa 27       	eor	r26, r26
    10d2:	f0 0d       	add	r31, r0
    10d4:	b1 1d       	adc	r27, r1
    10d6:	aa 1f       	adc	r26, r26
    10d8:	64 9f       	mul	r22, r20
    10da:	66 27       	eor	r22, r22
    10dc:	b0 0d       	add	r27, r0
    10de:	a1 1d       	adc	r26, r1
    10e0:	66 1f       	adc	r22, r22
    10e2:	82 9f       	mul	r24, r18
    10e4:	22 27       	eor	r18, r18
    10e6:	b0 0d       	add	r27, r0
    10e8:	a1 1d       	adc	r26, r1
    10ea:	62 1f       	adc	r22, r18
    10ec:	73 9f       	mul	r23, r19
    10ee:	b0 0d       	add	r27, r0
    10f0:	a1 1d       	adc	r26, r1
    10f2:	62 1f       	adc	r22, r18
    10f4:	83 9f       	mul	r24, r19
    10f6:	a0 0d       	add	r26, r0
    10f8:	61 1d       	adc	r22, r1
    10fa:	22 1f       	adc	r18, r18
    10fc:	74 9f       	mul	r23, r20
    10fe:	33 27       	eor	r19, r19
    1100:	a0 0d       	add	r26, r0
    1102:	61 1d       	adc	r22, r1
    1104:	23 1f       	adc	r18, r19
    1106:	84 9f       	mul	r24, r20
    1108:	60 0d       	add	r22, r0
    110a:	21 1d       	adc	r18, r1
    110c:	82 2f       	mov	r24, r18
    110e:	76 2f       	mov	r23, r22
    1110:	6a 2f       	mov	r22, r26
    1112:	11 24       	eor	r1, r1
    1114:	9f 57       	subi	r25, 0x7F	; 127
    1116:	50 40       	sbci	r21, 0x00	; 0
    1118:	9a f0       	brmi	.+38     	; 0x1140 <__mulsf3_pse+0x88>
    111a:	f1 f0       	breq	.+60     	; 0x1158 <__mulsf3_pse+0xa0>
    111c:	88 23       	and	r24, r24
    111e:	4a f0       	brmi	.+18     	; 0x1132 <__mulsf3_pse+0x7a>
    1120:	ee 0f       	add	r30, r30
    1122:	ff 1f       	adc	r31, r31
    1124:	bb 1f       	adc	r27, r27
    1126:	66 1f       	adc	r22, r22
    1128:	77 1f       	adc	r23, r23
    112a:	88 1f       	adc	r24, r24
    112c:	91 50       	subi	r25, 0x01	; 1
    112e:	50 40       	sbci	r21, 0x00	; 0
    1130:	a9 f7       	brne	.-22     	; 0x111c <__mulsf3_pse+0x64>
    1132:	9e 3f       	cpi	r25, 0xFE	; 254
    1134:	51 05       	cpc	r21, r1
    1136:	80 f0       	brcs	.+32     	; 0x1158 <__mulsf3_pse+0xa0>
    1138:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_inf>
    113c:	0c 94 3b 08 	jmp	0x1076	; 0x1076 <__fp_szero>
    1140:	5f 3f       	cpi	r21, 0xFF	; 255
    1142:	e4 f3       	brlt	.-8      	; 0x113c <__mulsf3_pse+0x84>
    1144:	98 3e       	cpi	r25, 0xE8	; 232
    1146:	d4 f3       	brlt	.-12     	; 0x113c <__mulsf3_pse+0x84>
    1148:	86 95       	lsr	r24
    114a:	77 95       	ror	r23
    114c:	67 95       	ror	r22
    114e:	b7 95       	ror	r27
    1150:	f7 95       	ror	r31
    1152:	e7 95       	ror	r30
    1154:	9f 5f       	subi	r25, 0xFF	; 255
    1156:	c1 f7       	brne	.-16     	; 0x1148 <__mulsf3_pse+0x90>
    1158:	fe 2b       	or	r31, r30
    115a:	88 0f       	add	r24, r24
    115c:	91 1d       	adc	r25, r1
    115e:	96 95       	lsr	r25
    1160:	87 95       	ror	r24
    1162:	97 f9       	bld	r25, 7
    1164:	08 95       	ret

00001166 <__fp_inf>:
    1166:	97 f9       	bld	r25, 7
    1168:	9f 67       	ori	r25, 0x7F	; 127
    116a:	80 e8       	ldi	r24, 0x80	; 128
    116c:	70 e0       	ldi	r23, 0x00	; 0
    116e:	60 e0       	ldi	r22, 0x00	; 0
    1170:	08 95       	ret

00001172 <__fp_nan>:
    1172:	9f ef       	ldi	r25, 0xFF	; 255
    1174:	80 ec       	ldi	r24, 0xC0	; 192
    1176:	08 95       	ret

00001178 <__fp_pscA>:
    1178:	00 24       	eor	r0, r0
    117a:	0a 94       	dec	r0
    117c:	16 16       	cp	r1, r22
    117e:	17 06       	cpc	r1, r23
    1180:	18 06       	cpc	r1, r24
    1182:	09 06       	cpc	r0, r25
    1184:	08 95       	ret

00001186 <__fp_pscB>:
    1186:	00 24       	eor	r0, r0
    1188:	0a 94       	dec	r0
    118a:	12 16       	cp	r1, r18
    118c:	13 06       	cpc	r1, r19
    118e:	14 06       	cpc	r1, r20
    1190:	05 06       	cpc	r0, r21
    1192:	08 95       	ret

00001194 <__fp_round>:
    1194:	09 2e       	mov	r0, r25
    1196:	03 94       	inc	r0
    1198:	00 0c       	add	r0, r0
    119a:	11 f4       	brne	.+4      	; 0x11a0 <__fp_round+0xc>
    119c:	88 23       	and	r24, r24
    119e:	52 f0       	brmi	.+20     	; 0x11b4 <__fp_round+0x20>
    11a0:	bb 0f       	add	r27, r27
    11a2:	40 f4       	brcc	.+16     	; 0x11b4 <__fp_round+0x20>
    11a4:	bf 2b       	or	r27, r31
    11a6:	11 f4       	brne	.+4      	; 0x11ac <__fp_round+0x18>
    11a8:	60 ff       	sbrs	r22, 0
    11aa:	04 c0       	rjmp	.+8      	; 0x11b4 <__fp_round+0x20>
    11ac:	6f 5f       	subi	r22, 0xFF	; 255
    11ae:	7f 4f       	sbci	r23, 0xFF	; 255
    11b0:	8f 4f       	sbci	r24, 0xFF	; 255
    11b2:	9f 4f       	sbci	r25, 0xFF	; 255
    11b4:	08 95       	ret

000011b6 <__umulhisi3>:
    11b6:	a2 9f       	mul	r26, r18
    11b8:	b0 01       	movw	r22, r0
    11ba:	b3 9f       	mul	r27, r19
    11bc:	c0 01       	movw	r24, r0
    11be:	a3 9f       	mul	r26, r19
    11c0:	70 0d       	add	r23, r0
    11c2:	81 1d       	adc	r24, r1
    11c4:	11 24       	eor	r1, r1
    11c6:	91 1d       	adc	r25, r1
    11c8:	b2 9f       	mul	r27, r18
    11ca:	70 0d       	add	r23, r0
    11cc:	81 1d       	adc	r24, r1
    11ce:	11 24       	eor	r1, r1
    11d0:	91 1d       	adc	r25, r1
    11d2:	08 95       	ret

000011d4 <__muluhisi3>:
    11d4:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__umulhisi3>
    11d8:	a5 9f       	mul	r26, r21
    11da:	90 0d       	add	r25, r0
    11dc:	b4 9f       	mul	r27, r20
    11de:	90 0d       	add	r25, r0
    11e0:	a4 9f       	mul	r26, r20
    11e2:	80 0d       	add	r24, r0
    11e4:	91 1d       	adc	r25, r1
    11e6:	11 24       	eor	r1, r1
    11e8:	08 95       	ret

000011ea <snprintf>:
    11ea:	ae e0       	ldi	r26, 0x0E	; 14
    11ec:	b0 e0       	ldi	r27, 0x00	; 0
    11ee:	eb ef       	ldi	r30, 0xFB	; 251
    11f0:	f8 e0       	ldi	r31, 0x08	; 8
    11f2:	0c 94 c4 0b 	jmp	0x1788	; 0x1788 <__prologue_saves__+0x1c>
    11f6:	0d 89       	ldd	r16, Y+21	; 0x15
    11f8:	1e 89       	ldd	r17, Y+22	; 0x16
    11fa:	8f 89       	ldd	r24, Y+23	; 0x17
    11fc:	98 8d       	ldd	r25, Y+24	; 0x18
    11fe:	26 e0       	ldi	r18, 0x06	; 6
    1200:	2c 83       	std	Y+4, r18	; 0x04
    1202:	1a 83       	std	Y+2, r17	; 0x02
    1204:	09 83       	std	Y+1, r16	; 0x01
    1206:	97 ff       	sbrs	r25, 7
    1208:	02 c0       	rjmp	.+4      	; 0x120e <snprintf+0x24>
    120a:	80 e0       	ldi	r24, 0x00	; 0
    120c:	90 e8       	ldi	r25, 0x80	; 128
    120e:	01 97       	sbiw	r24, 0x01	; 1
    1210:	9e 83       	std	Y+6, r25	; 0x06
    1212:	8d 83       	std	Y+5, r24	; 0x05
    1214:	ae 01       	movw	r20, r28
    1216:	45 5e       	subi	r20, 0xE5	; 229
    1218:	5f 4f       	sbci	r21, 0xFF	; 255
    121a:	69 8d       	ldd	r22, Y+25	; 0x19
    121c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    121e:	ce 01       	movw	r24, r28
    1220:	01 96       	adiw	r24, 0x01	; 1
    1222:	0e 94 25 09 	call	0x124a	; 0x124a <vfprintf>
    1226:	4d 81       	ldd	r20, Y+5	; 0x05
    1228:	5e 81       	ldd	r21, Y+6	; 0x06
    122a:	57 fd       	sbrc	r21, 7
    122c:	0a c0       	rjmp	.+20     	; 0x1242 <snprintf+0x58>
    122e:	2f 81       	ldd	r18, Y+7	; 0x07
    1230:	38 85       	ldd	r19, Y+8	; 0x08
    1232:	42 17       	cp	r20, r18
    1234:	53 07       	cpc	r21, r19
    1236:	0c f4       	brge	.+2      	; 0x123a <snprintf+0x50>
    1238:	9a 01       	movw	r18, r20
    123a:	f8 01       	movw	r30, r16
    123c:	e2 0f       	add	r30, r18
    123e:	f3 1f       	adc	r31, r19
    1240:	10 82       	st	Z, r1
    1242:	2e 96       	adiw	r28, 0x0e	; 14
    1244:	e4 e0       	ldi	r30, 0x04	; 4
    1246:	0c 94 e0 0b 	jmp	0x17c0	; 0x17c0 <__epilogue_restores__+0x1c>

0000124a <vfprintf>:
    124a:	ab e0       	ldi	r26, 0x0B	; 11
    124c:	b0 e0       	ldi	r27, 0x00	; 0
    124e:	eb e2       	ldi	r30, 0x2B	; 43
    1250:	f9 e0       	ldi	r31, 0x09	; 9
    1252:	0c 94 b6 0b 	jmp	0x176c	; 0x176c <__prologue_saves__>
    1256:	6c 01       	movw	r12, r24
    1258:	7b 01       	movw	r14, r22
    125a:	8a 01       	movw	r16, r20
    125c:	fc 01       	movw	r30, r24
    125e:	17 82       	std	Z+7, r1	; 0x07
    1260:	16 82       	std	Z+6, r1	; 0x06
    1262:	83 81       	ldd	r24, Z+3	; 0x03
    1264:	81 ff       	sbrs	r24, 1
    1266:	cc c1       	rjmp	.+920    	; 0x1600 <vfprintf+0x3b6>
    1268:	ce 01       	movw	r24, r28
    126a:	01 96       	adiw	r24, 0x01	; 1
    126c:	3c 01       	movw	r6, r24
    126e:	f6 01       	movw	r30, r12
    1270:	93 81       	ldd	r25, Z+3	; 0x03
    1272:	f7 01       	movw	r30, r14
    1274:	93 fd       	sbrc	r25, 3
    1276:	85 91       	lpm	r24, Z+
    1278:	93 ff       	sbrs	r25, 3
    127a:	81 91       	ld	r24, Z+
    127c:	7f 01       	movw	r14, r30
    127e:	88 23       	and	r24, r24
    1280:	09 f4       	brne	.+2      	; 0x1284 <vfprintf+0x3a>
    1282:	ba c1       	rjmp	.+884    	; 0x15f8 <vfprintf+0x3ae>
    1284:	85 32       	cpi	r24, 0x25	; 37
    1286:	39 f4       	brne	.+14     	; 0x1296 <vfprintf+0x4c>
    1288:	93 fd       	sbrc	r25, 3
    128a:	85 91       	lpm	r24, Z+
    128c:	93 ff       	sbrs	r25, 3
    128e:	81 91       	ld	r24, Z+
    1290:	7f 01       	movw	r14, r30
    1292:	85 32       	cpi	r24, 0x25	; 37
    1294:	29 f4       	brne	.+10     	; 0x12a0 <vfprintf+0x56>
    1296:	b6 01       	movw	r22, r12
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	0e 94 1c 0b 	call	0x1638	; 0x1638 <fputc>
    129e:	e7 cf       	rjmp	.-50     	; 0x126e <vfprintf+0x24>
    12a0:	91 2c       	mov	r9, r1
    12a2:	21 2c       	mov	r2, r1
    12a4:	31 2c       	mov	r3, r1
    12a6:	ff e1       	ldi	r31, 0x1F	; 31
    12a8:	f3 15       	cp	r31, r3
    12aa:	d8 f0       	brcs	.+54     	; 0x12e2 <vfprintf+0x98>
    12ac:	8b 32       	cpi	r24, 0x2B	; 43
    12ae:	79 f0       	breq	.+30     	; 0x12ce <vfprintf+0x84>
    12b0:	38 f4       	brcc	.+14     	; 0x12c0 <vfprintf+0x76>
    12b2:	80 32       	cpi	r24, 0x20	; 32
    12b4:	79 f0       	breq	.+30     	; 0x12d4 <vfprintf+0x8a>
    12b6:	83 32       	cpi	r24, 0x23	; 35
    12b8:	a1 f4       	brne	.+40     	; 0x12e2 <vfprintf+0x98>
    12ba:	23 2d       	mov	r18, r3
    12bc:	20 61       	ori	r18, 0x10	; 16
    12be:	1d c0       	rjmp	.+58     	; 0x12fa <vfprintf+0xb0>
    12c0:	8d 32       	cpi	r24, 0x2D	; 45
    12c2:	61 f0       	breq	.+24     	; 0x12dc <vfprintf+0x92>
    12c4:	80 33       	cpi	r24, 0x30	; 48
    12c6:	69 f4       	brne	.+26     	; 0x12e2 <vfprintf+0x98>
    12c8:	23 2d       	mov	r18, r3
    12ca:	21 60       	ori	r18, 0x01	; 1
    12cc:	16 c0       	rjmp	.+44     	; 0x12fa <vfprintf+0xb0>
    12ce:	83 2d       	mov	r24, r3
    12d0:	82 60       	ori	r24, 0x02	; 2
    12d2:	38 2e       	mov	r3, r24
    12d4:	e3 2d       	mov	r30, r3
    12d6:	e4 60       	ori	r30, 0x04	; 4
    12d8:	3e 2e       	mov	r3, r30
    12da:	2a c0       	rjmp	.+84     	; 0x1330 <vfprintf+0xe6>
    12dc:	f3 2d       	mov	r31, r3
    12de:	f8 60       	ori	r31, 0x08	; 8
    12e0:	1d c0       	rjmp	.+58     	; 0x131c <vfprintf+0xd2>
    12e2:	37 fc       	sbrc	r3, 7
    12e4:	2d c0       	rjmp	.+90     	; 0x1340 <vfprintf+0xf6>
    12e6:	20 ed       	ldi	r18, 0xD0	; 208
    12e8:	28 0f       	add	r18, r24
    12ea:	2a 30       	cpi	r18, 0x0A	; 10
    12ec:	40 f0       	brcs	.+16     	; 0x12fe <vfprintf+0xb4>
    12ee:	8e 32       	cpi	r24, 0x2E	; 46
    12f0:	b9 f4       	brne	.+46     	; 0x1320 <vfprintf+0xd6>
    12f2:	36 fc       	sbrc	r3, 6
    12f4:	81 c1       	rjmp	.+770    	; 0x15f8 <vfprintf+0x3ae>
    12f6:	23 2d       	mov	r18, r3
    12f8:	20 64       	ori	r18, 0x40	; 64
    12fa:	32 2e       	mov	r3, r18
    12fc:	19 c0       	rjmp	.+50     	; 0x1330 <vfprintf+0xe6>
    12fe:	36 fe       	sbrs	r3, 6
    1300:	06 c0       	rjmp	.+12     	; 0x130e <vfprintf+0xc4>
    1302:	8a e0       	ldi	r24, 0x0A	; 10
    1304:	98 9e       	mul	r9, r24
    1306:	20 0d       	add	r18, r0
    1308:	11 24       	eor	r1, r1
    130a:	92 2e       	mov	r9, r18
    130c:	11 c0       	rjmp	.+34     	; 0x1330 <vfprintf+0xe6>
    130e:	ea e0       	ldi	r30, 0x0A	; 10
    1310:	2e 9e       	mul	r2, r30
    1312:	20 0d       	add	r18, r0
    1314:	11 24       	eor	r1, r1
    1316:	22 2e       	mov	r2, r18
    1318:	f3 2d       	mov	r31, r3
    131a:	f0 62       	ori	r31, 0x20	; 32
    131c:	3f 2e       	mov	r3, r31
    131e:	08 c0       	rjmp	.+16     	; 0x1330 <vfprintf+0xe6>
    1320:	8c 36       	cpi	r24, 0x6C	; 108
    1322:	21 f4       	brne	.+8      	; 0x132c <vfprintf+0xe2>
    1324:	83 2d       	mov	r24, r3
    1326:	80 68       	ori	r24, 0x80	; 128
    1328:	38 2e       	mov	r3, r24
    132a:	02 c0       	rjmp	.+4      	; 0x1330 <vfprintf+0xe6>
    132c:	88 36       	cpi	r24, 0x68	; 104
    132e:	41 f4       	brne	.+16     	; 0x1340 <vfprintf+0xf6>
    1330:	f7 01       	movw	r30, r14
    1332:	93 fd       	sbrc	r25, 3
    1334:	85 91       	lpm	r24, Z+
    1336:	93 ff       	sbrs	r25, 3
    1338:	81 91       	ld	r24, Z+
    133a:	7f 01       	movw	r14, r30
    133c:	81 11       	cpse	r24, r1
    133e:	b3 cf       	rjmp	.-154    	; 0x12a6 <vfprintf+0x5c>
    1340:	98 2f       	mov	r25, r24
    1342:	9f 7d       	andi	r25, 0xDF	; 223
    1344:	95 54       	subi	r25, 0x45	; 69
    1346:	93 30       	cpi	r25, 0x03	; 3
    1348:	28 f4       	brcc	.+10     	; 0x1354 <vfprintf+0x10a>
    134a:	0c 5f       	subi	r16, 0xFC	; 252
    134c:	1f 4f       	sbci	r17, 0xFF	; 255
    134e:	9f e3       	ldi	r25, 0x3F	; 63
    1350:	99 83       	std	Y+1, r25	; 0x01
    1352:	0d c0       	rjmp	.+26     	; 0x136e <vfprintf+0x124>
    1354:	83 36       	cpi	r24, 0x63	; 99
    1356:	31 f0       	breq	.+12     	; 0x1364 <vfprintf+0x11a>
    1358:	83 37       	cpi	r24, 0x73	; 115
    135a:	71 f0       	breq	.+28     	; 0x1378 <vfprintf+0x12e>
    135c:	83 35       	cpi	r24, 0x53	; 83
    135e:	09 f0       	breq	.+2      	; 0x1362 <vfprintf+0x118>
    1360:	59 c0       	rjmp	.+178    	; 0x1414 <vfprintf+0x1ca>
    1362:	21 c0       	rjmp	.+66     	; 0x13a6 <vfprintf+0x15c>
    1364:	f8 01       	movw	r30, r16
    1366:	80 81       	ld	r24, Z
    1368:	89 83       	std	Y+1, r24	; 0x01
    136a:	0e 5f       	subi	r16, 0xFE	; 254
    136c:	1f 4f       	sbci	r17, 0xFF	; 255
    136e:	88 24       	eor	r8, r8
    1370:	83 94       	inc	r8
    1372:	91 2c       	mov	r9, r1
    1374:	53 01       	movw	r10, r6
    1376:	13 c0       	rjmp	.+38     	; 0x139e <vfprintf+0x154>
    1378:	28 01       	movw	r4, r16
    137a:	f2 e0       	ldi	r31, 0x02	; 2
    137c:	4f 0e       	add	r4, r31
    137e:	51 1c       	adc	r5, r1
    1380:	f8 01       	movw	r30, r16
    1382:	a0 80       	ld	r10, Z
    1384:	b1 80       	ldd	r11, Z+1	; 0x01
    1386:	36 fe       	sbrs	r3, 6
    1388:	03 c0       	rjmp	.+6      	; 0x1390 <vfprintf+0x146>
    138a:	69 2d       	mov	r22, r9
    138c:	70 e0       	ldi	r23, 0x00	; 0
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <vfprintf+0x14a>
    1390:	6f ef       	ldi	r22, 0xFF	; 255
    1392:	7f ef       	ldi	r23, 0xFF	; 255
    1394:	c5 01       	movw	r24, r10
    1396:	0e 94 11 0b 	call	0x1622	; 0x1622 <strnlen>
    139a:	4c 01       	movw	r8, r24
    139c:	82 01       	movw	r16, r4
    139e:	f3 2d       	mov	r31, r3
    13a0:	ff 77       	andi	r31, 0x7F	; 127
    13a2:	3f 2e       	mov	r3, r31
    13a4:	16 c0       	rjmp	.+44     	; 0x13d2 <vfprintf+0x188>
    13a6:	28 01       	movw	r4, r16
    13a8:	22 e0       	ldi	r18, 0x02	; 2
    13aa:	42 0e       	add	r4, r18
    13ac:	51 1c       	adc	r5, r1
    13ae:	f8 01       	movw	r30, r16
    13b0:	a0 80       	ld	r10, Z
    13b2:	b1 80       	ldd	r11, Z+1	; 0x01
    13b4:	36 fe       	sbrs	r3, 6
    13b6:	03 c0       	rjmp	.+6      	; 0x13be <vfprintf+0x174>
    13b8:	69 2d       	mov	r22, r9
    13ba:	70 e0       	ldi	r23, 0x00	; 0
    13bc:	02 c0       	rjmp	.+4      	; 0x13c2 <vfprintf+0x178>
    13be:	6f ef       	ldi	r22, 0xFF	; 255
    13c0:	7f ef       	ldi	r23, 0xFF	; 255
    13c2:	c5 01       	movw	r24, r10
    13c4:	0e 94 06 0b 	call	0x160c	; 0x160c <strnlen_P>
    13c8:	4c 01       	movw	r8, r24
    13ca:	f3 2d       	mov	r31, r3
    13cc:	f0 68       	ori	r31, 0x80	; 128
    13ce:	3f 2e       	mov	r3, r31
    13d0:	82 01       	movw	r16, r4
    13d2:	33 fc       	sbrc	r3, 3
    13d4:	1b c0       	rjmp	.+54     	; 0x140c <vfprintf+0x1c2>
    13d6:	82 2d       	mov	r24, r2
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	88 16       	cp	r8, r24
    13dc:	99 06       	cpc	r9, r25
    13de:	b0 f4       	brcc	.+44     	; 0x140c <vfprintf+0x1c2>
    13e0:	b6 01       	movw	r22, r12
    13e2:	80 e2       	ldi	r24, 0x20	; 32
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	0e 94 1c 0b 	call	0x1638	; 0x1638 <fputc>
    13ea:	2a 94       	dec	r2
    13ec:	f4 cf       	rjmp	.-24     	; 0x13d6 <vfprintf+0x18c>
    13ee:	f5 01       	movw	r30, r10
    13f0:	37 fc       	sbrc	r3, 7
    13f2:	85 91       	lpm	r24, Z+
    13f4:	37 fe       	sbrs	r3, 7
    13f6:	81 91       	ld	r24, Z+
    13f8:	5f 01       	movw	r10, r30
    13fa:	b6 01       	movw	r22, r12
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	0e 94 1c 0b 	call	0x1638	; 0x1638 <fputc>
    1402:	21 10       	cpse	r2, r1
    1404:	2a 94       	dec	r2
    1406:	21 e0       	ldi	r18, 0x01	; 1
    1408:	82 1a       	sub	r8, r18
    140a:	91 08       	sbc	r9, r1
    140c:	81 14       	cp	r8, r1
    140e:	91 04       	cpc	r9, r1
    1410:	71 f7       	brne	.-36     	; 0x13ee <vfprintf+0x1a4>
    1412:	e8 c0       	rjmp	.+464    	; 0x15e4 <vfprintf+0x39a>
    1414:	84 36       	cpi	r24, 0x64	; 100
    1416:	11 f0       	breq	.+4      	; 0x141c <vfprintf+0x1d2>
    1418:	89 36       	cpi	r24, 0x69	; 105
    141a:	41 f5       	brne	.+80     	; 0x146c <vfprintf+0x222>
    141c:	f8 01       	movw	r30, r16
    141e:	37 fe       	sbrs	r3, 7
    1420:	07 c0       	rjmp	.+14     	; 0x1430 <vfprintf+0x1e6>
    1422:	60 81       	ld	r22, Z
    1424:	71 81       	ldd	r23, Z+1	; 0x01
    1426:	82 81       	ldd	r24, Z+2	; 0x02
    1428:	93 81       	ldd	r25, Z+3	; 0x03
    142a:	0c 5f       	subi	r16, 0xFC	; 252
    142c:	1f 4f       	sbci	r17, 0xFF	; 255
    142e:	08 c0       	rjmp	.+16     	; 0x1440 <vfprintf+0x1f6>
    1430:	60 81       	ld	r22, Z
    1432:	71 81       	ldd	r23, Z+1	; 0x01
    1434:	07 2e       	mov	r0, r23
    1436:	00 0c       	add	r0, r0
    1438:	88 0b       	sbc	r24, r24
    143a:	99 0b       	sbc	r25, r25
    143c:	0e 5f       	subi	r16, 0xFE	; 254
    143e:	1f 4f       	sbci	r17, 0xFF	; 255
    1440:	f3 2d       	mov	r31, r3
    1442:	ff 76       	andi	r31, 0x6F	; 111
    1444:	3f 2e       	mov	r3, r31
    1446:	97 ff       	sbrs	r25, 7
    1448:	09 c0       	rjmp	.+18     	; 0x145c <vfprintf+0x212>
    144a:	90 95       	com	r25
    144c:	80 95       	com	r24
    144e:	70 95       	com	r23
    1450:	61 95       	neg	r22
    1452:	7f 4f       	sbci	r23, 0xFF	; 255
    1454:	8f 4f       	sbci	r24, 0xFF	; 255
    1456:	9f 4f       	sbci	r25, 0xFF	; 255
    1458:	f0 68       	ori	r31, 0x80	; 128
    145a:	3f 2e       	mov	r3, r31
    145c:	2a e0       	ldi	r18, 0x0A	; 10
    145e:	30 e0       	ldi	r19, 0x00	; 0
    1460:	a3 01       	movw	r20, r6
    1462:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <__ultoa_invert>
    1466:	88 2e       	mov	r8, r24
    1468:	86 18       	sub	r8, r6
    146a:	45 c0       	rjmp	.+138    	; 0x14f6 <vfprintf+0x2ac>
    146c:	85 37       	cpi	r24, 0x75	; 117
    146e:	31 f4       	brne	.+12     	; 0x147c <vfprintf+0x232>
    1470:	23 2d       	mov	r18, r3
    1472:	2f 7e       	andi	r18, 0xEF	; 239
    1474:	b2 2e       	mov	r11, r18
    1476:	2a e0       	ldi	r18, 0x0A	; 10
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	25 c0       	rjmp	.+74     	; 0x14c6 <vfprintf+0x27c>
    147c:	93 2d       	mov	r25, r3
    147e:	99 7f       	andi	r25, 0xF9	; 249
    1480:	b9 2e       	mov	r11, r25
    1482:	8f 36       	cpi	r24, 0x6F	; 111
    1484:	c1 f0       	breq	.+48     	; 0x14b6 <vfprintf+0x26c>
    1486:	18 f4       	brcc	.+6      	; 0x148e <vfprintf+0x244>
    1488:	88 35       	cpi	r24, 0x58	; 88
    148a:	79 f0       	breq	.+30     	; 0x14aa <vfprintf+0x260>
    148c:	b5 c0       	rjmp	.+362    	; 0x15f8 <vfprintf+0x3ae>
    148e:	80 37       	cpi	r24, 0x70	; 112
    1490:	19 f0       	breq	.+6      	; 0x1498 <vfprintf+0x24e>
    1492:	88 37       	cpi	r24, 0x78	; 120
    1494:	21 f0       	breq	.+8      	; 0x149e <vfprintf+0x254>
    1496:	b0 c0       	rjmp	.+352    	; 0x15f8 <vfprintf+0x3ae>
    1498:	e9 2f       	mov	r30, r25
    149a:	e0 61       	ori	r30, 0x10	; 16
    149c:	be 2e       	mov	r11, r30
    149e:	b4 fe       	sbrs	r11, 4
    14a0:	0d c0       	rjmp	.+26     	; 0x14bc <vfprintf+0x272>
    14a2:	fb 2d       	mov	r31, r11
    14a4:	f4 60       	ori	r31, 0x04	; 4
    14a6:	bf 2e       	mov	r11, r31
    14a8:	09 c0       	rjmp	.+18     	; 0x14bc <vfprintf+0x272>
    14aa:	34 fe       	sbrs	r3, 4
    14ac:	0a c0       	rjmp	.+20     	; 0x14c2 <vfprintf+0x278>
    14ae:	29 2f       	mov	r18, r25
    14b0:	26 60       	ori	r18, 0x06	; 6
    14b2:	b2 2e       	mov	r11, r18
    14b4:	06 c0       	rjmp	.+12     	; 0x14c2 <vfprintf+0x278>
    14b6:	28 e0       	ldi	r18, 0x08	; 8
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	05 c0       	rjmp	.+10     	; 0x14c6 <vfprintf+0x27c>
    14bc:	20 e1       	ldi	r18, 0x10	; 16
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	02 c0       	rjmp	.+4      	; 0x14c6 <vfprintf+0x27c>
    14c2:	20 e1       	ldi	r18, 0x10	; 16
    14c4:	32 e0       	ldi	r19, 0x02	; 2
    14c6:	f8 01       	movw	r30, r16
    14c8:	b7 fe       	sbrs	r11, 7
    14ca:	07 c0       	rjmp	.+14     	; 0x14da <vfprintf+0x290>
    14cc:	60 81       	ld	r22, Z
    14ce:	71 81       	ldd	r23, Z+1	; 0x01
    14d0:	82 81       	ldd	r24, Z+2	; 0x02
    14d2:	93 81       	ldd	r25, Z+3	; 0x03
    14d4:	0c 5f       	subi	r16, 0xFC	; 252
    14d6:	1f 4f       	sbci	r17, 0xFF	; 255
    14d8:	06 c0       	rjmp	.+12     	; 0x14e6 <vfprintf+0x29c>
    14da:	60 81       	ld	r22, Z
    14dc:	71 81       	ldd	r23, Z+1	; 0x01
    14de:	80 e0       	ldi	r24, 0x00	; 0
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	0e 5f       	subi	r16, 0xFE	; 254
    14e4:	1f 4f       	sbci	r17, 0xFF	; 255
    14e6:	a3 01       	movw	r20, r6
    14e8:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <__ultoa_invert>
    14ec:	88 2e       	mov	r8, r24
    14ee:	86 18       	sub	r8, r6
    14f0:	fb 2d       	mov	r31, r11
    14f2:	ff 77       	andi	r31, 0x7F	; 127
    14f4:	3f 2e       	mov	r3, r31
    14f6:	36 fe       	sbrs	r3, 6
    14f8:	0d c0       	rjmp	.+26     	; 0x1514 <vfprintf+0x2ca>
    14fa:	23 2d       	mov	r18, r3
    14fc:	2e 7f       	andi	r18, 0xFE	; 254
    14fe:	a2 2e       	mov	r10, r18
    1500:	89 14       	cp	r8, r9
    1502:	58 f4       	brcc	.+22     	; 0x151a <vfprintf+0x2d0>
    1504:	34 fe       	sbrs	r3, 4
    1506:	0b c0       	rjmp	.+22     	; 0x151e <vfprintf+0x2d4>
    1508:	32 fc       	sbrc	r3, 2
    150a:	09 c0       	rjmp	.+18     	; 0x151e <vfprintf+0x2d4>
    150c:	83 2d       	mov	r24, r3
    150e:	8e 7e       	andi	r24, 0xEE	; 238
    1510:	a8 2e       	mov	r10, r24
    1512:	05 c0       	rjmp	.+10     	; 0x151e <vfprintf+0x2d4>
    1514:	b8 2c       	mov	r11, r8
    1516:	a3 2c       	mov	r10, r3
    1518:	03 c0       	rjmp	.+6      	; 0x1520 <vfprintf+0x2d6>
    151a:	b8 2c       	mov	r11, r8
    151c:	01 c0       	rjmp	.+2      	; 0x1520 <vfprintf+0x2d6>
    151e:	b9 2c       	mov	r11, r9
    1520:	a4 fe       	sbrs	r10, 4
    1522:	0f c0       	rjmp	.+30     	; 0x1542 <vfprintf+0x2f8>
    1524:	fe 01       	movw	r30, r28
    1526:	e8 0d       	add	r30, r8
    1528:	f1 1d       	adc	r31, r1
    152a:	80 81       	ld	r24, Z
    152c:	80 33       	cpi	r24, 0x30	; 48
    152e:	21 f4       	brne	.+8      	; 0x1538 <vfprintf+0x2ee>
    1530:	9a 2d       	mov	r25, r10
    1532:	99 7e       	andi	r25, 0xE9	; 233
    1534:	a9 2e       	mov	r10, r25
    1536:	09 c0       	rjmp	.+18     	; 0x154a <vfprintf+0x300>
    1538:	a2 fe       	sbrs	r10, 2
    153a:	06 c0       	rjmp	.+12     	; 0x1548 <vfprintf+0x2fe>
    153c:	b3 94       	inc	r11
    153e:	b3 94       	inc	r11
    1540:	04 c0       	rjmp	.+8      	; 0x154a <vfprintf+0x300>
    1542:	8a 2d       	mov	r24, r10
    1544:	86 78       	andi	r24, 0x86	; 134
    1546:	09 f0       	breq	.+2      	; 0x154a <vfprintf+0x300>
    1548:	b3 94       	inc	r11
    154a:	a3 fc       	sbrc	r10, 3
    154c:	11 c0       	rjmp	.+34     	; 0x1570 <vfprintf+0x326>
    154e:	a0 fe       	sbrs	r10, 0
    1550:	06 c0       	rjmp	.+12     	; 0x155e <vfprintf+0x314>
    1552:	b2 14       	cp	r11, r2
    1554:	88 f4       	brcc	.+34     	; 0x1578 <vfprintf+0x32e>
    1556:	28 0c       	add	r2, r8
    1558:	92 2c       	mov	r9, r2
    155a:	9b 18       	sub	r9, r11
    155c:	0e c0       	rjmp	.+28     	; 0x157a <vfprintf+0x330>
    155e:	b2 14       	cp	r11, r2
    1560:	60 f4       	brcc	.+24     	; 0x157a <vfprintf+0x330>
    1562:	b6 01       	movw	r22, r12
    1564:	80 e2       	ldi	r24, 0x20	; 32
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	0e 94 1c 0b 	call	0x1638	; 0x1638 <fputc>
    156c:	b3 94       	inc	r11
    156e:	f7 cf       	rjmp	.-18     	; 0x155e <vfprintf+0x314>
    1570:	b2 14       	cp	r11, r2
    1572:	18 f4       	brcc	.+6      	; 0x157a <vfprintf+0x330>
    1574:	2b 18       	sub	r2, r11
    1576:	02 c0       	rjmp	.+4      	; 0x157c <vfprintf+0x332>
    1578:	98 2c       	mov	r9, r8
    157a:	21 2c       	mov	r2, r1
    157c:	a4 fe       	sbrs	r10, 4
    157e:	10 c0       	rjmp	.+32     	; 0x15a0 <vfprintf+0x356>
    1580:	b6 01       	movw	r22, r12
    1582:	80 e3       	ldi	r24, 0x30	; 48
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	0e 94 1c 0b 	call	0x1638	; 0x1638 <fputc>
    158a:	a2 fe       	sbrs	r10, 2
    158c:	17 c0       	rjmp	.+46     	; 0x15bc <vfprintf+0x372>
    158e:	a1 fc       	sbrc	r10, 1
    1590:	03 c0       	rjmp	.+6      	; 0x1598 <vfprintf+0x34e>
    1592:	88 e7       	ldi	r24, 0x78	; 120
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	02 c0       	rjmp	.+4      	; 0x159c <vfprintf+0x352>
    1598:	88 e5       	ldi	r24, 0x58	; 88
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	b6 01       	movw	r22, r12
    159e:	0c c0       	rjmp	.+24     	; 0x15b8 <vfprintf+0x36e>
    15a0:	8a 2d       	mov	r24, r10
    15a2:	86 78       	andi	r24, 0x86	; 134
    15a4:	59 f0       	breq	.+22     	; 0x15bc <vfprintf+0x372>
    15a6:	a1 fe       	sbrs	r10, 1
    15a8:	02 c0       	rjmp	.+4      	; 0x15ae <vfprintf+0x364>
    15aa:	8b e2       	ldi	r24, 0x2B	; 43
    15ac:	01 c0       	rjmp	.+2      	; 0x15b0 <vfprintf+0x366>
    15ae:	80 e2       	ldi	r24, 0x20	; 32
    15b0:	a7 fc       	sbrc	r10, 7
    15b2:	8d e2       	ldi	r24, 0x2D	; 45
    15b4:	b6 01       	movw	r22, r12
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	0e 94 1c 0b 	call	0x1638	; 0x1638 <fputc>
    15bc:	89 14       	cp	r8, r9
    15be:	38 f4       	brcc	.+14     	; 0x15ce <vfprintf+0x384>
    15c0:	b6 01       	movw	r22, r12
    15c2:	80 e3       	ldi	r24, 0x30	; 48
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	0e 94 1c 0b 	call	0x1638	; 0x1638 <fputc>
    15ca:	9a 94       	dec	r9
    15cc:	f7 cf       	rjmp	.-18     	; 0x15bc <vfprintf+0x372>
    15ce:	8a 94       	dec	r8
    15d0:	f3 01       	movw	r30, r6
    15d2:	e8 0d       	add	r30, r8
    15d4:	f1 1d       	adc	r31, r1
    15d6:	80 81       	ld	r24, Z
    15d8:	b6 01       	movw	r22, r12
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	0e 94 1c 0b 	call	0x1638	; 0x1638 <fputc>
    15e0:	81 10       	cpse	r8, r1
    15e2:	f5 cf       	rjmp	.-22     	; 0x15ce <vfprintf+0x384>
    15e4:	22 20       	and	r2, r2
    15e6:	09 f4       	brne	.+2      	; 0x15ea <vfprintf+0x3a0>
    15e8:	42 ce       	rjmp	.-892    	; 0x126e <vfprintf+0x24>
    15ea:	b6 01       	movw	r22, r12
    15ec:	80 e2       	ldi	r24, 0x20	; 32
    15ee:	90 e0       	ldi	r25, 0x00	; 0
    15f0:	0e 94 1c 0b 	call	0x1638	; 0x1638 <fputc>
    15f4:	2a 94       	dec	r2
    15f6:	f6 cf       	rjmp	.-20     	; 0x15e4 <vfprintf+0x39a>
    15f8:	f6 01       	movw	r30, r12
    15fa:	86 81       	ldd	r24, Z+6	; 0x06
    15fc:	97 81       	ldd	r25, Z+7	; 0x07
    15fe:	02 c0       	rjmp	.+4      	; 0x1604 <vfprintf+0x3ba>
    1600:	8f ef       	ldi	r24, 0xFF	; 255
    1602:	9f ef       	ldi	r25, 0xFF	; 255
    1604:	2b 96       	adiw	r28, 0x0b	; 11
    1606:	e2 e1       	ldi	r30, 0x12	; 18
    1608:	0c 94 d2 0b 	jmp	0x17a4	; 0x17a4 <__epilogue_restores__>

0000160c <strnlen_P>:
    160c:	fc 01       	movw	r30, r24
    160e:	05 90       	lpm	r0, Z+
    1610:	61 50       	subi	r22, 0x01	; 1
    1612:	70 40       	sbci	r23, 0x00	; 0
    1614:	01 10       	cpse	r0, r1
    1616:	d8 f7       	brcc	.-10     	; 0x160e <strnlen_P+0x2>
    1618:	80 95       	com	r24
    161a:	90 95       	com	r25
    161c:	8e 0f       	add	r24, r30
    161e:	9f 1f       	adc	r25, r31
    1620:	08 95       	ret

00001622 <strnlen>:
    1622:	fc 01       	movw	r30, r24
    1624:	61 50       	subi	r22, 0x01	; 1
    1626:	70 40       	sbci	r23, 0x00	; 0
    1628:	01 90       	ld	r0, Z+
    162a:	01 10       	cpse	r0, r1
    162c:	d8 f7       	brcc	.-10     	; 0x1624 <strnlen+0x2>
    162e:	80 95       	com	r24
    1630:	90 95       	com	r25
    1632:	8e 0f       	add	r24, r30
    1634:	9f 1f       	adc	r25, r31
    1636:	08 95       	ret

00001638 <fputc>:
    1638:	0f 93       	push	r16
    163a:	1f 93       	push	r17
    163c:	cf 93       	push	r28
    163e:	df 93       	push	r29
    1640:	fb 01       	movw	r30, r22
    1642:	23 81       	ldd	r18, Z+3	; 0x03
    1644:	21 fd       	sbrc	r18, 1
    1646:	03 c0       	rjmp	.+6      	; 0x164e <fputc+0x16>
    1648:	8f ef       	ldi	r24, 0xFF	; 255
    164a:	9f ef       	ldi	r25, 0xFF	; 255
    164c:	2c c0       	rjmp	.+88     	; 0x16a6 <fputc+0x6e>
    164e:	22 ff       	sbrs	r18, 2
    1650:	16 c0       	rjmp	.+44     	; 0x167e <fputc+0x46>
    1652:	46 81       	ldd	r20, Z+6	; 0x06
    1654:	57 81       	ldd	r21, Z+7	; 0x07
    1656:	24 81       	ldd	r18, Z+4	; 0x04
    1658:	35 81       	ldd	r19, Z+5	; 0x05
    165a:	42 17       	cp	r20, r18
    165c:	53 07       	cpc	r21, r19
    165e:	44 f4       	brge	.+16     	; 0x1670 <fputc+0x38>
    1660:	a0 81       	ld	r26, Z
    1662:	b1 81       	ldd	r27, Z+1	; 0x01
    1664:	9d 01       	movw	r18, r26
    1666:	2f 5f       	subi	r18, 0xFF	; 255
    1668:	3f 4f       	sbci	r19, 0xFF	; 255
    166a:	31 83       	std	Z+1, r19	; 0x01
    166c:	20 83       	st	Z, r18
    166e:	8c 93       	st	X, r24
    1670:	26 81       	ldd	r18, Z+6	; 0x06
    1672:	37 81       	ldd	r19, Z+7	; 0x07
    1674:	2f 5f       	subi	r18, 0xFF	; 255
    1676:	3f 4f       	sbci	r19, 0xFF	; 255
    1678:	37 83       	std	Z+7, r19	; 0x07
    167a:	26 83       	std	Z+6, r18	; 0x06
    167c:	14 c0       	rjmp	.+40     	; 0x16a6 <fputc+0x6e>
    167e:	8b 01       	movw	r16, r22
    1680:	ec 01       	movw	r28, r24
    1682:	fb 01       	movw	r30, r22
    1684:	00 84       	ldd	r0, Z+8	; 0x08
    1686:	f1 85       	ldd	r31, Z+9	; 0x09
    1688:	e0 2d       	mov	r30, r0
    168a:	09 95       	icall
    168c:	89 2b       	or	r24, r25
    168e:	e1 f6       	brne	.-72     	; 0x1648 <fputc+0x10>
    1690:	d8 01       	movw	r26, r16
    1692:	16 96       	adiw	r26, 0x06	; 6
    1694:	8d 91       	ld	r24, X+
    1696:	9c 91       	ld	r25, X
    1698:	17 97       	sbiw	r26, 0x07	; 7
    169a:	01 96       	adiw	r24, 0x01	; 1
    169c:	17 96       	adiw	r26, 0x07	; 7
    169e:	9c 93       	st	X, r25
    16a0:	8e 93       	st	-X, r24
    16a2:	16 97       	sbiw	r26, 0x06	; 6
    16a4:	ce 01       	movw	r24, r28
    16a6:	df 91       	pop	r29
    16a8:	cf 91       	pop	r28
    16aa:	1f 91       	pop	r17
    16ac:	0f 91       	pop	r16
    16ae:	08 95       	ret

000016b0 <__ultoa_invert>:
    16b0:	fa 01       	movw	r30, r20
    16b2:	aa 27       	eor	r26, r26
    16b4:	28 30       	cpi	r18, 0x08	; 8
    16b6:	51 f1       	breq	.+84     	; 0x170c <__ultoa_invert+0x5c>
    16b8:	20 31       	cpi	r18, 0x10	; 16
    16ba:	81 f1       	breq	.+96     	; 0x171c <__ultoa_invert+0x6c>
    16bc:	e8 94       	clt
    16be:	6f 93       	push	r22
    16c0:	6e 7f       	andi	r22, 0xFE	; 254
    16c2:	6e 5f       	subi	r22, 0xFE	; 254
    16c4:	7f 4f       	sbci	r23, 0xFF	; 255
    16c6:	8f 4f       	sbci	r24, 0xFF	; 255
    16c8:	9f 4f       	sbci	r25, 0xFF	; 255
    16ca:	af 4f       	sbci	r26, 0xFF	; 255
    16cc:	b1 e0       	ldi	r27, 0x01	; 1
    16ce:	3e d0       	rcall	.+124    	; 0x174c <__ultoa_invert+0x9c>
    16d0:	b4 e0       	ldi	r27, 0x04	; 4
    16d2:	3c d0       	rcall	.+120    	; 0x174c <__ultoa_invert+0x9c>
    16d4:	67 0f       	add	r22, r23
    16d6:	78 1f       	adc	r23, r24
    16d8:	89 1f       	adc	r24, r25
    16da:	9a 1f       	adc	r25, r26
    16dc:	a1 1d       	adc	r26, r1
    16de:	68 0f       	add	r22, r24
    16e0:	79 1f       	adc	r23, r25
    16e2:	8a 1f       	adc	r24, r26
    16e4:	91 1d       	adc	r25, r1
    16e6:	a1 1d       	adc	r26, r1
    16e8:	6a 0f       	add	r22, r26
    16ea:	71 1d       	adc	r23, r1
    16ec:	81 1d       	adc	r24, r1
    16ee:	91 1d       	adc	r25, r1
    16f0:	a1 1d       	adc	r26, r1
    16f2:	20 d0       	rcall	.+64     	; 0x1734 <__ultoa_invert+0x84>
    16f4:	09 f4       	brne	.+2      	; 0x16f8 <__ultoa_invert+0x48>
    16f6:	68 94       	set
    16f8:	3f 91       	pop	r19
    16fa:	2a e0       	ldi	r18, 0x0A	; 10
    16fc:	26 9f       	mul	r18, r22
    16fe:	11 24       	eor	r1, r1
    1700:	30 19       	sub	r19, r0
    1702:	30 5d       	subi	r19, 0xD0	; 208
    1704:	31 93       	st	Z+, r19
    1706:	de f6       	brtc	.-74     	; 0x16be <__ultoa_invert+0xe>
    1708:	cf 01       	movw	r24, r30
    170a:	08 95       	ret
    170c:	46 2f       	mov	r20, r22
    170e:	47 70       	andi	r20, 0x07	; 7
    1710:	40 5d       	subi	r20, 0xD0	; 208
    1712:	41 93       	st	Z+, r20
    1714:	b3 e0       	ldi	r27, 0x03	; 3
    1716:	0f d0       	rcall	.+30     	; 0x1736 <__ultoa_invert+0x86>
    1718:	c9 f7       	brne	.-14     	; 0x170c <__ultoa_invert+0x5c>
    171a:	f6 cf       	rjmp	.-20     	; 0x1708 <__ultoa_invert+0x58>
    171c:	46 2f       	mov	r20, r22
    171e:	4f 70       	andi	r20, 0x0F	; 15
    1720:	40 5d       	subi	r20, 0xD0	; 208
    1722:	4a 33       	cpi	r20, 0x3A	; 58
    1724:	18 f0       	brcs	.+6      	; 0x172c <__ultoa_invert+0x7c>
    1726:	49 5d       	subi	r20, 0xD9	; 217
    1728:	31 fd       	sbrc	r19, 1
    172a:	40 52       	subi	r20, 0x20	; 32
    172c:	41 93       	st	Z+, r20
    172e:	02 d0       	rcall	.+4      	; 0x1734 <__ultoa_invert+0x84>
    1730:	a9 f7       	brne	.-22     	; 0x171c <__ultoa_invert+0x6c>
    1732:	ea cf       	rjmp	.-44     	; 0x1708 <__ultoa_invert+0x58>
    1734:	b4 e0       	ldi	r27, 0x04	; 4
    1736:	a6 95       	lsr	r26
    1738:	97 95       	ror	r25
    173a:	87 95       	ror	r24
    173c:	77 95       	ror	r23
    173e:	67 95       	ror	r22
    1740:	ba 95       	dec	r27
    1742:	c9 f7       	brne	.-14     	; 0x1736 <__ultoa_invert+0x86>
    1744:	00 97       	sbiw	r24, 0x00	; 0
    1746:	61 05       	cpc	r22, r1
    1748:	71 05       	cpc	r23, r1
    174a:	08 95       	ret
    174c:	9b 01       	movw	r18, r22
    174e:	ac 01       	movw	r20, r24
    1750:	0a 2e       	mov	r0, r26
    1752:	06 94       	lsr	r0
    1754:	57 95       	ror	r21
    1756:	47 95       	ror	r20
    1758:	37 95       	ror	r19
    175a:	27 95       	ror	r18
    175c:	ba 95       	dec	r27
    175e:	c9 f7       	brne	.-14     	; 0x1752 <__ultoa_invert+0xa2>
    1760:	62 0f       	add	r22, r18
    1762:	73 1f       	adc	r23, r19
    1764:	84 1f       	adc	r24, r20
    1766:	95 1f       	adc	r25, r21
    1768:	a0 1d       	adc	r26, r0
    176a:	08 95       	ret

0000176c <__prologue_saves__>:
    176c:	2f 92       	push	r2
    176e:	3f 92       	push	r3
    1770:	4f 92       	push	r4
    1772:	5f 92       	push	r5
    1774:	6f 92       	push	r6
    1776:	7f 92       	push	r7
    1778:	8f 92       	push	r8
    177a:	9f 92       	push	r9
    177c:	af 92       	push	r10
    177e:	bf 92       	push	r11
    1780:	cf 92       	push	r12
    1782:	df 92       	push	r13
    1784:	ef 92       	push	r14
    1786:	ff 92       	push	r15
    1788:	0f 93       	push	r16
    178a:	1f 93       	push	r17
    178c:	cf 93       	push	r28
    178e:	df 93       	push	r29
    1790:	cd b7       	in	r28, 0x3d	; 61
    1792:	de b7       	in	r29, 0x3e	; 62
    1794:	ca 1b       	sub	r28, r26
    1796:	db 0b       	sbc	r29, r27
    1798:	0f b6       	in	r0, 0x3f	; 63
    179a:	f8 94       	cli
    179c:	de bf       	out	0x3e, r29	; 62
    179e:	0f be       	out	0x3f, r0	; 63
    17a0:	cd bf       	out	0x3d, r28	; 61
    17a2:	09 94       	ijmp

000017a4 <__epilogue_restores__>:
    17a4:	2a 88       	ldd	r2, Y+18	; 0x12
    17a6:	39 88       	ldd	r3, Y+17	; 0x11
    17a8:	48 88       	ldd	r4, Y+16	; 0x10
    17aa:	5f 84       	ldd	r5, Y+15	; 0x0f
    17ac:	6e 84       	ldd	r6, Y+14	; 0x0e
    17ae:	7d 84       	ldd	r7, Y+13	; 0x0d
    17b0:	8c 84       	ldd	r8, Y+12	; 0x0c
    17b2:	9b 84       	ldd	r9, Y+11	; 0x0b
    17b4:	aa 84       	ldd	r10, Y+10	; 0x0a
    17b6:	b9 84       	ldd	r11, Y+9	; 0x09
    17b8:	c8 84       	ldd	r12, Y+8	; 0x08
    17ba:	df 80       	ldd	r13, Y+7	; 0x07
    17bc:	ee 80       	ldd	r14, Y+6	; 0x06
    17be:	fd 80       	ldd	r15, Y+5	; 0x05
    17c0:	0c 81       	ldd	r16, Y+4	; 0x04
    17c2:	1b 81       	ldd	r17, Y+3	; 0x03
    17c4:	aa 81       	ldd	r26, Y+2	; 0x02
    17c6:	b9 81       	ldd	r27, Y+1	; 0x01
    17c8:	ce 0f       	add	r28, r30
    17ca:	d1 1d       	adc	r29, r1
    17cc:	0f b6       	in	r0, 0x3f	; 63
    17ce:	f8 94       	cli
    17d0:	de bf       	out	0x3e, r29	; 62
    17d2:	0f be       	out	0x3f, r0	; 63
    17d4:	cd bf       	out	0x3d, r28	; 61
    17d6:	ed 01       	movw	r28, r26
    17d8:	08 95       	ret

000017da <_exit>:
    17da:	f8 94       	cli

000017dc <__stop_program>:
    17dc:	ff cf       	rjmp	.-2      	; 0x17dc <__stop_program>
